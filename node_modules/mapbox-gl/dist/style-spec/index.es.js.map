{"version":3,"file":"index.es.js","sources":["../../../node_modules/json-stringify-pretty-compact/index.js","../format.ts","../visit.ts","../migrate/v8.ts","../expression/parsing_error.ts","../expression/scope.ts","../expression/types.ts","../../../node_modules/csscolorparser/csscolorparser.js","../util/interpolate.ts","../util/color.ts","../expression/types/collator.ts","../expression/types/formatted.ts","../expression/types/image_id.ts","../expression/types/image_variant.ts","../expression/types/resolved_image.ts","../expression/values.ts","../expression/definitions/literal.ts","../expression/runtime_error.ts","../expression/definitions/assertion.ts","../expression/definitions/format.ts","../expression/definitions/image.ts","../util/get_type.ts","../expression/definitions/coercion.ts","../expression/evaluation_context.ts","../expression/compound_expression.ts","../expression/definitions/collator.ts","../../../node_modules/@mapbox/point-geometry/index.js","../util/geometry_util.ts","../expression/definitions/within.ts","../../../node_modules/cheap-ruler/index.js","../../../node_modules/tinyqueue/index.js","../data/extent.ts","../expression/definitions/distance.ts","../expression/is_constant.ts","../expression/definitions/config.ts","../expression/definitions/var.ts","../expression/parsing_context.ts","../expression/stops.ts","../expression/definitions/step.ts","../../../node_modules/@mapbox/unitbezier/index.js","../util/color_spaces.ts","../expression/definitions/interpolate.ts","../expression/definitions/coalesce.ts","../expression/definitions/let.ts","../expression/definitions/at.ts","../expression/definitions/at_interpolated.ts","../expression/definitions/in.ts","../expression/definitions/index_of.ts","../expression/definitions/match.ts","../expression/definitions/case.ts","../expression/definitions/slice.ts","../expression/definitions/split.ts","../expression/definitions/comparison.ts","../expression/definitions/number_format.ts","../expression/definitions/length.ts","../util/random.ts","../expression/definitions/index.ts","../util/result.ts","../util/properties.ts","../function/index.ts","../expression/index.ts","../function/convert.ts","../util/unbundle_jsonlint.ts","../feature_filter/index.ts","../feature_filter/convert.ts","../migrate/expressions.ts","../migrate.ts","../composite.ts","../util/ref_properties.ts","../deref.ts","../util/deep_equal.ts","../diff.ts","../error/validation_error.ts","../error/parsing_error.ts","../validate/validate_import.ts","../validate/validate_array.ts","../validate/validate_number.ts","../validate/validate_function.ts","../validate/validate_expression.ts","../validate/validate_boolean.ts","../validate/validate_color.ts","../validate/validate_enum.ts","../validate/validate_filter.ts","../validate/validate_property.ts","../validate/validate_appearance.ts","../validate/validate_paint_property.ts","../validate/validate_layout_property.ts","../validate/validate_layer.ts","../validate/validate_string.ts","../validate/validate_source.ts","../validate/validate_model.ts","../validate/validate_light.ts","../validate/validate_lights.ts","../validate/validate_terrain.ts","../validate/validate_fog.ts","../validate/validate_formatted.ts","../validate/validate_image.ts","../validate/validate_projection.ts","../validate/validate_iconset.ts","../validate/validate.ts","../validate/validate_object.ts","../validate/validate_glyphs_url.ts","../validate/validate_style.ts","../validate_style.min.ts","../../../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js","../read_style.ts","../validate_style.ts","../validate_mapbox_api_supported.ts","../style-spec.ts"],"sourcesContent":["// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nexport default function stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\n\nimport reference from './reference/latest';\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\nfunction sortKeysBy(obj, reference) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const result: Record<string, any> = {};\n    for (const key in reference) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (obj[key] !== undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Format a Mapbox GL Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a Mapbox GL Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('mapbox-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (style.layers) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n\n    return stringifyPretty(style, {indent: space});\n}\n\nexport default format;\n","import Reference from './reference/v8.json';\n\nimport type {StylePropertySpecification} from './style-spec';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    LayerSpecification,\n    PropertyValueSpecification\n} from './types';\n\nfunction getPropertyReference(propertyName: string): StylePropertySpecification {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (key === propertyName) return Reference[Reference.layout[i]][key] as StylePropertySpecification;\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (key === propertyName) return Reference[Reference.paint[i]][key] as StylePropertySpecification;\n        }\n    }\n\n    return null;\n}\n\nexport function eachSource(style: StyleSpecification, callback: (_: SourceSpecification) => void) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\n\nexport function eachLayer(style: StyleSpecification, callback: (_: LayerSpecification) => void) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\n\ntype PropertyCallback = (\n    arg1: {\n        path: [string, 'paint' | 'layout', string] // [layerid, paint/layout, property key];\n        key: string;\n        value: PropertyValueSpecification<unknown>;\n        reference: StylePropertySpecification;\n        set: (\n            arg1: PropertyValueSpecification<unknown>,\n        ) => void;\n    },\n) => void;\n\nexport function eachProperty(\n    style: StyleSpecification,\n    options: {\n        paint?: boolean;\n        layout?: boolean;\n    },\n    callback: PropertyCallback\n) {\n    function inner(layer: LayerSpecification, propertyType: 'paint' | 'layout') {\n        if (layer.type === 'slot' || layer.type === 'clip') return;\n        const properties = layer[propertyType];\n        if (!properties) return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\nimport {eachSource, eachLayer, eachProperty} from '../visit';\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n        return resolveConstant(style, style.constants[value]);\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return value;\n    }\n}\n\nfunction isFunction(value) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return Array.isArray(value.stops);\n}\n\nfunction renameProperty(obj, from, to) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    obj[to] = obj[from]; delete obj[from];\n}\n\nexport default function (style) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    style.version = 8;\n\n    // Rename properties, reverse coordinates in source and layers\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source.url !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n\n        eachPaint(layer, (paint) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n\n    // Inline Constants\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    eachProperty(style, {paint: true, layout: true}, (property) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const value = resolveConstant(style, property.value);\n\n        if (isFunction(value)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            value.stops.forEach((stop) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n\n        property.set(value);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    delete style.constants;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n\n        eachLayout(layer, (layout) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            delete layout['text-max-size'];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            delete layout['icon-max-size'];\n        });\n\n        eachPaint(layer, (paint) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (paint['text-size']) {\n                if (!layer.layout) layer.layout = {};\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                layer.layout['text-size'] = paint['text-size'];\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                delete paint['text-size'];\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (paint['icon-size']) {\n                if (!layer.layout) layer.layout = {};\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                layer.layout['icon-size'] = paint['icon-size'];\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                delete paint['icon-size'];\n            }\n        });\n    });\n\n    function migrateFontstackURL(input) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const inputParsed = new URL(input);\n        const inputPathnameParts = inputParsed.pathname.split('/');\n\n        if (inputParsed.protocol !== 'mapbox:') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return input;\n\n        } else if (inputParsed.hostname === 'fontstack') {\n            assert(decodeURI(inputParsed.pathname) === '/{fontstack}/{range}.pbf');\n            return 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf';\n\n        } else if (inputParsed.hostname === 'fonts') {\n            assert(inputPathnameParts[1] === 'v1');\n            assert(decodeURI(inputPathnameParts[3]) === '{fontstack}');\n            assert(decodeURI(inputPathnameParts[4]) === '{range}.pbf');\n            return `mapbox://fonts/${inputPathnameParts[2]}/{fontstack}/{range}.pbf`;\n\n        } else {\n            assert(false);\n        }\n\n        function assert(predicate) {\n            if (!predicate) {\n                throw new Error(`Invalid font url: \"${input}\"`);\n            }\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (style.glyphs) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        style.glyphs = migrateFontstackURL(style.glyphs);\n    }\n\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            return string.split(',').map((s) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n                return s.trim();\n            });\n        }\n\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return font;\n\n        } else if (typeof font === 'string') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return splitAndTrim(font);\n\n        } else if (typeof font === 'object') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            font.stops.forEach((stop) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return font;\n\n        } else {\n            throw new Error(\"unexpected font value\");\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (layout['text-font']) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n\n    let firstSymbolLayer = 0;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        const layer = style.layers[i];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    symbolLayers.reverse();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    style.layers = style.layers.concat(symbolLayers);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return style;\n}\n","class ParsingError extends Error {\n    key: string;\n    override message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","import type {Expression} from './expression';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: Scope | null | undefined;\n    bindings: {\n        [_: string]: Expression;\n    };\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>): Scope {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","export type NullTypeT = {\n    kind: 'null';\n};\nexport type NumberTypeT = {\n    kind: 'number';\n};\nexport type StringTypeT = {\n    kind: 'string';\n};\nexport type BooleanTypeT = {\n    kind: 'boolean';\n};\nexport type ColorTypeT = {\n    kind: 'color';\n};\nexport type ObjectTypeT = {\n    kind: 'object';\n};\nexport type ValueTypeT = {\n    kind: 'value';\n};\nexport type ErrorTypeT = {\n    kind: 'error';\n};\nexport type CollatorTypeT = {\n    kind: 'collator';\n};\nexport type FormattedTypeT = {\n    kind: 'formatted';\n};\nexport type ResolvedImageTypeT = {\n    kind: 'resolvedImage';\n};\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    | NullTypeT\n    | NumberTypeT\n    | StringTypeT\n    | BooleanTypeT\n    | ColorTypeT\n    | ObjectTypeT\n    | ValueTypeT\n    | ArrayType\n    | ErrorTypeT\n    | CollatorTypeT\n    | FormattedTypeT\n    | ResolvedImageTypeT;\n\nexport type ArrayType = {\n    kind: 'array';\n    itemType: Type;\n    N: number | null | undefined;\n};\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object';\n\nexport const NullType = {kind: 'null'} as const;\nexport const NumberType = {kind: 'number'} as const;\nexport const StringType = {kind: 'string'} as const;\nexport const BooleanType = {kind: 'boolean'} as const;\nexport const ColorType = {kind: 'color'} as const;\nexport const ObjectType = {kind: 'object'} as const;\nexport const ValueType = {kind: 'value'} as const;\nexport const ErrorType = {kind: 'error'} as const;\nexport const CollatorType = {kind: 'collator'} as const;\nexport const FormattedType = {kind: 'formatted'} as const;\nexport const ResolvedImageType = {kind: 'resolvedImage'} as const;\n\nexport function array(itemType: Type, N?: number | null): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): string | null | undefined {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: unknown, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\nexport function typeEquals(a: Type, b: Type): boolean {\n    if (a.kind === 'array' && b.kind === 'array') {\n        return a.N === b.N && typeEquals(a.itemType, b.itemType);\n    } else {\n        return a.kind === b.kind;\n    }\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","import Color from './color';\n\nexport function number(a: number, b: number, t: number): number {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number): Color {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","import {parseCSSColor} from 'csscolorparser';\nimport {number as lerp} from './interpolate';\n\nimport type {LUT} from '../types/lut';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n    static blue: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | undefined {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255,\n            rgba[1] / 255,\n            rgba[2] / 255,\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = [\n            this.r,\n            this.g,\n            this.b,\n            this.a\n        ];\n        return `rgba(${Math.round(r * 255)},${Math.round(g * 255)},${Math.round(b * 255)},${a})`;\n    }\n\n    toNonPremultipliedRenderColor(lut: LUT | null): NonPremultipliedRenderColor {\n        const {r, g, b, a} = this;\n        return new NonPremultipliedRenderColor(lut, r, g, b, a);\n    }\n\n    toPremultipliedRenderColor(lut: LUT | null): NonPremultipliedRenderColor {\n        const {r, g, b, a} = this;\n        return new PremultipliedRenderColor(lut, r * a, g * a, b * a, a);\n    }\n\n    clone(): Color {\n        return new Color(this.r, this.g, this.b, this.a);\n    }\n}\n\nexport abstract class RenderColor {\n    premultiplied: boolean = false;\n\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(lut: LUT | null, r: number, g: number, b: number, a: number, premultiplied: boolean = false) {\n        this.premultiplied = premultiplied;\n        if (!lut) {\n            this.r = r;\n            this.g = g;\n            this.b = b;\n            this.a = a;\n        } else {\n            const N = lut.image.height;\n            const N2 = N * N;\n\n            // Normalize to cube dimensions.\n\n            if (this.premultiplied) {\n                r = a === 0 ? 0 : (r / a) * (N - 1);\n                g = a === 0 ? 0 : (g / a) * (N - 1);\n                b = a === 0 ? 0 : (b / a) * (N - 1);\n            } else {\n                r = r * (N - 1);\n                g = g * (N - 1);\n                b = b * (N - 1);\n            }\n\n            // Determine boundary values for the cube the color is in.\n            const r0 = Math.floor(r);\n            const g0 = Math.floor(g);\n            const b0 = Math.floor(b);\n            const r1 = Math.ceil(r);\n            const g1 = Math.ceil(g);\n            const b1 = Math.ceil(b);\n\n            // Determine weights within the cube.\n            const rw = r - r0;\n            const gw = g - g0;\n            const bw = b - b0;\n\n            const data = lut.image.data;\n            const i0 = (r0 + g0 * N2 + b0 * N) * 4;\n            const i1 = (r0 + g0 * N2 + b1 * N) * 4;\n            const i2 = (r0 + g1 * N2 + b0 * N) * 4;\n            const i3 = (r0 + g1 * N2 + b1 * N) * 4;\n            const i4 = (r1 + g0 * N2 + b0 * N) * 4;\n            const i5 = (r1 + g0 * N2 + b1 * N) * 4;\n            const i6 = (r1 + g1 * N2 + b0 * N) * 4;\n            const i7 = (r1 + g1 * N2 + b1 * N) * 4;\n            if (i0 < 0 || i7 >= data.length) {\n                throw new Error(\"out of range\");\n            }\n\n            // Trilinear interpolation.\n            this.r = lerp(\n                lerp(\n                    lerp(data[i0], data[i1], bw),\n                    lerp(data[i2], data[i3], bw), gw),\n                lerp(\n                    lerp(data[i4], data[i5], bw),\n                    lerp(data[i6], data[i7], bw), gw), rw) / 255 * (this.premultiplied ? a : 1);\n            this.g = lerp(\n                lerp(\n                    lerp(data[i0 + 1], data[i1 + 1], bw),\n                    lerp(data[i2 + 1], data[i3 + 1], bw), gw),\n                lerp(\n                    lerp(data[i4 + 1], data[i5 + 1], bw),\n                    lerp(data[i6 + 1], data[i7 + 1], bw), gw), rw) / 255 * (this.premultiplied ? a : 1);\n            this.b = lerp(\n                lerp(\n                    lerp(data[i0 + 2], data[i1 + 2], bw),\n                    lerp(data[i2 + 2], data[i3 + 2], bw), gw),\n                lerp(\n                    lerp(data[i4 + 2], data[i5 + 2], bw),\n                    lerp(data[i6 + 2], data[i7 + 2], bw), gw), rw) / 255 * (this.premultiplied ? a : 1);\n            this.a = a;\n        }\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color.\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n\n        return [\n            r * 255,\n            g * 255,\n            b * 255,\n            a\n        ];\n\n    }\n\n    /**\n     * Returns an HSLA array of values representing the color, unpremultiplied by A.\n     * @returns An array of HSLA color values.\n     */\n    toHslaArray(): [number, number, number, number] {\n        let {r, g, b, a} = this;\n\n        if (this.premultiplied) {\n            if (a === 0) return [0, 0, 0, 0];\n            const invA = 1 / a; // Single division, then multiply\n            r *= invA;\n            g *= invA;\n            b *= invA;\n        }\n\n        const red = Math.min(Math.max(r, 0), 1);\n        const green = Math.min(Math.max(g, 0), 1);\n        const blue = Math.min(Math.max(b, 0), 1);\n\n        const min = Math.min(red, green, blue);\n        const max = Math.max(red, green, blue);\n        const delta = max - min;\n\n        const l = (min + max) * 0.5;\n\n        if (delta === 0) {\n            return [0, 0, l * 100, a];\n        }\n\n        const s = l > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n        let h: number;\n        switch (max) {\n        case red:\n            h = ((green - blue) / delta + (green < blue ? 6 : 0)) * 60;\n            break;\n        case green:\n            h = ((blue - red) / delta + 2) * 60;\n            break;\n        default: // blue\n            h = ((red - green) / delta + 4) * 60;\n        }\n\n        return [h, s * 100, l * 100, a];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGB array of values representing the color, unpremultiplied by A and multiplied by a scalar.\n     *\n     * @param {number} scale A scale to apply to the unpremultiplied-alpha values.\n     * @returns An array of RGB color values in the range [0, 1].\n     */\n    toArray01Scaled(scale: number): [number, number, number] {\n        const {r, g, b} = this;\n\n        return [\n            r * scale,\n            g * scale,\n            b * scale\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color converted to linear color space.\n     * The color is defined by sRGB primaries, but the sRGB transfer function\n     * is reversed to obtain linear energy.\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01Linear(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n\n        return [\n            Math.pow(r, 2.2),\n            Math.pow(g, 2.2),\n            Math.pow(b, 2.2),\n            a\n        ];\n    }\n}\n\n/**\n * Renderable color created from a Color and an optional LUT value.\n * Represent a color value with non-premultiplied alpha.\n */\nexport class NonPremultipliedRenderColor extends RenderColor {\n    constructor(lut: LUT | null, r: number, g: number, b: number, a: number) {\n        super(lut, r, g, b, a, false);\n    }\n}\n\n/**\n * Renderable color created from a Color and an optional LUT value.\n * Represent a color value with premultiplied alpha.\n */\nexport class PremultipliedRenderColor extends RenderColor {\n    constructor(lut: LUT | null, r: number, g: number, b: number, a: number) {\n        super(lut, r, g, b, a, true);\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","export default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl.Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","import type Color from '../../util/color';\nimport type ResolvedImage from '../types/resolved_image';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => {\n            if (section.text.length !== 0) return true;\n            if (!section.image) return false;\n            return section.image.hasPrimary();\n        });\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<unknown> {\n        const serialized: Array<unknown> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                const primaryId = section.image.getPrimary().id.toString();\n                serialized.push(['image', primaryId]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: {\n                [key: string]: unknown;\n            } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"] as Array<unknown>).concat(section.textColor.toNonPremultipliedRenderColor(null).toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","import type {Brand} from '../../types/brand';\n\nconst separator = '\\u001F';\n\nexport type ImageIdSpec = {\n    name: string;\n    iconsetId?: string;\n};\n\n/**\n * `StringifiedImageId` is a stringified version of the `ImageId`.\n *\n * @private\n */\nexport type StringifiedImageId = Brand<string, 'ImageId'>;\n\n/**\n * `ImageId` is a reference to an {@link ImageVariant} in the sprite or iconset.\n *\n * @private\n */\nexport class ImageId {\n    name: string;\n    iconsetId?: string;\n\n    constructor(id: string | ImageId | ImageIdSpec) {\n        if (typeof id === 'string') {\n            this.name = id;\n        } else {\n            this.name = id.name;\n            this.iconsetId = id.iconsetId;\n        }\n    }\n\n    static from(id: string | ImageId | ImageIdSpec): ImageId {\n        return new ImageId(id);\n    }\n\n    static toString(id: ImageId | ImageIdSpec): StringifiedImageId {\n        return (id.iconsetId ? `${id.name}${separator}${id.iconsetId}` : id.name) as StringifiedImageId;\n    }\n\n    static parse(str: StringifiedImageId): ImageId | null {\n        const [name, iconsetId] = str.split(separator);\n        return new ImageId({name, iconsetId});\n    }\n\n    static isEqual(a: ImageId | ImageIdSpec, b: ImageId | ImageIdSpec): boolean {\n        return a.name === b.name && a.iconsetId === b.iconsetId;\n    }\n\n    toString(): StringifiedImageId {\n        return ImageId.toString(this);\n    }\n\n    serialize(): ImageIdSpec {\n        return {name: this.name, iconsetId: this.iconsetId};\n    }\n}\n","import {ImageId} from './image_id';\n\nimport type Color from '../../util/color';\nimport type {Brand} from '../../types/brand';\nimport type {ImageIdSpec} from './image_id';\n\n/**\n * `StringifiedImageVariant` is a stringified version of the `ImageVariant`.\n *\n * @private\n */\nexport type StringifiedImageVariant = Brand<string, 'ImageVariant'>;\n\n/**\n * {@link ImageVariant} rasterization options.\n *\n * @private\n */\nexport type RasterizationOptions = {\n    params?: Record<string, Color>;\n    transform?: DOMMatrix;\n};\n\n/**\n * `ImageVariant` is a component of {@link ResolvedImage}\n * that represents either the primary or secondary image\n * along with its rendering configuration.\n *\n * @private\n */\nexport class ImageVariant {\n    id: ImageId;\n    options: RasterizationOptions;\n\n    constructor(id: string | ImageIdSpec, options: RasterizationOptions = {}) {\n        this.id = ImageId.from(id);\n        this.options = Object.assign({}, options);\n\n        if (!options.transform) {\n            this.options.transform = new DOMMatrix([1, 0, 0, 1, 0, 0]);\n        } else {\n            const {a, b, c, d, e, f} = options.transform;\n            this.options.transform = new DOMMatrix([a, b, c, d, e, f]);\n        }\n    }\n\n    toString(): StringifiedImageVariant {\n        const {a, b, c, d, e, f} = this.options.transform;\n\n        const serialized = {\n            name: this.id.name,\n            iconsetId: this.id.iconsetId,\n            params: this.options.params,\n            transform: {a, b, c, d, e, f},\n        };\n\n        return JSON.stringify(serialized) as StringifiedImageVariant;\n    }\n\n    static parse(str: StringifiedImageVariant): ImageVariant | null {\n        let name, iconsetId, params, transform;\n\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            ({name, iconsetId, params, transform} = JSON.parse(str) || {});\n        } catch (e) {\n            return null;\n        }\n\n        if (!name) return null;\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const {a, b, c, d, e, f} = transform || {};\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        return new ImageVariant({name, iconsetId}, {params, transform: new DOMMatrix([a, b, c, d, e, f])});\n    }\n\n    scaleSelf(factor: number, yFactor?: number): this {\n        this.options.transform.scaleSelf(factor, yFactor);\n        return this;\n    }\n}\n","import {ImageId} from './image_id';\nimport {ImageVariant} from './image_variant';\n\nimport type {ImageIdSpec} from './image_id';\nimport type {RasterizationOptions} from './image_variant';\n\nexport default class ResolvedImage {\n    primaryId: ImageId;\n    primaryOptions?: RasterizationOptions;\n    secondaryId?: ImageId;\n    secondaryOptions?: RasterizationOptions;\n    available: boolean;\n\n    constructor(\n        primaryId: string | ImageIdSpec,\n        primaryOptions?: RasterizationOptions,\n        secondaryId?: string | ImageIdSpec,\n        secondaryOptions?: RasterizationOptions,\n        available: boolean = false,\n    ) {\n        this.primaryId = ImageId.from(primaryId);\n        this.primaryOptions = primaryOptions;\n        if (secondaryId) this.secondaryId = ImageId.from(secondaryId);\n        this.secondaryOptions = secondaryOptions;\n        this.available = available;\n    }\n\n    toString(): string {\n        if (this.primaryId && this.secondaryId) {\n            const primaryName = this.primaryId.name;\n            const secondaryName = this.secondaryId.name;\n            return `[${primaryName},${secondaryName}]`;\n        }\n\n        return this.primaryId.name;\n    }\n\n    hasPrimary(): boolean {\n        return !!this.primaryId;\n    }\n\n    getPrimary(): ImageVariant {\n        return new ImageVariant(this.primaryId, this.primaryOptions);\n    }\n\n    hasSecondary(): boolean {\n        return !!this.secondaryId;\n    }\n\n    getSecondary(): ImageVariant | null {\n        if (!this.secondaryId) {\n            return null;\n        }\n\n        return new ImageVariant(this.secondaryId, this.secondaryOptions);\n    }\n\n    static from(image: string | ResolvedImage): ResolvedImage {\n        return typeof image === 'string' ? ResolvedImage.build({name: image}) : image;\n    }\n\n    static build(\n        primaryId: string | ImageIdSpec,\n        secondaryId?: string | ImageIdSpec,\n        primaryOptions?: RasterizationOptions,\n        secondaryOptions?: RasterizationOptions\n    ): ResolvedImage | null {\n        if (!primaryId || (typeof primaryId === 'object' && !('name' in primaryId))) return null; // treat empty values as no image\n        return new ResolvedImage(primaryId, primaryOptions, secondaryId, secondaryOptions);\n    }\n}\n","import assert from 'assert';\nimport Color from '../util/color';\nimport Collator from './types/collator';\nimport Formatted from './types/formatted';\nimport ResolvedImage from './types/resolved_image';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types';\n\nimport type {Type} from './types';\n\nexport function validateRGBA(r: unknown, g: unknown, b: unknown, a?: unknown): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = (typeof a === 'number' ? [r, g, b, a] : [r, g, b]) as number[];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${([r, g, b, a] as number[]).join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport function validateHSLA(h: unknown, s: unknown, l: unknown, a?: unknown): string | null {\n    if (!(\n        typeof h === 'number' && h >= 0 && h <= 360\n    )) {\n        const value = (typeof a === 'number' ? [h, s, l, a] : [h, s, l]) as number[];\n        return `Invalid hsla value [${value.join(', ')}]: 'h' must be between 0 and 360.`;\n    }\n\n    if (!(\n        typeof s === 'number' && s >= 0 && s <= 100 &&\n        typeof l === 'number' && l >= 0 && l <= 100\n    )) {\n        const value = (typeof a === 'number' ? [h, s, l, a] : [h, s, l]) as number[];\n        return `Invalid hsla value [${value.join(', ')}]: 's', and 'l' must be between 0 and 100.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid hsla value [${([h, s, l, a] as number[]).join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | ReadonlyArray<Value> | {readonly [key: string]: Value};\n\nexport function isValue(mixed: unknown): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type;\n\n        for (const item of value) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value): string {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value as string | number | boolean);\n    } else if (value instanceof Formatted || value instanceof ResolvedImage || value instanceof Color) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","import assert from 'assert';\nimport {isValue, typeOf, Color} from '../values';\nimport Formatted from '../types/formatted';\n\nimport type {Type} from '../types';\nimport type {Value}  from '../values';\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): void | Literal {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = args[1] as Value;\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate(): Value {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\" as SerializedExpression].concat(this.value.toNonPremultipliedRenderColor(null).toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return this.value as SerializedExpression;\n        }\n    }\n}\n\nexport default Literal;\n","class RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON(): string {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","import assert from 'assert';\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | void {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name = args[0] as string;\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N: number | null | undefined;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = (args[2] as number);\n                i++;\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return new Assertion(type, parsed);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        for (let i = 0; i < this.args.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const value = this.args[i].evaluate(ctx);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                throw new RuntimeError(`The expression ${JSON.stringify(this.args[i].serialize())} evaluated to ${toString(typeOf(value))} but was expected to be of type ${toString(this.type)}.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    // @ts-expect-error - TS2345 - Argument of type 'number' is not assignable to parameter of type '\"string\" | \"number\" | \"boolean\" | \"object\" | \"error\" | \"color\" | \"value\" | \"null\" | \"collator\" | \"formatted\" | \"resolvedImage\" | \"array\"'.\n                    serialized.push(N);\n                }\n            }\n        }\n        // @ts-expect-error - TS2769 - No overload matches this call.\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","import {\n    NumberType,\n    ValueType,\n    FormattedType,\n    array,\n    StringType,\n    ColorType,\n    ResolvedImageType,\n    typeEquals,\n} from '../types';\nimport Formatted, {FormattedSection} from '../types/formatted';\nimport {toString, typeOf} from '../values';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\nexport type FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression;\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n};\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | null | void {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parseObjectValue(arg['font-scale'], i, 'font-scale', NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parseObjectValue(arg['text-font'], i, 'text-font', array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parseObjectValue(arg['text-color'], i, 'text-color', ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                lastExpression.scale = scale;\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                lastExpression.font = font;\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], i, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext): Formatted {\n        const evaluateSection = (section: FormattedSectionExpression) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const evaluatedContent = section.content.evaluate(ctx);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (typeEquals(typeOf(evaluatedContent), ResolvedImageType)) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    toString(evaluatedContent),\n                    null,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized: SerializedExpression[] = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {} as SerializedExpression;\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","import ResolvedImage from '../types/resolved_image';\nimport {ImageId} from '../types/image_id';\nimport {ColorType, ResolvedImageType, StringType} from '../types';\n\nimport type EvaluationContext from '../evaluation_context';\nimport type Color from '../../util/color';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\nimport type {Expression, SerializedExpression} from '../expression';\n\nexport type ImageParams = Record<string, Expression>;\nexport type IconsetParams = {id: string};\n\nexport type ImageOptions = {\n    params?: ImageParams;\n    iconset?: IconsetParams;\n};\n\ntype SerializedImageOptions = {\n    params?: Record<string, SerializedExpression>;\n    iconset?: IconsetParams;\n};\n\nfunction isImageOptions(value: unknown): value is ImageOptions {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n\n    namePrimary: Expression;\n    paramsPrimary?: ImageParams;\n    iconsetIdPrimary?: string;\n\n    nameSecondary?: Expression;\n    paramsSecondary?: ImageParams;\n    iconsetIdSecondary?: string;\n\n    _imageWarnHistory: Record<string, boolean> = {};\n\n    constructor(\n        inputPrimary: Expression,\n        inputSecondary?: Expression | null,\n        inputPrimaryOptions?: ImageOptions,\n        inputSecondaryOptions?: ImageOptions\n    ) {\n        this.type = ResolvedImageType;\n        this.namePrimary = inputPrimary;\n        this.nameSecondary = inputSecondary;\n\n        if (inputPrimaryOptions) {\n            this.paramsPrimary = inputPrimaryOptions.params;\n            this.iconsetIdPrimary = inputPrimaryOptions.iconset ? inputPrimaryOptions.iconset.id : undefined;\n        }\n\n        if (inputSecondaryOptions) {\n            this.paramsSecondary = inputSecondaryOptions.params;\n            this.iconsetIdSecondary = inputSecondaryOptions.iconset ? inputSecondaryOptions.iconset.id : undefined;\n        }\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | null | void {\n        if (args.length < 2) {\n            return context.error(`Expected two or more arguments.`);\n        }\n\n        let nextArgId = 1;\n        const imageExpression: Array<{image: Expression, options?: ImageOptions}> = [];\n\n        function tryParseImage() {\n            if (nextArgId < args.length) {\n                const imageName = context.parse(args[nextArgId], nextArgId++, StringType);\n                if (!imageName) {\n                    context.error(imageExpression.length ? `Secondary image variant is not a string.` : `No image name provided.`);\n                    return false;\n                }\n\n                imageExpression.push({image: imageName, options: {}});\n                return true;\n            }\n\n            return true;\n        }\n\n        function tryParseOptions() {\n            if (nextArgId < args.length) {\n                const options = args[nextArgId];\n                if (!isImageOptions(options)) {\n                    return true;\n                }\n\n                const params = options.params;\n                const iconset = options.iconset;\n                const optionsContext = context.concat(nextArgId);\n\n                if (!params && !iconset) {\n                    nextArgId++;\n                    return true;\n                }\n\n                // Parse the image options params as expressions\n                if (params) {\n                    if (typeof params !== 'object' || params.constructor !== Object) {\n                        optionsContext.error(`Image options \\\"params\\\" should be an object`);\n                        return false;\n                    }\n\n                    const parsedParams: ImageParams = {};\n                    const childContext = optionsContext.concat(undefined, 'params');\n                    for (const key in params) {\n                        if (!key) {\n                            childContext.error(`Image parameter name should be non-empty`);\n                            return false;\n                        }\n\n                        const value = childContext.concat(undefined, key).parse(params[key], undefined, ColorType, undefined, {typeAnnotation: 'coerce'});\n                        if (!value) {\n                            return false;\n                        }\n\n                        parsedParams[key] = value;\n                    }\n\n                    imageExpression[imageExpression.length - 1].options.params = parsedParams;\n                }\n\n                // Validate the iconset image options\n                if (iconset) {\n                    if (typeof iconset !== 'object' || iconset.constructor !== Object) {\n                        optionsContext.error(`Image options \\\"iconset\\\" should be an object`);\n                        return false;\n                    }\n\n                    if (!iconset.id) {\n                        optionsContext.error(`Image options \\\"iconset\\\" should have an \\\"id\\\" property`);\n                        return false;\n                    }\n\n                    imageExpression[imageExpression.length - 1].options.iconset = iconset;\n                }\n\n                nextArgId++;\n                return true;\n            }\n\n            return true;\n        }\n\n        // Parse the primary and secondary image expressions\n        for (let i = 0; i < 2; i++) {\n            if (!tryParseImage() || !tryParseOptions()) {\n                return;\n            }\n        }\n\n        return new ImageExpression(\n            imageExpression[0].image,\n            imageExpression[1] ? imageExpression[1].image : undefined,\n            imageExpression[0].options,\n            imageExpression[1] ? imageExpression[1].options : undefined\n        );\n    }\n\n    evaluateParams(ctx: EvaluationContext, params: Record<string, Expression> | undefined): {params: Record<string, Color>} {\n        const result: Record<string, Color> = {};\n        if (params) {\n            for (const key in params) {\n                if (params[key]) {\n                    try {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        result[key] = params[key].evaluate(ctx);\n                    } catch (err) {\n                        continue;\n                    }\n                }\n            }\n        } else {\n            return undefined;\n        }\n\n        if (Object.keys(result).length === 0) {\n            return undefined;\n        }\n\n        return {params: result};\n    }\n\n    evaluate(ctx: EvaluationContext): null | ResolvedImage {\n        const primaryId = {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            name: this.namePrimary.evaluate(ctx),\n            iconsetId: this.iconsetIdPrimary\n        };\n\n        const secondaryId = this.nameSecondary ? {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            name: this.nameSecondary.evaluate(ctx),\n            iconsetId: this.iconsetIdSecondary\n        } : undefined;\n\n        const value = ResolvedImage.build(\n            primaryId,\n            secondaryId,\n            this.paramsPrimary ? this.evaluateParams(ctx, this.paramsPrimary) : undefined,\n            this.paramsSecondary ? this.evaluateParams(ctx, this.paramsSecondary) : undefined\n        );\n\n        if (value && ctx.availableImages) {\n            const primaryId = value.getPrimary().id;\n            value.available = ctx.availableImages.some((id) => ImageId.isEqual(id, primaryId));\n            if (value.available) {\n                // If there's a secondary variant, only mark it available if both are present\n                const secondaryId = value.getSecondary() ? value.getSecondary().id : null;\n                if (secondaryId) value.available = ctx.availableImages.some((id) => ImageId.isEqual(id, secondaryId));\n            }\n        }\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.namePrimary);\n\n        if (this.paramsPrimary) {\n            for (const key in this.paramsPrimary) {\n                if (this.paramsPrimary[key]) {\n                    fn(this.paramsPrimary[key]);\n                }\n            }\n        }\n\n        if (this.nameSecondary) {\n            fn(this.nameSecondary);\n            if (this.paramsSecondary) {\n                for (const key in this.paramsSecondary) {\n                    if (this.paramsSecondary[key]) {\n                        fn(this.paramsSecondary[key]);\n                    }\n                }\n            }\n        }\n    }\n\n    outputDefined(): boolean {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serializeOptions(params: ImageParams, iconsetId: string): SerializedImageOptions | undefined {\n        const result: SerializedImageOptions = {};\n\n        if (iconsetId) {\n            result.iconset = {id: iconsetId};\n        }\n\n        if (params) {\n            result.params = {};\n            for (const key in params) {\n                if (params[key]) {\n                    result.params[key] = params[key].serialize();\n                }\n            }\n        }\n\n        return Object.keys(result).length > 0 ? result : undefined;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized: SerializedExpression = ['image', this.namePrimary.serialize()];\n\n        if (this.paramsPrimary || this.iconsetIdPrimary) {\n            const options = this.serializeOptions(this.paramsPrimary, this.iconsetIdPrimary);\n            if (options) serialized.push(options);\n        }\n\n        if (this.nameSecondary) {\n            serialized.push(this.nameSecondary.serialize());\n\n            if (this.paramsSecondary || this.iconsetIdSecondary) {\n                const options = this.serializeOptions(this.paramsSecondary, this.iconsetIdSecondary);\n                if (options) serialized.push(options);\n            }\n        }\n\n        return serialized;\n    }\n}\n","export function getType(val: unknown): \"number\" | \"string\" | \"boolean\" | \"array\" | \"null\" | \"object\" | \"function\" | \"bigint\" | \"symbol\" | \"undefined\" | \"NaN\" {\n    if (isString(val)) return 'string';\n    if (isNumber(val)) return 'number';\n    if (isBoolean(val)) return 'boolean';\n    if (Array.isArray(val)) return 'array';\n    if (val === null) return 'null';\n    if (isObject(val)) return 'object';\n    return typeof val;\n}\n\nexport function isObject(value: unknown): value is Record<PropertyKey, unknown> {\n    if (value === null || value === undefined) return false;\n    if (Array.isArray(value)) return false;\n    if (typeof value === 'function') return false;\n    if (value instanceof String || value instanceof Number || value instanceof Boolean) {\n        return false;\n    }\n    return typeof value === 'object';\n}\n\nexport function isString(value: unknown): value is string {\n    return typeof value === 'string' || value instanceof String;\n}\n\nexport function isNumber(value: unknown): value is number {\n    return typeof value === 'number' || value instanceof Number;\n}\n\nexport function isBoolean(value: unknown): value is boolean {\n    return typeof value === 'boolean' || value instanceof Boolean;\n}\n","import assert from 'assert';\nimport {BooleanType, ColorType, NumberType, StringType, ValueType, array, NullType} from '../types';\nimport {Color, isValue, toString as valueToString, typeOf, validateRGBA} from '../values';\nimport RuntimeError from '../runtime_error';\nimport Formatted from '../types/formatted';\nimport FormatExpression from '../definitions/format';\nimport ImageExpression from '../definitions/image';\nimport ResolvedImage from '../types/resolved_image';\nimport {getType} from '../../util/get_type';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type, ArrayType} from '../types';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type | ArrayType;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | null | void {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name = args[0] as string;\n        const parsed = [];\n        let type: Type | ArrayType = NullType;\n        if (name === 'to-array') {\n            if (!Array.isArray(args[1])) {\n                return null;\n            }\n            const arrayLength = args[1].length;\n            if (context.expectedType) {\n                if (context.expectedType.kind === 'array') {\n                    type = array(context.expectedType.itemType, arrayLength);\n                } else {\n                    return context.error(`Expected ${context.expectedType.kind} but found array.`);\n                }\n            } else if (arrayLength > 0 && isValue(args[1][0])) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const value = (args[1][0]);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                type = array(typeOf(value), arrayLength);\n            } else {\n                return null;\n            }\n            for (let i = 0; i < arrayLength; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const member = args[1][i];\n                let parsedMember;\n                if (Array.isArray(member)) {\n                    parsedMember = context.parse(member, undefined, type.itemType);\n                } else {\n                    const memberType = getType(member);\n                    if (memberType !== type.itemType.kind) {\n                        return context.error(`Expected ${type.itemType.kind} but found ${memberType}.`);\n                    }\n                    parsedMember = context.registry['literal'].parse(['literal', member === undefined ? null : member], context);\n                }\n                if (!parsedMember) return null;\n                parsed.push(parsedMember);\n            }\n        } else {\n            assert(types[name], name);\n\n            if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n                return context.error(`Expected one argument.`);\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            type = types[name];\n\n            for (let i = 1; i < args.length; i++) {\n                const input = context.parse(args[i], i, ValueType);\n                if (!input) return null;\n                parsed.push(input);\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return new Coercion(type, parsed);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                        return new Color((input[0]) / 255, (input[1]) / 255, (input[2]) / 255, (input[3]));\n                    }\n                }\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            return ResolvedImage.build(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'array') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return this.args.map(arg => { return arg.evaluate(ctx); });\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized: Array<unknown> = this.type.kind === 'array' ? [] : [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","import {Color} from './values';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {ImageId} from './types/image_id';\nimport type {FormattedSection} from './types/formatted';\nimport type {GlobalProperties, Feature, FeatureState} from './index';\nimport type {CanonicalTileID} from '../types/tile_id';\nimport type {FeatureDistanceData} from '../feature_filter/index';\nimport type {ConfigOptions, ConfigOptionValue} from '../types/config_options';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: Feature | null | undefined;\n    featureState: FeatureState | null | undefined;\n    formattedSection: FormattedSection | null | undefined;\n    availableImages: ImageId[] | null | undefined;\n    canonical: null | CanonicalTileID;\n    featureTileCoord: Point | null | undefined;\n    featureDistanceData: FeatureDistanceData | null | undefined;\n    scope: string | null | undefined;\n    options: ConfigOptions | null | undefined;\n    iconImageUseTheme: string | null | undefined;\n\n    _parseColorCache: {\n        [_: string]: Color | null | undefined;\n    };\n\n    constructor(scope?: string | null, options?: ConfigOptions | null, iconImageUseTheme?: string) {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n        this.scope = scope;\n        this.options = options;\n        this.iconImageUseTheme = iconImageUseTheme;\n    }\n\n    id(): string | number | null {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType(): null | string {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry(): Array<Array<Point>> | null | undefined {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID(): null | CanonicalTileID {\n        return this.canonical;\n    }\n\n    properties(): {readonly [key: string]: unknown} {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    measureLight(_: string): number {\n        return this.globals.brightness || 0;\n    }\n\n    distanceFromCenter(): number {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input: string): Color | undefined {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n\n    getConfig(id: string): ConfigOptionValue | null | undefined {\n        return this.options ? this.options.get(id) : null;\n    }\n}\n\nexport default EvaluationContext;\n","import {toString} from './types';\nimport ParsingContext from './parsing_context';\nimport assert from 'assert';\n\nimport type EvaluationContext from './evaluation_context';\nimport type {Expression, ExpressionRegistry, SerializedExpression} from './expression';\nimport type {Type} from './types';\nimport type {Value} from './values';\n\nexport type Varargs = {\n    type: Type;\n};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (arg1: EvaluationContext, arg2: Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] | {\n    type: Type;\n    overloads: Array<[Signature, Evaluate]>;\n};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n    _overloadIndex: number;\n\n    static definitions: {\n        [_: string]: Definition;\n    };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>, overloadIndex: number) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n        this._overloadIndex = overloadIndex;\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        if (!this._evaluate) { // restore evaluate function after transfer between threads\n            const definition = CompoundExpression.definitions[this.name];\n            this._evaluate = Array.isArray(definition) ? definition[2] : definition.overloads[this._overloadIndex][1];\n        }\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression[] {\n        return [this.name as SerializedExpression].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | null | void {\n        const op = args[0] as string;\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloadParams = [];\n\n        let signatureContext: ParsingContext = null;\n\n        let overloadIndex = -1;\n\n        for (const [params, evaluate] of availableOverloads) {\n            if (Array.isArray(params) && params.length !== args.length - 1) continue; // param count doesn't match\n\n            overloadParams.push(params);\n            overloadIndex++;\n\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope, undefined, context._scope, context.options, context.iconImageUseTheme);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                // @ts-expect-error - TS2339 - Property 'type' does not exist on type 'Varargs | Evaluate'.\n                    params.type;\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                // @ts-expect-error - TS2339 - Property 'type' does not exist on type 'Varargs | Evaluate'.\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                // @ts-expect-error - TS2345 - Argument of type 'Signature | Evaluate' is not assignable to parameter of type 'Evaluate'.\n                return new CompoundExpression(op, type, evaluate, parsedArgs, overloadIndex);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloadParams.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloadParams.length ? overloadParams : availableOverloads.map(([params]) => params);\n            const signatures = expected.map(stringifySignature).join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {\n            [_: string]: Definition;\n        }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","import {StringType, BooleanType, CollatorType} from '../types';\nimport Collator from '../types/collator';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | null | undefined {\n        if (args.length !== 2)\n        // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Expression'.\n            return context.error(`Expected one argument.`);\n\n        const options = args[1];\n        if (typeof options !== \"object\" || Array.isArray(options))\n        // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Expression'.\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = options['case-sensitive'] === undefined ?\n            context.parse(false, 1, BooleanType) :\n            context.parseObjectValue(options['case-sensitive'], 1, 'case-sensitive', BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = options['diacritic-sensitive'] === undefined ?\n            context.parse(false, 1, BooleanType) :\n            context.parseObjectValue(options['diacritic-sensitive'], 1, 'diacritic-sensitive', BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale: Expression = null;\n        if (options['locale']) {\n            locale = context.parseObjectValue(options['locale'], 1, 'locale', StringType) as Expression;\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext): Collator {\n        return new Collator(\n            this.caseSensitive.evaluate(ctx) as boolean,\n            this.diacriticSensitive.evaluate(ctx) as boolean,\n            this.locale ? this.locale.evaluate(ctx) as string : null\n        );\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options: Record<string, SerializedExpression> = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class\n * @param {number} x the x-coordinate. This could be longitude or screen pixels, or any other sort of unit.\n * @param {number} y the y-coordinate. This could be latitude or screen pixels, or any other sort of unit.\n *\n * @example\n * const point = new Point(-77, 38);\n */\nexport default function Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    mult(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {number} k factor\n     * @return {Point} output point\n     */\n    div(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround(a, p) { return this.clone()._rotateAround(a, p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {[number, number, number, number]} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round() { return this.clone()._round(); },\n\n    /**\n     * Return the magnitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {number} magnitude\n     */\n    mag() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    dist(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {number} distance\n     */\n    distSqr(p) {\n        const dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {number} angle\n     */\n    angle() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleTo(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {number} angle\n     */\n    angleWith(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /**\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {number} x the x-coordinate\n     * @param {number} y the y-coordinate\n     * @return {number} the angle in radians\n     */\n    angleWithSep(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    /** @param {[number, number, number, number]} m */\n    _matMult(m) {\n        const x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _add(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _sub(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    /** @param {number} k */\n    _mult(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    /** @param {number} k */\n    _div(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _multByPoint(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    /** @param {Point} p */\n    _divByPoint(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp() {\n        const y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    /** @param {number} angle */\n    _rotate(angle) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    /**\n     * @param {number} angle\n     * @param {Point} p\n     */\n    _rotateAround(angle, p) {\n        const cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    },\n\n    constructor: Point\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, return it unchanged.\n * @param {Point | [number, number] | {x: number, y: number}} p input value\n * @return {Point} constructed point.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (p) {\n    if (p instanceof Point) {\n        return /** @type {Point} */ (p);\n    }\n    if (Array.isArray(p)) {\n        return new Point(+p[0], +p[1]);\n    }\n    if (p.x !== undefined && p.y !== undefined) {\n        return new Point(+p.x, +p.y);\n    }\n    throw new Error('Expected [x, y] or {x, y} point format');\n};\n","import quickselect from 'quickselect';\nimport Point from '@mapbox/point-geometry';\n\ntype Ring = Point[] & {area?: number};\n\n// minX, minY, maxX, maxY\nexport type BBox = [number, number, number, number];\n\n/**\n * Returns the signed area for the polygon ring.  Postive areas are exterior rings and\n * have a clockwise winding.  Negative areas are interior rings and have a counter clockwise\n * ordering.\n */\nfunction calculateSignedArea(ring: Ring): number {\n    let sum = 0;\n    for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n\nfunction compareAreas(a: Ring, b: Ring): number {\n    return b.area - a.area;\n}\n\n// classifies an array of rings into polygons with outer rings and holes\nexport function classifyRings(rings: Array<Ring>, maxRings: number): Array<Array<Ring>> {\n    const len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    const polygons: Array<Array<Ring>> = [];\n    let polygon,\n        ccw;\n\n    for (let i = 0; i < len; i++) {\n        const area = calculateSignedArea(rings[i]);\n        if (area === 0) continue;\n\n        rings[i].area = Math.abs(area);\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            (polygon).push(rings[i]);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    if (polygon) polygons.push(polygon);\n\n    // Earcut performance degrades with the # of rings in a polygon. For this\n    // reason, we limit strip out all but the `maxRings` largest rings.\n    if (maxRings > 1) {\n        for (let j = 0; j < polygons.length; j++) {\n            if (polygons[j].length <= maxRings) continue;\n            quickselect(polygons[j], maxRings, 1, polygons[j].length - 1, compareAreas);\n            polygons[j] = polygons[j].slice(0, maxRings);\n        }\n    }\n\n    return polygons;\n}\n\nexport function updateBBox(bbox: BBox, coord: GeoJSON.Position) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nexport function boxWithinBox(bbox1: BBox, bbox2: BBox): boolean {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction onBoundary(p: GeoJSON.Position, p1: GeoJSON.Position, p2: GeoJSON.Position) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p: GeoJSON.Position, p1: GeoJSON.Position, p2: GeoJSON.Position) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nexport function pointWithinPolygon(\n    point: GeoJSON.Position,\n    rings: Array<Array<GeoJSON.Position>>,\n    trueOnBoundary: boolean = false,\n): boolean {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length, k = len2 - 1; j < len2; k = j++) {\n            const q1 = ring[k];\n            const q2 = ring[j];\n            if (onBoundary(point, q1, q2)) return trueOnBoundary;\n            if (rayIntersect(point, q1, q2)) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction perp(v1: GeoJSON.Position, v2: GeoJSON.Position) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1: GeoJSON.Position, p2: GeoJSON.Position, q1: GeoJSON.Position, q2: GeoJSON.Position) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nexport function segmentIntersectSegment(\n    a: GeoJSON.Position,\n    b: GeoJSON.Position,\n    c: GeoJSON.Position,\n    d: GeoJSON.Position,\n): boolean {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nexport interface Bounds {\n    min: Point;\n    max: Point;\n}\n\nexport function computeBounds(points: Point[][]): Bounds {\n    const min = new Point(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n    const max = new Point(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\n\n    for (const point of points[0]) {\n        if (min.x > point.x) min.x = point.x;\n        if (min.y > point.y) min.y = point.y;\n        if (max.x < point.x) max.x = point.x;\n        if (max.y < point.y) max.y = point.y;\n    }\n\n    return {min, max};\n}\n","import {isValue} from '../values';\nimport {BooleanType} from '../types';\nimport {updateBBox, boxWithinBox, pointWithinPolygon, segmentIntersectSegment} from '../../util/geometry_util';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {Type} from '../types';\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {CanonicalTileID} from '../../types/tile_id';\nimport type {BBox} from '../../util/geometry_util';\n\ntype GeoJSONPolygons = GeoJSON.Polygon | GeoJSON.MultiPolygon;\n\nconst EXTENT = 8192;\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction getTileCoordinates(p: GeoJSON.Position, canonical: CanonicalTileID) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction pointWithinPolygons(point: GeoJSON.Position, polygons: Array<Array<Array<GeoJSON.Position>>>) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction lineIntersectPolygon(p1: GeoJSON.Position, p2: GeoJSON.Position, polygon: Array<Array<GeoJSON.Position>>) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n            const q1 = ring[k];\n            const q2 = ring[j];\n            if (segmentIntersectSegment(p1, p2, q1, q2)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line: Array<GeoJSON.Position>, polygon: Array<Array<GeoJSON.Position>>) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line: Array<GeoJSON.Position>, polygons: Array<Array<Array<GeoJSON.Position>>>) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates: Array<Array<GeoJSON.Position>>, bbox: BBox, canonical: CanonicalTileID): Array<Array<number[]>> {\n    const polygon: Array<Array<number[]>> = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring: number[][] = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates: Array<Array<Array<GeoJSON.Position>>>, bbox: BBox, canonical: CanonicalTileID): Array<Array<Array<number[]>>> {\n    const polygons: Array<Array<Array<number[]>>> = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n\n    return polygons;\n}\n\nfunction updatePoint(p: GeoJSON.Position, bbox: BBox, polyBBox: Array<number>, worldSize: number) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox: BBox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry: Array<Array<Point>> | null | undefined, pointBBox: BBox, polyBBox: Array<number>, canonical: CanonicalTileID): Array<number[]> {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints: Array<number[]> = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n\n    return tilePoints;\n}\n\nfunction getTileLines(geometry: Array<Array<Point>> | null | undefined, lineBBox: BBox, polyBBox: Array<number>, canonical: CanonicalTileID): Array<Array<GeoJSON.Position>> {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines: Array<Array<GeoJSON.Position>> = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p: GeoJSON.Position = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons): boolean {\n    const pointBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons): boolean {\n    const lineBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON.GeoJSON;\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON.GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Within | void {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1] as GeoJSON.GeoJSON;\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry as GeoJSONPolygons);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","\nconst factors = {\n    kilometers: 1,\n    miles: 1000 / 1609.344,\n    nauticalmiles: 1000 / 1852,\n    meters: 1000,\n    metres: 1000,\n    yards: 1000 / 0.9144,\n    feet: 1000 / 0.3048,\n    inches: 1000 / 0.0254\n};\n\n// Values that define WGS84 ellipsoid model of the Earth\nconst RE = 6378.137; // equatorial radius\nconst FE = 1 / 298.257223563; // flattening\n\nconst E2 = FE * (2 - FE);\nconst RAD = Math.PI / 180;\n\n/**\n * A collection of very fast approximations to common geodesic measurements. Useful for performance-sensitive code that measures things on a city scale.\n */\nexport default class CheapRuler {\n    /**\n     * Creates a ruler object from tile coordinates (y and z).\n     *\n     * @param {number} y\n     * @param {number} z\n     * @param {keyof typeof factors} [units='kilometers']\n     * @returns {CheapRuler}\n     * @example\n     * const ruler = cheapRuler.fromTile(1567, 12);\n     * //=ruler\n     */\n    static fromTile(y, z, units) {\n        const n = Math.PI * (1 - 2 * (y + 0.5) / Math.pow(2, z));\n        const lat = Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))) / RAD;\n        return new CheapRuler(lat, units);\n    }\n\n    /**\n     * Multipliers for converting between units.\n     *\n     * @example\n     * // convert 50 meters to yards\n     * 50 * CheapRuler.units.yards / CheapRuler.units.meters;\n     */\n    static get units() {\n        return factors;\n    }\n\n    /**\n     * Creates a ruler instance for very fast approximations to common geodesic measurements around a certain latitude.\n     *\n     * @param {number} lat latitude\n     * @param {keyof typeof factors} [units='kilometers']\n     * @example\n     * const ruler = cheapRuler(35.05, 'miles');\n     * //=ruler\n     */\n    constructor(lat, units) {\n        if (lat === undefined) throw new Error('No latitude given.');\n        if (units && !factors[units]) throw new Error(`Unknown unit ${  units  }. Use one of: ${  Object.keys(factors).join(', ')}`);\n\n        // Curvature formulas from https://en.wikipedia.org/wiki/Earth_radius#Meridional\n        const m = RAD * RE * (units ? factors[units] : 1);\n        const coslat = Math.cos(lat * RAD);\n        const w2 = 1 / (1 - E2 * (1 - coslat * coslat));\n        const w = Math.sqrt(w2);\n\n        // multipliers for converting longitude and latitude degrees into distance\n        this.kx = m * w * coslat;        // based on normal radius of curvature\n        this.ky = m * w * w2 * (1 - E2); // based on meridonal radius of curvature\n    }\n\n    /**\n     * Given two points of the form [longitude, latitude], returns the distance.\n     *\n     * @param {[number, number]} a point [longitude, latitude]\n     * @param {[number, number]} b point [longitude, latitude]\n     * @returns {number} distance\n     * @example\n     * const distance = ruler.distance([30.5, 50.5], [30.51, 50.49]);\n     * //=distance\n     */\n    distance(a, b) {\n        const dx = wrap(a[0] - b[0]) * this.kx;\n        const dy = (a[1] - b[1]) * this.ky;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns the bearing between two points in angles.\n     *\n     * @param {[number, number]} a point [longitude, latitude]\n     * @param {[number, number]} b point [longitude, latitude]\n     * @returns {number} bearing\n     * @example\n     * const bearing = ruler.bearing([30.5, 50.5], [30.51, 50.49]);\n     * //=bearing\n     */\n    bearing(a, b) {\n        const dx = wrap(b[0] - a[0]) * this.kx;\n        const dy = (b[1] - a[1]) * this.ky;\n        return Math.atan2(dx, dy) / RAD;\n    }\n\n    /**\n     * Returns a new point given distance and bearing from the starting point.\n     *\n     * @param {[number, number]} p point [longitude, latitude]\n     * @param {number} dist distance\n     * @param {number} bearing\n     * @returns {[number, number]} point [longitude, latitude]\n     * @example\n     * const point = ruler.destination([30.5, 50.5], 0.1, 90);\n     * //=point\n     */\n    destination(p, dist, bearing) {\n        const a = bearing * RAD;\n        return this.offset(p,\n            Math.sin(a) * dist,\n            Math.cos(a) * dist);\n    }\n\n    /**\n     * Returns a new point given easting and northing offsets (in ruler units) from the starting point.\n     *\n     * @param {[number, number]} p point [longitude, latitude]\n     * @param {number} dx easting\n     * @param {number} dy northing\n     * @returns {[number, number]} point [longitude, latitude]\n     * @example\n     * const point = ruler.offset([30.5, 50.5], 10, 10);\n     * //=point\n     */\n    offset(p, dx, dy) {\n        return [\n            p[0] + dx / this.kx,\n            p[1] + dy / this.ky\n        ];\n    }\n\n    /**\n     * Given a line (an array of points), returns the total line distance.\n     *\n     * @param {[number, number][]} points [longitude, latitude]\n     * @returns {number} total line distance\n     * @example\n     * const length = ruler.lineDistance([\n     *     [-67.031, 50.458], [-67.031, 50.534],\n     *     [-66.929, 50.534], [-66.929, 50.458]\n     * ]);\n     * //=length\n     */\n    lineDistance(points) {\n        let total = 0;\n        for (let i = 0; i < points.length - 1; i++) {\n            total += this.distance(points[i], points[i + 1]);\n        }\n        return total;\n    }\n\n    /**\n     * Given a polygon (an array of rings, where each ring is an array of points), returns the area.\n     *\n     * @param {[number, number][][]} polygon\n     * @returns {number} area value in the specified units (square kilometers by default)\n     * @example\n     * const area = ruler.area([[\n     *     [-67.031, 50.458], [-67.031, 50.534], [-66.929, 50.534],\n     *     [-66.929, 50.458], [-67.031, 50.458]\n     * ]]);\n     * //=area\n     */\n    area(polygon) {\n        let sum = 0;\n\n        for (let i = 0; i < polygon.length; i++) {\n            const ring = polygon[i];\n\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                sum += wrap(ring[j][0] - ring[k][0]) * (ring[j][1] + ring[k][1]) * (i ? -1 : 1);\n            }\n        }\n\n        return (Math.abs(sum) / 2) * this.kx * this.ky;\n    }\n\n    /**\n     * Returns the point at a specified distance along the line.\n     *\n     * @param {[number, number][]} line\n     * @param {number} dist distance\n     * @returns {[number, number]} point [longitude, latitude]\n     * @example\n     * const point = ruler.along(line, 2.5);\n     * //=point\n     */\n    along(line, dist) {\n        let sum = 0;\n\n        if (dist <= 0) return line[0];\n\n        for (let i = 0; i < line.length - 1; i++) {\n            const p0 = line[i];\n            const p1 = line[i + 1];\n            const d = this.distance(p0, p1);\n            sum += d;\n            if (sum > dist) return interpolate(p0, p1, (dist - (sum - d)) / d);\n        }\n\n        return line[line.length - 1];\n    }\n\n    /**\n     * Returns the distance from a point `p` to a line segment `a` to `b`.\n     *\n     * @pointToSegmentDistance\n     * @param {[number, number]} p point [longitude, latitude]\n     * @param {[number, number]} a segment point 1 [longitude, latitude]\n     * @param {[number, number]} b segment point 2 [longitude, latitude]\n     * @returns {number} distance\n     * @example\n     * const distance = ruler.pointToSegmentDistance([-67.04, 50.5], [-67.05, 50.57], [-67.03, 50.54]);\n     * //=distance\n     */\n    pointToSegmentDistance(p, a, b) {\n        let [x, y] = a;\n        let dx = wrap(b[0] - x) * this.kx;\n        let dy = (b[1] - y) * this.ky;\n\n        if (dx !== 0 || dy !== 0) {\n            const t = (wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n\n            if (t > 1) {\n                x = b[0];\n                y = b[1];\n\n            } else if (t > 0) {\n                x += (dx / this.kx) * t;\n                y += (dy / this.ky) * t;\n            }\n        }\n\n        dx = wrap(p[0] - x) * this.kx;\n        dy = (p[1] - y) * this.ky;\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    /**\n     * Returns an object of the form {point, index, t}, where point is closest point on the line\n     * from the given point, index is the start index of the segment with the closest point,\n     * and t is a parameter from 0 to 1 that indicates where the closest point is on that segment.\n     *\n     * @param {[number, number][]} line\n     * @param {[number, number]} p point [longitude, latitude]\n     * @returns {{point: [number, number], index: number, t: number}} {point, index, t}\n     * @example\n     * const point = ruler.pointOnLine(line, [-67.04, 50.5]).point;\n     * //=point\n     */\n    pointOnLine(line, p) {\n        let minDist = Infinity;\n        let minX = line[0][0];\n        let minY = line[0][1];\n        let minI = 0;\n        let minT = 0;\n\n        for (let i = 0; i < line.length - 1; i++) {\n\n            let x = line[i][0];\n            let y = line[i][1];\n            let dx = wrap(line[i + 1][0] - x) * this.kx;\n            let dy = (line[i + 1][1] - y) * this.ky;\n            let t = 0;\n\n            if (dx !== 0 || dy !== 0) {\n                t = (wrap(p[0] - x) * this.kx * dx + (p[1] - y) * this.ky * dy) / (dx * dx + dy * dy);\n\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n\n                } else if (t > 0) {\n                    x += (dx / this.kx) * t;\n                    y += (dy / this.ky) * t;\n                }\n            }\n\n            dx = wrap(p[0] - x) * this.kx;\n            dy = (p[1] - y) * this.ky;\n\n            const sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: Math.max(0, Math.min(1, minT))\n        };\n    }\n\n    /**\n     * Returns a part of the given line between the start and the stop points (or their closest points on the line).\n     *\n     * @param {[number, number]} start point [longitude, latitude]\n     * @param {[number, number]} stop point [longitude, latitude]\n     * @param {[number, number][]} line\n     * @returns {[number, number][]} line part of a line\n     * @example\n     * const line2 = ruler.lineSlice([-67.04, 50.5], [-67.05, 50.56], line1);\n     * //=line2\n     */\n    lineSlice(start, stop, line) {\n        let p1 = this.pointOnLine(line, start);\n        let p2 = this.pointOnLine(line, stop);\n\n        if (p1.index > p2.index || (p1.index === p2.index && p1.t > p2.t)) {\n            const tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n        }\n\n        const slice = [p1.point];\n\n        const l = p1.index + 1;\n        const r = p2.index;\n\n        if (!equals(line[l], slice[0]) && l <= r)\n            slice.push(line[l]);\n\n        for (let i = l + 1; i <= r; i++) {\n            slice.push(line[i]);\n        }\n\n        if (!equals(line[r], p2.point))\n            slice.push(p2.point);\n\n        return slice;\n    }\n\n    /**\n     * Returns a part of the given line between the start and the stop points indicated by distance along the line.\n     *\n     * @param {number} start start distance\n     * @param {number} stop stop distance\n     * @param {[number, number][]} line\n     * @returns {[number, number][]} part of a line\n     * @example\n     * const line2 = ruler.lineSliceAlong(10, 20, line1);\n     * //=line2\n     */\n    lineSliceAlong(start, stop, line) {\n        let sum = 0;\n        const slice = [];\n\n        for (let i = 0; i < line.length - 1; i++) {\n            const p0 = line[i];\n            const p1 = line[i + 1];\n            const d = this.distance(p0, p1);\n\n            sum += d;\n\n            if (sum > start && slice.length === 0) {\n                slice.push(interpolate(p0, p1, (start - (sum - d)) / d));\n            }\n\n            if (sum >= stop) {\n                slice.push(interpolate(p0, p1, (stop - (sum - d)) / d));\n                return slice;\n            }\n\n            if (sum > start) slice.push(p1);\n        }\n\n        return slice;\n    }\n\n    /**\n     * Given a point, returns a bounding box object ([w, s, e, n]) created from the given point buffered by a given distance.\n     *\n     * @param {[number, number]} p point [longitude, latitude]\n     * @param {number} buffer\n     * @returns {[number, number, number, number]} bbox ([w, s, e, n])\n     * @example\n     * const bbox = ruler.bufferPoint([30.5, 50.5], 0.01);\n     * //=bbox\n     */\n    bufferPoint(p, buffer) {\n        const v = buffer / this.ky;\n        const h = buffer / this.kx;\n        return [\n            p[0] - h,\n            p[1] - v,\n            p[0] + h,\n            p[1] + v\n        ];\n    }\n\n    /**\n     * Given a bounding box, returns the box buffered by a given distance.\n     *\n     * @param {[number, number, number, number]} bbox ([w, s, e, n])\n     * @param {number} buffer\n     * @returns {[number, number, number, number]} bbox ([w, s, e, n])\n     * @example\n     * const bbox = ruler.bufferBBox([30.5, 50.5, 31, 51], 0.2);\n     * //=bbox\n     */\n    bufferBBox(bbox, buffer) {\n        const v = buffer / this.ky;\n        const h = buffer / this.kx;\n        return [\n            bbox[0] - h,\n            bbox[1] - v,\n            bbox[2] + h,\n            bbox[3] + v\n        ];\n    }\n\n    /**\n     * Returns true if the given point is inside in the given bounding box, otherwise false.\n     *\n     * @param {[number, number]} p point [longitude, latitude]\n     * @param {[number, number, number, number]} bbox ([w, s, e, n])\n     * @returns {boolean}\n     * @example\n     * const inside = ruler.insideBBox([30.5, 50.5], [30, 50, 31, 51]);\n     * //=inside\n     */\n    insideBBox(p, bbox) { // eslint-disable-line\n        return wrap(p[0] - bbox[0]) >= 0 &&\n               wrap(p[0] - bbox[2]) <= 0 &&\n               p[1] >= bbox[1] &&\n               p[1] <= bbox[3];\n    }\n}\n\n/**\n * @param {[number, number]} a\n * @param {[number, number]} b\n */\nfunction equals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * @param {[number, number]} a\n * @param {[number, number]} b\n * @param {number} t\n * @returns {[number, number]}\n */\nfunction interpolate(a, b, t) {\n    const dx = wrap(b[0] - a[0]);\n    const dy = b[1] - a[1];\n    return [\n        a[0] + dx * t,\n        a[1] + dy * t\n    ];\n}\n\n/**\n * normalize a degree value into [-180..180] range\n * @param {number} deg\n */\nfunction wrap(deg) {\n    while (deg < -180) deg += 360;\n    while (deg > 180) deg -= 360;\n    return deg;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this._up(this.length++);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n\n        if (--this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let bestChild = (pos << 1) + 1; // initially it is the left child\n            const right = bestChild + 1;\n\n            if (right < this.length && compare(data[right], data[bestChild]) < 0) {\n                bestChild = right;\n            }\n            if (compare(data[bestChild], item) >= 0) break;\n\n            data[pos] = data[bestChild];\n            pos = bestChild;\n        }\n\n        data[pos] = item;\n    }\n}\n","/**\n * The maximum value of a coordinate in the internal tile coordinate system. Coordinates of\n * all source features normalized to this extent upon load.\n *\n * The value is a consequence of the following:\n *\n * * Vertex buffer store positions as signed 16 bit integers.\n * * One bit is lost for signedness to support tile buffers.\n * * One bit is lost because the line vertex buffer used to pack 1 bit of other data into the int.\n * * One bit is lost to support features extending past the extent on the right edge of the tile.\n * * This leaves us with 2^13 = 8192\n *\n * @private\n * @readonly\n */\nexport default 8192;\n","import {isValue} from '../values';\nimport {NumberType} from '../types';\nimport {classifyRings, updateBBox, boxWithinBox, pointWithinPolygon, segmentIntersectSegment} from '../../util/geometry_util';\nimport CheapRuler from \"cheap-ruler\";\nimport TinyQueue from \"tinyqueue\";\nimport EXTENT from '../../data/extent';\n\nimport type Point from \"@mapbox/point-geometry\";\nimport type ParsingContext from '../parsing_context';\nimport type {BBox} from '../../util/geometry_util';\nimport type {Type} from '../types';\nimport type {Expression} from '../expression';\nimport type {CanonicalTileID} from '../../types/tile_id';\nimport type EvaluationContext from '../evaluation_context';\n\ntype DistanceGeometry = GeoJSON.Point | GeoJSON.MultiPoint | GeoJSON.LineString | GeoJSON.MultiLineString | GeoJSON.Polygon | GeoJSON.MultiPolygon;\n\n// Inclusive index range for multipoint or linestring container\ntype IndexRange = [number, number];\ntype DistPair = {\n    dist: number;\n    range1: IndexRange;\n    range2: IndexRange;\n};\nfunction compareMax(a: DistPair, b: DistPair) {\n    return b.dist - a.dist;\n}\n\nconst MIN_POINT_SIZE = 100;\nconst MIN_LINE_POINT_SIZE = 50;\n\nfunction isDefaultBBOX(bbox: BBox) {\n    const defualtBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    if (defualtBBox.length !== bbox.length) {\n        return false;\n    }\n    for (let i = 0; i < defualtBBox.length; i++) {\n        if (defualtBBox[i] !== bbox[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getRangeSize(range: IndexRange) {\n    return range[1] - range[0] + 1;\n}\n\nfunction isRangeSafe(range: IndexRange, threshold: number) {\n    const ret = range[1] >= range[0] && range[1] < threshold;\n    if (!ret) {\n        console.warn(\"Distance Expression: Index is out of range\");\n    }\n    return ret;\n}\n\n// Split the point set(points or linestring) into two halves, using IndexRange to do in-place splitting.\n// If geometry is a line, the last point(here is the second index) of range1 needs to be included as the first point(here is the first index) of range2.\n// If geometry are points, just split the points equally(if possible) into two new point sets(here are two index ranges).\nfunction splitRange(range: IndexRange, isLine: boolean) {\n    if (range[0] > range[1]) return [null, null];\n    const size = getRangeSize(range);\n    if (isLine) {\n        if (size === 2) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2);\n        const range1: IndexRange = [range[0], range[0] + size1];\n        const range2: IndexRange = [range[0] + size1, range[1]];\n        return [range1, range2];\n    } else {\n        if (size === 1) {\n            return [range, null];\n        }\n        const size1 = Math.floor(size / 2) - 1;\n        const range1: IndexRange = [range[0], range[0] + size1];\n        const range2: IndexRange = [range[0] + size1 + 1, range[1]];\n        return [range1, range2];\n    }\n}\n\nfunction getBBox(pointSets: Array<[number, number]>, range: IndexRange) {\n    const bbox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    if (!isRangeSafe(range, pointSets.length)) return bbox;\n    for (let i = range[0]; i <= range[1]; ++i) {\n        updateBBox(bbox, pointSets[i]);\n    }\n    return bbox;\n}\n\nfunction getPolygonBBox(polygon: Array<Array<[number, number]>>) {\n    const bbox: BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    for (let i = 0; i < polygon.length; ++i) {\n        for (let j = 0; j < polygon[i].length; ++j) {\n            updateBBox(bbox, polygon[i][j]);\n        }\n    }\n    return bbox;\n}\n\n// Calculate the distance between two bounding boxes.\n// Calculate the delta in x and y direction, and use two fake points {0.0, 0.0} and {dx, dy} to calculate the distance.\n// Distance will be 0.0 if bounding box are overlapping.\nfunction bboxToBBoxDistance(bbox1: BBox, bbox2: BBox, ruler: CheapRuler) {\n    if (isDefaultBBOX(bbox1) || isDefaultBBOX(bbox2)) {\n        return NaN;\n    }\n    let dx = 0.0;\n    let dy = 0.0;\n    // bbox1 in left side\n    if (bbox1[2] < bbox2[0]) {\n        dx = bbox2[0] - bbox1[2];\n    }\n    // bbox1 in right side\n    if (bbox1[0] > bbox2[2]) {\n        dx = bbox1[0] - bbox2[2];\n    }\n    // bbox1 in above side\n    if (bbox1[1] > bbox2[3]) {\n        dy = bbox1[1] - bbox2[3];\n    }\n    // bbox1 in down side\n    if (bbox1[3] < bbox2[1]) {\n        dy = bbox2[1] - bbox1[3];\n    }\n    return ruler.distance([0.0, 0.0], [dx, dy]);\n}\n\nfunction lngFromMercatorX(x: number): number {\n    return x * 360 - 180;\n}\n\nfunction latFromMercatorY(y: number): number {\n    const y2 = 180 - y * 360;\n    return 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;\n}\n\nfunction getLngLatPoint(coord: Point, canonical: CanonicalTileID) {\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    const x = (coord.x / EXTENT + canonical.x) / tilesAtZoom;\n    const y = (coord.y / EXTENT + canonical.y) / tilesAtZoom;\n    return [lngFromMercatorX(x), latFromMercatorY(y)];\n}\n\nfunction getLngLatPoints(coordinates: Array<Point>, canonical: CanonicalTileID): number[][] {\n    const coords: number[][] = [];\n    for (let i = 0; i < coordinates.length; ++i) {\n        coords.push(getLngLatPoint(coordinates[i], canonical));\n    }\n    return coords;\n}\n\nfunction pointToLineDistance(point: [number, number], line: Array<[number, number]>, ruler: CheapRuler) {\n    const nearestPoint = ruler.pointOnLine(line, point).point;\n    return ruler.distance(point, nearestPoint);\n}\n\nfunction pointsToLineDistance(points: Array<[number, number]>, rangeA: IndexRange, line: Array<[number, number]>, rangeB: IndexRange, ruler: CheapRuler) {\n    const subLine = line.slice(rangeB[0], rangeB[1] + 1);\n    let dist = Infinity;\n    for (let i = rangeA[0]; i <= rangeA[1]; ++i) {\n        if ((dist = Math.min(dist, pointToLineDistance(points[i], subLine, ruler))) === 0.0) return 0.0;\n    }\n    return dist;\n}\n\n// precondition is two segments are not intersecting with each other\nfunction segmentToSegmentDistance(p1: [number, number], p2: [number, number], q1: [number, number], q2: [number, number], ruler: CheapRuler) {\n    const dist1 = Math.min(\n        ruler.pointToSegmentDistance(p1, q1, q2),\n        ruler.pointToSegmentDistance(p2, q1, q2)\n    );\n    const dist2 = Math.min(\n        ruler.pointToSegmentDistance(q1, p1, p2),\n        ruler.pointToSegmentDistance(q2, p1, p2)\n    );\n\n    return Math.min(dist1, dist2);\n}\n\nfunction lineToLineDistance(line1: Array<[number, number]>, range1: IndexRange, line2: Array<[number, number]>, range2: IndexRange, ruler: CheapRuler) {\n    if (!isRangeSafe(range1, line1.length) || !isRangeSafe(range2, line2.length)) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i < range1[1]; ++i) {\n        for (let j = range2[0]; j < range2[1]; ++j) {\n            if (segmentIntersectSegment(line1[i], line1[i + 1], line2[j], line2[j + 1])) return 0.0;\n            dist = Math.min(dist, segmentToSegmentDistance(line1[i], line1[i + 1], line2[j], line2[j + 1], ruler));\n        }\n    }\n    return dist;\n}\n\nfunction pointsToPointsDistance(pointSet1: Array<[number, number]>, range1: IndexRange, pointSet2: Array<[number, number]>, range2: IndexRange, ruler: CheapRuler) {\n    if (!isRangeSafe(range1, pointSet1.length) || !isRangeSafe(range2, pointSet2.length)) {\n        return NaN;\n    }\n    let dist = Infinity;\n    for (let i = range1[0]; i <= range1[1]; ++i) {\n        for (let j = range2[0]; j <= range2[1]; ++j) {\n            if ((dist = Math.min(dist, ruler.distance(pointSet1[i], pointSet2[j]))) === 0.0) return dist;\n        }\n    }\n    return dist;\n}\n\nfunction pointToPolygonDistance(point: [number, number], polygon: Array<Array<[number, number]>>, ruler: CheapRuler) {\n    if (pointWithinPolygon(point, polygon, true /*trueOnBoundary*/)) return 0.0;\n    let dist = Infinity;\n    for (const ring of polygon) {\n        const ringLen = ring.length;\n        if (ringLen < 2) {\n            console.warn(\"Distance Expression: Invalid polygon!\");\n            return NaN;\n        }\n        if (ring[0] !== ring[ringLen - 1]) {\n            if ((dist = Math.min(dist, ruler.pointToSegmentDistance(point, ring[ringLen - 1], ring[0]))) === 0.0) return dist;\n        }\n        if ((dist = Math.min(dist, pointToLineDistance(point, ring, ruler))) === 0.0) return dist;\n    }\n    return dist;\n}\n\nfunction lineToPolygonDistance(line: Array<[number, number]>, range: IndexRange, polygon: Array<Array<[number, number]>>, ruler: CheapRuler) {\n    if (!isRangeSafe(range, line.length)) {\n        return NaN;\n    }\n    for (let i = range[0]; i <= range[1]; ++i) {\n        if (pointWithinPolygon(line[i], polygon, true /*trueOnBoundary*/)) return 0.0;\n    }\n    let dist = Infinity;\n    for (let i = range[0]; i < range[1]; ++i) {\n        for (const ring of polygon) {\n            for (let j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                if (segmentIntersectSegment(line[i], line[i + 1], ring[k], ring[j])) return 0.0;\n                dist = Math.min(dist, segmentToSegmentDistance(line[i], line[i + 1], ring[k], ring[j], ruler));\n            }\n        }\n    }\n    return dist;\n}\n\nfunction polygonIntersect(polygon1: Array<Array<[number, number]>>, polygon2: Array<Array<[number, number]>>) {\n    for (const ring of polygon1) {\n        for (let i = 0; i <= ring.length - 1; ++i) {\n            if (pointWithinPolygon(ring[i], polygon2, true /*trueOnBoundary*/)) return true;\n        }\n    }\n    return false;\n}\n\nfunction polygonToPolygonDistance(polygon1: Array<Array<[number, number]>>, polygon2: Array<Array<[number, number]>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    const bbox1 = getPolygonBBox(polygon1);\n    const bbox2 = getPolygonBBox(polygon2);\n    if (currentMiniDist !== Infinity && bboxToBBoxDistance(bbox1, bbox2, ruler) >= currentMiniDist) {\n        return currentMiniDist;\n    }\n    if (boxWithinBox(bbox1, bbox2)) {\n        if (polygonIntersect(polygon1, polygon2)) return 0.0;\n    } else if (polygonIntersect(polygon2, polygon1)) {\n        return 0.0;\n    }\n    let dist = currentMiniDist;\n    for (const ring1 of polygon1) {\n        for (let i = 0, len1 = ring1.length, l = len1 - 1; i < len1; l = i++) {\n            for (const ring2 of polygon2) {\n                for (let j = 0, len2 = ring2.length, k = len2 - 1; j < len2; k = j++) {\n                    if (segmentIntersectSegment(ring1[l], ring1[i], ring2[k], ring2[j])) return 0.0;\n                    dist = Math.min(dist, segmentToSegmentDistance(ring1[l], ring1[i], ring2[k], ring2[j], ruler));\n                }\n            }\n        }\n    }\n    return dist;\n}\n\nfunction updateQueue(distQueue: TinyQueue<DistPair>, miniDist: number, ruler: CheapRuler, pointSet1: Array<[number, number]>, pointSet2: Array<[number, number]>, r1: IndexRange | null, r2: IndexRange | null) {\n    if (r1 === null || r2 === null) return;\n    const tempDist = bboxToBBoxDistance(getBBox(pointSet1, r1), getBBox(pointSet2, r2), ruler);\n    // Insert new pair to the queue if the bbox distance is less than miniDist, the pair with biggest distance will be at the top\n    if (tempDist < miniDist) distQueue.push({dist: tempDist, range1: r1, range2: r2});\n}\n\n// Divide and conquer, the time complexity is O(n*lgn), faster than Brute force O(n*n)\n// Most of the time, use index for in-place processing.\nfunction pointSetToPolygonDistance(pointSets: Array<[number, number]>, isLine: boolean, polygon: Array<Array<[number, number]>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let miniDist = Math.min(ruler.distance(pointSets[0], polygon[0][0]), currentMiniDist);\n    if (miniDist === 0.0) return miniDist;\n    const initialDistPair: DistPair = {\n        dist: 0,\n        range1: [0, pointSets.length - 1],\n        range2: [0, 0]\n    };\n    const distQueue = new TinyQueue<DistPair>([initialDistPair], compareMax);\n\n    const setThreshold = isLine ? MIN_LINE_POINT_SIZE : MIN_POINT_SIZE;\n    const polyBBox = getPolygonBBox(polygon);\n\n    while (distQueue.length) {\n        const distPair = distQueue.pop();\n        if (distPair.dist >= miniDist) continue;\n        const range = distPair.range1;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(range) <= setThreshold) {\n            if (!isRangeSafe(range, pointSets.length)) return NaN;\n            if (isLine) {\n                const tempDist = lineToPolygonDistance(pointSets, range, polygon, ruler);\n                if ((miniDist = Math.min(miniDist, tempDist)) === 0.0) return miniDist;\n            } else {\n                for (let i = range[0]; i <= range[1]; ++i) {\n                    const tempDist = pointToPolygonDistance(pointSets[i], polygon, ruler);\n                    if ((miniDist = Math.min(miniDist, tempDist)) === 0.0) return miniDist;\n                }\n            }\n        } else {\n            const newRanges = splitRange(range, isLine);\n            if (newRanges[0] !== null) {\n                const tempDist = bboxToBBoxDistance(getBBox(pointSets, newRanges[0]), polyBBox, ruler);\n                if (tempDist < miniDist) distQueue.push({dist: tempDist, range1: newRanges[0], range2: [0, 0]});\n            }\n            if (newRanges[1] !== null) {\n                const tempDist = bboxToBBoxDistance(getBBox(pointSets, newRanges[1]), polyBBox, ruler);\n                if (tempDist < miniDist) distQueue.push({dist: tempDist, range1: newRanges[1], range2: [0, 0]});\n            }\n        }\n    }\n    return miniDist;\n}\n\nfunction pointSetsDistance(pointSet1: Array<[number, number]>, isLine1: boolean, pointSet2: Array<[number, number]>, isLine2: boolean, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let miniDist = Math.min(currentMiniDist, ruler.distance(pointSet1[0], pointSet2[0]));\n    if (miniDist === 0.0) return miniDist;\n    const initialDistPair: DistPair = {\n        dist: 0,\n        range1: [0, pointSet1.length - 1],\n        range2: [0, pointSet2.length - 1]\n    };\n    const distQueue = new TinyQueue<DistPair>([initialDistPair], compareMax);\n\n    const set1Threshold = isLine1 ? MIN_LINE_POINT_SIZE : MIN_POINT_SIZE;\n    const set2Threshold = isLine2 ? MIN_LINE_POINT_SIZE : MIN_POINT_SIZE;\n\n    while (distQueue.length) {\n        const distPair = distQueue.pop();\n        if (distPair.dist >= miniDist) continue;\n        const rangeA = distPair.range1;\n        const rangeB = distPair.range2;\n        // In case the set size are relatively small, we could use brute-force directly\n        if (getRangeSize(rangeA) <= set1Threshold && getRangeSize(rangeB) <= set2Threshold) {\n            if (!isRangeSafe(rangeA, pointSet1.length) || !isRangeSafe(rangeB, pointSet2.length)) {\n                return NaN;\n            }\n            if (isLine1 && isLine2) {\n                miniDist = Math.min(miniDist, lineToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler));\n            } else if (!isLine1 && !isLine2) {\n                miniDist = Math.min(miniDist, pointsToPointsDistance(pointSet1, rangeA, pointSet2, rangeB, ruler));\n            } else if (isLine1 && !isLine2) {\n                miniDist = Math.min(miniDist, pointsToLineDistance(pointSet2, rangeB, pointSet1, rangeA, ruler));\n            } else if (!isLine1 && isLine2) {\n                miniDist = Math.min(miniDist, pointsToLineDistance(pointSet1, rangeA, pointSet2, rangeB, ruler));\n            }\n            if (miniDist === 0.0) return miniDist;\n        } else {\n            const newRangesA = splitRange(rangeA, isLine1);\n            const newRangesB = splitRange(rangeB, isLine2);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[0]);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[0], newRangesB[1]);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[0]);\n            updateQueue(distQueue, miniDist, ruler, pointSet1, pointSet2, newRangesA[1], newRangesB[1]);\n        }\n    }\n    return miniDist;\n}\n\nfunction pointSetToLinesDistance(pointSet: Array<[number, number]>, isLine: boolean, lines: Array<Array<[number, number]>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let dist = currentMiniDist;\n    const bbox1 = getBBox(pointSet, [0, pointSet.length - 1]);\n    for (const line of lines) {\n        if (dist !== Infinity && bboxToBBoxDistance(bbox1, getBBox(line, [0, line.length - 1]), ruler) >= dist) continue;\n        dist = Math.min(dist, pointSetsDistance(pointSet, isLine, line, true /*isLine*/, ruler, dist));\n        if (dist === 0.0) return dist;\n    }\n    return dist;\n}\n\nfunction pointSetToPolygonsDistance(points: Array<[number, number]>, isLine: boolean, polygons: Array<Array<Array<[number, number]>>>, ruler: CheapRuler, currentMiniDist: number = Infinity) {\n    let dist = currentMiniDist;\n    const bbox1 = getBBox(points, [0, points.length - 1]);\n    for (const polygon of polygons) {\n        if (dist !== Infinity && bboxToBBoxDistance(bbox1, getPolygonBBox(polygon), ruler) >= dist) continue;\n        const tempDist = pointSetToPolygonDistance(points, isLine, polygon, ruler, dist);\n        if (isNaN(tempDist)) return tempDist;\n        if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n    }\n    return dist;\n}\n\nfunction polygonsToPolygonsDistance(polygons1: Array<Array<Array<[number, number]>>>, polygons2: Array<Array<Array<[number, number]>>>, ruler: CheapRuler) {\n    let dist = Infinity;\n    for (const polygon1 of polygons1) {\n        for (const polygon2 of polygons2) {\n            const tempDist = polygonToPolygonDistance(polygon1, polygon2, ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n    }\n    return dist;\n}\n\nfunction pointsToGeometryDistance(originGeometry: Array<Array<Point>>, canonical: CanonicalTileID, geometry: DistanceGeometry) {\n    const lngLatPoints = [];\n    for (const points of originGeometry) {\n        for (const point of points) {\n            lngLatPoints.push(getLngLatPoint(point, canonical));\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n    const ruler = new CheapRuler(lngLatPoints[0][1], 'meters');\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint' || geometry.type === 'LineString') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return pointSetsDistance(lngLatPoints, false /*isLine*/,\n            (geometry.type === 'Point' ? [geometry.coordinates] : geometry.coordinates) as Array<[number, number]>,\n            geometry.type === 'LineString' /*isLine*/, ruler);\n    }\n    if (geometry.type === 'MultiLineString') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return pointSetToLinesDistance(lngLatPoints, false /*isLine*/, geometry.coordinates as Array<Array<[number, number]>>, ruler);\n    }\n    if (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return pointSetToPolygonsDistance(lngLatPoints, false /*isLine*/,\n            (geometry.type === 'Polygon' ? [geometry.coordinates] : geometry.coordinates) as Array<Array<Array<[number, number]>>>, ruler);\n    }\n    return null;\n}\n\nfunction linesToGeometryDistance(originGeometry: Array<Array<Point>>, canonical: CanonicalTileID, geometry: DistanceGeometry) {\n    const lngLatLines = [];\n    for (const line of originGeometry) {\n        const lngLatLine = [];\n        for (const point of line) {\n            lngLatLine.push(getLngLatPoint(point, canonical));\n        }\n        lngLatLines.push(lngLatLine);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n    const ruler = new CheapRuler(lngLatLines[0][0][1], 'meters');\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint' || geometry.type === 'LineString') {\n        return pointSetToLinesDistance(\n            (geometry.type === 'Point' ? [geometry.coordinates] : geometry.coordinates) as Array<[number, number]>,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            geometry.type === 'LineString' /*isLine*/, lngLatLines, ruler);\n    }\n    if (geometry.type === 'MultiLineString') {\n        let dist = Infinity;\n        for (let i = 0; i < geometry.coordinates.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const tempDist = pointSetToLinesDistance(geometry.coordinates[i] as Array<[number, number]>, true /*isLine*/, lngLatLines, ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n        return dist;\n    }\n    if (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\n        let dist = Infinity;\n        for (let i = 0; i < lngLatLines.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const tempDist = pointSetToPolygonsDistance(lngLatLines[i], true /*isLine*/,\n                (geometry.type === 'Polygon' ? [geometry.coordinates] : geometry.coordinates) as Array<Array<Array<[number, number]>>>,\n                ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n        return dist;\n    }\n    return null;\n}\n\nfunction polygonsToGeometryDistance(originGeometry: Array<Array<Point>>, canonical: CanonicalTileID, geometry: DistanceGeometry) {\n    const lngLatPolygons = [];\n    for (const polygon of classifyRings(originGeometry, 0)) {\n        const lngLatPolygon = [];\n        for (let i = 0; i < polygon.length; ++i) {\n            lngLatPolygon.push(getLngLatPoints(polygon[i], canonical));\n        }\n        lngLatPolygons.push(lngLatPolygon);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n    const ruler = new CheapRuler(lngLatPolygons[0][0][0][1], 'meters');\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint' || geometry.type === 'LineString') {\n        return pointSetToPolygonsDistance(\n            (geometry.type === 'Point' ? [geometry.coordinates] : geometry.coordinates) as Array<[number, number]>,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            geometry.type === 'LineString' /*isLine*/, lngLatPolygons, ruler);\n    }\n    if (geometry.type === 'MultiLineString') {\n        let dist = Infinity;\n        for (let i = 0; i < geometry.coordinates.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const tempDist = pointSetToPolygonsDistance(geometry.coordinates[i] as Array<[number, number]>, true /*isLine*/, lngLatPolygons, ruler, dist);\n            if (isNaN(tempDist)) return tempDist;\n            if ((dist = Math.min(dist, tempDist)) === 0.0) return dist;\n        }\n        return dist;\n    }\n    if (geometry.type === 'Polygon' || geometry.type === 'MultiPolygon') {\n        return polygonsToPolygonsDistance(\n            (geometry.type === 'Polygon' ? [geometry.coordinates] : geometry.coordinates) as Array<Array<Array<[number, number]>>>,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            lngLatPolygons, ruler);\n    }\n    return null;\n}\n\nfunction isTypeValid(type: string) {\n    return (\n        type === \"Point\" ||\n        type === \"MultiPoint\" ||\n        type === \"LineString\" ||\n        type === \"MultiLineString\" ||\n        type === \"Polygon\" ||\n        type === \"MultiPolygon\"\n    );\n}\nclass Distance implements Expression {\n    type: Type;\n    geojson: GeoJSON.GeoJSON;\n    geometries: DistanceGeometry;\n\n    constructor(geojson: GeoJSON.GeoJSON, geometries: DistanceGeometry) {\n        this.type = NumberType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Distance | null | void {\n        if (args.length !== 2) {\n            return context.error(`'distance' expression requires either one argument, but found ' ${args.length - 1} instead.`);\n        }\n        if (isValue(args[1])) {\n            const geojson = args[1] as GeoJSON.GeoJSON;\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    if (isTypeValid(geojson.features[i].geometry.type)) {\n                        return new Distance(geojson, geojson.features[i].geometry as DistanceGeometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                if (isTypeValid(geojson.geometry.type)) {\n                    return new Distance(geojson, geojson.geometry as DistanceGeometry);\n                }\n            } else if (isTypeValid(geojson.type)) {\n                return new Distance(geojson, geojson as DistanceGeometry);\n            }\n        }\n        return context.error(\n            \"'distance' expression needs to be an array with format [\\'Distance\\', GeoJSONObj].\"\n        );\n    }\n\n    evaluate(ctx: EvaluationContext): number | null {\n        const geometry = ctx.geometry();\n        const canonical = ctx.canonicalID();\n        if (geometry != null && canonical != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsToGeometryDistance(geometry, canonical, this.geometries);\n            }\n            if (ctx.geometryType() === 'LineString') {\n                return linesToGeometryDistance(geometry, canonical, this.geometries);\n            }\n            if (ctx.geometryType() === 'Polygon') {\n                return polygonsToGeometryDistance(geometry, canonical, this.geometries);\n            }\n            console.warn(\"Distance Expression: currently only evaluates valid Point/LineString/Polygon geometries.\");\n        } else {\n            console.warn(\"Distance Expression: requirs valid feature and canonical information.\");\n        }\n        return null;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): Array<unknown> {\n        return ['distance', this.geojson];\n    }\n}\n\nexport default Distance;\n","import CompoundExpression from './compound_expression';\nimport Within from './definitions/within';\nimport Distance from './definitions/distance';\nimport Config from './definitions/config';\n\nimport type {Expression} from './expression';\n\nfunction isFeatureConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    if (e instanceof Distance) {\n        return false;\n    }\n\n    if (e instanceof Config) {\n        return e.featureConstant;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction getConfigDependencies(e: Expression): Set<string> {\n    if (e instanceof Config) {\n        const singleConfig = new Set([e.key]);\n        return singleConfig;\n    }\n\n    let result = new Set<string>();\n    e.eachChild(arg => {\n        result = new Set([...result, ...getConfigDependencies(arg)]);\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>): boolean {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant, getConfigDependencies};\n","import {typeEquals, ValueType} from '../types';\nimport {Color, typeOf, toString as valueToString} from '../values';\nimport Formatted from '../types/formatted';\nimport ResolvedImage from '../types/resolved_image';\nimport * as isConstant from '../is_constant';\nimport Literal from './literal';\n\nimport type {Type} from '../types';\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\n\nconst FQIDSeparator = '\\u001F';\n\nexport function makeConfigFQID(id: string, ownScope?: string | null, contextScope?: string | null): string {\n    return [id, ownScope, contextScope].filter(Boolean).join(FQIDSeparator);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction coerceValue(type: string, value: any): any {\n    switch (type) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    case 'string': return valueToString(value);\n    case 'number': return +value;\n    case 'boolean': return !!value;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    case 'color': return Color.parse(value);\n    case 'formatted': {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return Formatted.fromString(valueToString(value));\n    }\n    case 'resolvedImage': {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return ResolvedImage.build(valueToString(value));\n    }\n    }\n    return value;\n}\n\nfunction clampToAllowedNumber(value: number, min?: number, max?: number, step?: number): number {\n    if (step !== undefined) {\n        value = step * Math.round(value / step);\n    }\n    if (min !== undefined && value < min) {\n        value = min;\n    }\n    if (max !== undefined && value > max) {\n        value = max;\n    }\n    return value;\n}\n\nclass Config implements Expression {\n    type: Type;\n    key: string;\n    scope: string | null | undefined;\n    featureConstant: boolean;\n\n    constructor(type: Type, key: string, scope?: string, featureConstant: boolean = false) {\n        this.type = type;\n        this.key = key;\n        this.scope = scope;\n        this.featureConstant = featureConstant;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Config | null | void {\n        let type = context.expectedType;\n        if (type === null || type === undefined) {\n            type = ValueType;\n        }\n        if (args.length < 2 || args.length > 3) {\n            return context.error(`Invalid number of arguments for 'config' expression.`);\n        }\n\n        const configKey = context.parse(args[1], 1);\n        if (!(configKey instanceof Literal)) {\n            return context.error(`Key name of 'config' expression must be a string literal.`);\n        }\n\n        let featureConstant = true;\n        let configScopeValue: string | undefined;\n        const configKeyValue = valueToString(configKey.value);\n\n        if (args.length >= 3) {\n            const configScope = context.parse(args[2], 2);\n            if (!(configScope instanceof Literal)) {\n                return context.error(`Scope of 'config' expression must be a string literal.`);\n            }\n\n            configScopeValue = valueToString(configScope.value);\n        }\n\n        if (context.options) {\n            const fqid = makeConfigFQID(configKeyValue, configScopeValue, context._scope);\n            const config = context.options.get(fqid);\n            if (config) {\n                featureConstant = isConstant.isFeatureConstant(config.value || config.default);\n            }\n        }\n\n        return new Config(type, configKeyValue, configScopeValue, featureConstant);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        const fqid = makeConfigFQID(this.key, this.scope, ctx.scope);\n        const config = ctx.getConfig(fqid);\n        if (!config) return null;\n\n        const {type, value, values, minValue, maxValue, stepValue} = config;\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const defaultValue = config.default.evaluate(ctx);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        let result = defaultValue;\n        if (value) {\n            // temporarily override scope to parent to evaluate config expressions passed from the parent\n            const originalScope = ctx.scope;\n            ctx.scope = (originalScope || '').split(FQIDSeparator).slice(1).join(FQIDSeparator);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            result = value.evaluate(ctx);\n            ctx.scope = originalScope;\n        }\n        if (type) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            result = coerceValue(type, result);\n        }\n\n        if (result !== undefined && (minValue !== undefined || maxValue !== undefined || stepValue !== undefined)) {\n            if (typeof result === 'number') {\n                result = clampToAllowedNumber(result, minValue, maxValue, stepValue);\n            } else if (Array.isArray(result)) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                result = result.map((item) => (typeof item === 'number' ? clampToAllowedNumber(item, minValue, maxValue, stepValue) : item));\n            }\n        }\n\n        if (value !== undefined && result !== undefined && values && !values.includes(result)) {\n            // The result is not among the allowed values. Instead, use the default value from the option.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            result = defaultValue;\n            if (type) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                result = coerceValue(type, result);\n            }\n        }\n\n        // @ts-expect-error - TS2367 - This comparison appears to be unintentional because the types 'string' and 'Type' have no overlap.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if ((type && type !== this.type) || (result !== undefined && !typeEquals(typeOf(result), this.type))) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            result = coerceValue(this.type.kind, result);\n        }\n\n        return result;\n    }\n\n    eachChild() { }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const res = [\"config\", this.key];\n        if (this.scope) {\n            res.concat(this.scope);\n        }\n        return res;\n    }\n}\n\nexport default Config;\n","import type {Type} from '../types';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): void | Var {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<string> {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","import Scope from './scope';\nimport {checkSubtype} from './types';\nimport ParsingError from './parsing_error';\nimport Literal from './definitions/literal';\nimport Assertion from './definitions/assertion';\nimport Coercion from './definitions/coercion';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport CollatorExpression from './definitions/collator';\nimport Within from './definitions/within';\nimport Distance from './definitions/distance';\nimport Config from './definitions/config';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant';\nimport Var from './definitions/var';\n\nimport type {Expression, ExpressionRegistry} from './expression';\nimport type {Type} from './types';\nimport type {ConfigOptions} from '../types/config_options';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number | string>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n    _scope: string | null | undefined;\n    options: ConfigOptions | null | undefined;\n    iconImageUseTheme: string;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: Type | null | undefined;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number | string> = [],\n        expectedType?: Type | null,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = [],\n        _scope?: string | null,\n        options?: ConfigOptions | null,\n        iconImageUseTheme?: string\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => { if (typeof part === 'string') { return `['${part}']`; } return `[${part}]`; }).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n        this._scope = _scope;\n        this.options = options;\n        this.iconImageUseTheme = iconImageUseTheme;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: unknown,\n        index?: number,\n        expectedType?: Type | null,\n        bindings?: Array<[string, Expression]>,\n        options: {\n            typeAnnotation?: 'assert' | 'coerce' | 'omit';\n        } = {},\n    ): Expression | null | void {\n        if (index || expectedType) {\n            return this.concat(index, null, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if parent object being is an argument of another expression\n     * @param key key of parent object being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parseObjectValue(\n        expr: unknown,\n        index: number,\n        key: string,\n        expectedType?: Type | null,\n        bindings?: Array<[string, Expression]>,\n        options: {\n            typeAnnotation?: 'assert' | 'coerce' | 'omit';\n        } = {},\n    ): Expression | null | void {\n        return this.concat(index, key, expectedType, bindings)._parse(expr, options);\n    }\n\n    _parse(\n        expr: unknown,\n        options: {\n            typeAnnotation?: 'assert' | 'coerce' | 'omit';\n        },\n    ): Expression | null | void {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed: Expression, type: Type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const Expr = typeof expr[0] === 'string' ? this.registry[expr[0]] : undefined;\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext(this._scope, this.options, this.iconImageUseTheme);\n                    try {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            // Try to parse as array\n            return Coercion.parse(['to-array', expr], this);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(\n        index?: number | null,\n        key?: string | null,\n        expectedType?: Type | null,\n        bindings?: Array<[string, Expression]>,\n    ): ParsingContext {\n        let path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        path = typeof key === 'string' ? path.concat(key) : path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors,\n            this._scope,\n            this.options,\n            this.iconImageUseTheme\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): string | null | undefined {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    } else if (expression instanceof Distance) {\n        return false;\n    } else if (expression instanceof Config) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'worldview', 'line-progress', 'raster-value', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center', 'measure-light', 'raster-particle-speed']);\n}\n","import RuntimeError from './runtime_error';\n\nimport type {Expression} from './expression';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number): number {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","import {NumberType} from '../types';\nimport {findStopLessThanOrEqualTo} from '../stops';\n\nimport type {Stops} from '../stops';\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Step | null | void {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = (this.input.evaluate(ctx) as number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","'use strict';\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p1y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype = {\n    sampleCurveX: function (t) {\n        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n        return ((this.ax * t + this.bx) * t + this.cx) * t;\n    },\n\n    sampleCurveY: function (t) {\n        return ((this.ay * t + this.by) * t + this.cy) * t;\n    },\n\n    sampleCurveDerivativeX: function (t) {\n        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n    },\n\n    solveCurveX: function (x, epsilon) {\n        if (epsilon === undefined) epsilon = 1e-6;\n\n        if (x < 0.0) return 0.0;\n        if (x > 1.0) return 1.0;\n\n        var t = x;\n\n        // First try a few iterations of Newton's method - normally very fast.\n        for (var i = 0; i < 8; i++) {\n            var x2 = this.sampleCurveX(t) - x;\n            if (Math.abs(x2) < epsilon) return t;\n\n            var d2 = this.sampleCurveDerivativeX(t);\n            if (Math.abs(d2) < 1e-6) break;\n\n            t = t - x2 / d2;\n        }\n\n        // Fall back to the bisection method for reliability.\n        var t0 = 0.0;\n        var t1 = 1.0;\n        t = x;\n\n        for (i = 0; i < 20; i++) {\n            x2 = this.sampleCurveX(t);\n            if (Math.abs(x2 - x) < epsilon) break;\n\n            if (x > x2) {\n                t0 = t;\n            } else {\n                t1 = t;\n            }\n\n            t = (t1 - t0) * 0.5 + t0;\n        }\n\n        return t;\n    },\n\n    solve: function (x, epsilon) {\n        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n    }\n};\n","import Color from './color';\nimport {number as interpolateNumber} from './interpolate';\n\ntype LABColor = {\n    l: number;\n    a: number;\n    b: number;\n    alpha: number;\n};\n\ntype HCLColor = {\n    h: number;\n    c: number;\n    l: number;\n    alpha: number;\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number): LABColor {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number): HCLColor {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n} as const;\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n} as const;\n","import UnitBezier from '@mapbox/unitbezier';\nimport * as interpolate from '../../util/interpolate';\nimport {toString, NumberType, ColorType} from '../types';\nimport {findStopLessThanOrEqualTo} from '../stops';\nimport {hcl, lab} from '../../util/color_spaces';\n\nimport type Color from '../../util/color';\nimport type {Stops} from '../stops';\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nexport type InterpolationType =\n    | {name: 'linear'}\n    | {name: 'exponential'; base: number}\n    | {name: 'cubic-bezier'; controlPoints: [number, number, number, number]};\n\nexport type InterpolationOperator =\n    | 'interpolate'\n    | 'interpolate-hcl'\n    | 'interpolate-lab';\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: InterpolationOperator;\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: InterpolationOperator, interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(\n        interpolation: InterpolationType,\n        input: number,\n        lower: number,\n        upper: number,\n    ): number {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Interpolate | null | void {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if (args.length - 1 > 3 && (args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, operator as InterpolationOperator, interpolation as InterpolationType, input as Expression, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): Color {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx) as Color;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const value: number = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx) as Color;\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx) as Color;\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const outputLower: Color = outputs[index].evaluate(ctx);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const outputUpper: Color = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        let interpolation: [InterpolationType['name'], ...number[]];\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            } else {\n                interpolation = ['exponential', this.interpolation.base];\n            }\n        } else {\n            interpolation = ['cubic-bezier', ...this.interpolation.controlPoints];\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input: number, base: number, lowerValue: number, upperValue: number) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","import assert from 'assert';\nimport {checkSubtype, ValueType} from '../types';\nimport ResolvedImage from '../types/resolved_image';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Coalesce | null | undefined {\n        if (args.length < 2) {\n            // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Coalesce'.\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            new Coalesce(ValueType, parsedArgs) :\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            new Coalesce(outputType, parsedArgs);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"coalesce\"];\n        // @ts-expect-error - TS2345 - Argument of type 'SerializedExpression' is not assignable to parameter of type 'string'.\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","import type {Type} from '../types';\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Let | null | void {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined(): boolean {\n        return this.result.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized: SerializedExpression[] = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","import {array, ValueType, NumberType} from '../types';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type, ArrayType} from '../types';\nimport type {Value} from '../values';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): At | null | void {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t = input.type as ArrayType;\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        const index = (this.index.evaluate(ctx) as number);\n        const array = (this.input.evaluate(ctx) as Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: negative index`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: index exceeds array size`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer. Use at-interpolated for fractional indices`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","import {array, ValueType, NumberType} from '../types';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type, ArrayType} from '../types';\nimport type {Value} from '../values';\n\nclass AtInterpolated implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): AtInterpolated | null | void {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t = input.type as ArrayType;\n        return new AtInterpolated(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        const index = (this.index.evaluate(ctx) as number);\n        const array = (this.input.evaluate(ctx) as Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index > array.length - 1) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index === Math.floor(index)) {\n            return array[index];\n        }\n\n        // Interpolation logic for non-integer indices\n        const lowerIndex = Math.floor(index);\n        const upperIndex = Math.ceil(index);\n\n        const lowerValue = array[lowerIndex];\n        const upperValue = array[upperIndex];\n\n        if (typeof lowerValue !== 'number' || typeof upperValue !== 'number') {\n            throw new RuntimeError(`Cannot interpolate between non-number values at index ${index}.`);\n        }\n\n        // Linear interpolation\n        const fraction = index - lowerIndex;\n        return lowerValue * (1 - fraction) + upperValue * fraction;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"at-interpolated\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default AtInterpolated;\n","import {\n    BooleanType,\n    StringType,\n    ValueType,\n    NullType,\n    toString,\n    NumberType,\n    isValidType,\n    isValidNativeType,\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): In | null | undefined {\n        if (args.length !== 3) {\n            // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'In'.\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'In'.\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const needle = (this.needle.evaluate(ctx));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const haystack = (this.haystack.evaluate(ctx));\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","import {\n    BooleanType,\n    StringType,\n    ValueType,\n    NullType,\n    toString,\n    NumberType,\n    isValidType,\n    isValidNativeType,\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: Expression | null | undefined;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): IndexOf | null | undefined {\n        if (args.length <= 2 ||  args.length >= 5) {\n            // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'IndexOf'.\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'IndexOf'.\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const needle = (this.needle.evaluate(ctx));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const haystack = (this.haystack.evaluate(ctx));\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx) as number);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","import assert from 'assert';\nimport {typeOf} from '../values';\nimport {typeEquals, ValueType} from '../types';\n\nimport type {Type} from '../types';\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\n\n// Map input label values to output expression index\ntype Cases = Partial<Record<number | string, number>>;\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Match | null | void {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType: Type | null | undefined;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const cases: Record<string, any> = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if ((labels as unknown[]).length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of (labels as unknown[])) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType), input.type)) {\n            return null;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const input = (this.input.evaluate(ctx));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n        const output = (typeEquals(typeOf(input), this.inputType) && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {\n            [index: number]: number;\n        } = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label: number | string) => (this.inputType.kind === 'number' ? Number(label) : label);\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","import assert from 'assert';\nimport {BooleanType} from '../types';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Case | null | undefined {\n        if (args.length < 4)\n        // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Case'.\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n        // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Case'.\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: Type | null | undefined;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return new Case(outputType, branches, otherwise);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        return this.branches.every(([_, out]: [any, any]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"case\"];\n        // @ts-expect-error - TS2345 - Argument of type 'SerializedExpression' is not assignable to parameter of type 'string'.\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","import {\n    ValueType,\n    NumberType,\n    StringType,\n    array,\n    toString,\n    isValidType,\n    isValidNativeType,\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: Expression | null | undefined;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Slice | null | undefined {\n        if (args.length <= 2 ||  args.length >= 5) {\n            // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Slice'.\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Slice'.\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    evaluate(ctx: EvaluationContext): any {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const input = (this.input.evaluate(ctx));\n        const beginIndex = (this.beginIndex.evaluate(ctx) as number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx) as number);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            return input.slice(beginIndex, endIndex);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","import {\n    StringType,\n    array,\n} from '../types';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Split implements Expression {\n    type: Type;\n    str: Expression;\n    delimiter: Expression;\n\n    constructor(str: Expression, delimiter: Expression) {\n        this.type = array(StringType);\n        this.str = str;\n        this.delimiter = delimiter;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Split | void {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const str = context.parse(args[1], 1, StringType);\n        const delimiter = context.parse(args[2], 2, StringType);\n\n        if (!str || !delimiter) return;\n\n        return new Split(str, delimiter);\n    }\n\n    evaluate(ctx: EvaluationContext): string[] {\n        const str = (this.str.evaluate(ctx) as string);\n        const delimiter = (this.delimiter.evaluate(ctx) as string);\n\n        return str.split(delimiter);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.str);\n        fn(this.delimiter);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"split\", this.str.serialize(), this.delimiter.serialize()];\n    }\n}\n\nexport default Split;\n","import {toString, ValueType, BooleanType, CollatorType} from '../types';\nimport Assertion from './assertion';\nimport {typeOf} from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression, SerializedExpression, ExpressionRegistration} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=';\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction eq(ctx: EvaluationContext, a: any, b: any): boolean { return a === b; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction neq(ctx: EvaluationContext, a: any, b: any): boolean { return a !== b; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction lt(ctx: EvaluationContext, a: any, b: any): boolean { return a < b; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction gt(ctx: EvaluationContext, a: any, b: any): boolean { return a > b; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction lteq(ctx: EvaluationContext, a: any, b: any): boolean { return a <= b; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction gteq(ctx: EvaluationContext, a: any, b: any): boolean { return a >= b; }\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\nfunction eqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) === 0; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction neqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return !eqCollate(ctx, a, b, c); }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\nfunction ltCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) < 0; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\nfunction gtCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) > 0; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\nfunction lteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) <= 0; }\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\nfunction gteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(\n    op: ComparisonOperator,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    compareBasic: (arg1: EvaluationContext, arg2?: any, arg3?: any) => boolean,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    compareWithCollator: (arg1: EvaluationContext, arg2?: any, arg3?: any, arg4?: any) => boolean,\n): ExpressionRegistration {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: Expression | null | undefined;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator?: Expression | null) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | null | void {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op = args[0] as ComparisonOperator;\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext): boolean {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const lhs = this.lhs.evaluate(ctx);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                const lt = typeOf(lhs);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                const lt = typeOf(lhs);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n\n        serialize(): SerializedExpression {\n            const serialized: SerializedExpression[] = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals: ReturnType<typeof makeComparison> = makeComparison('==', eq, eqCollate);\nexport const NotEquals: ReturnType<typeof makeComparison> = makeComparison('!=', neq, neqCollate);\nexport const LessThan: ReturnType<typeof makeComparison> = makeComparison('<', lt, ltCollate);\nexport const GreaterThan: ReturnType<typeof makeComparison> = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual: ReturnType<typeof makeComparison> = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual: ReturnType<typeof makeComparison> = makeComparison('>=', gteq, gteqCollate);\n","import {StringType, NumberType} from '../types';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    unit: Expression | null;     // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                unit: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Expression | void {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = args[2];\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parseObjectValue(options['locale'], 2, 'locale', StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parseObjectValue(options['currency'], 2, 'currency', StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parseObjectValue(options['unit'], 2, 'unit', StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parseObjectValue(options['min-fraction-digits'], 2, 'min-fraction-digits', NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parseObjectValue(options['max-fraction-digits'], 2, 'max-fraction-digits', NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext): string {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const options: Record<string, any> = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","import {NumberType, toString} from '../types';\nimport {typeOf} from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression, SerializedExpression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: ReadonlyArray<unknown>, context: ParsingContext): Length | null | undefined {\n        if (args.length !== 2)\n        // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Length'.\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n        // @ts-expect-error - TS2322 - Type 'void' is not assignable to type 'Length'.\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext): number {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"length\"];\n        // @ts-expect-error - TS2345 - Argument of type 'SerializedExpression' is not assignable to parameter of type 'string'.\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","// Seeded pseudo random generator function\nexport function mulberry32(a: number): () => number {\n    return function () {\n        a |= 0;\n        a = (a + 0x6d2b79f5) | 0;\n        let t = Math.imul(a ^ (a >>> 15), 1 | a);\n        t = (t + Math.imul(t ^ (t >>> 7), 61 | t)) ^ t;\n        return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n    };\n}\n","import {\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString,\n} from '../types';\nimport {typeOf, Color, validateRGBA, validateHSLA, toString as valueToString} from '../values';\nimport CompoundExpression from '../compound_expression';\nimport RuntimeError from '../runtime_error';\nimport Let from './let';\nimport Var from './var';\nimport Literal from './literal';\nimport Assertion from './assertion';\nimport Coercion from './coercion';\nimport At from './at';\nimport AtInterpolated from './at_interpolated';\nimport In from './in';\nimport IndexOf from './index_of';\nimport Match from './match';\nimport Case from './case';\nimport Slice from './slice';\nimport Split from './split';\nimport Step from './step';\nimport Interpolate from './interpolate';\nimport Coalesce from './coalesce';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison';\nimport CollatorExpression from './collator';\nimport NumberFormat from './number_format';\nimport FormatExpression from './format';\nimport ImageExpression from './image';\nimport Length from './length';\nimport Within from './within';\nimport Config from './config';\nimport Distance from './distance';\nimport {mulberry32} from '../../util/random';\n\nimport type {Type} from '../types';\nimport type {Value} from '../values';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Varargs} from '../compound_expression';\nimport type {Expression, ExpressionRegistry} from '../expression';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'at-interpolated': AtInterpolated,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within,\n    'distance': Distance,\n    'config': Config,\n    'split': Split\n};\n\nfunction rgba(ctx: EvaluationContext, [r, g, b, a]: Expression[]) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    r = r.evaluate(ctx);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    g = g.evaluate(ctx);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    b = b.evaluate(ctx);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return new Color(r as unknown as number / 255, g as unknown as number / 255, b as unknown as number / 255, alpha);\n}\n\nfunction hsla(ctx: EvaluationContext, [h, s, l, a]: Expression[]) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    h = h.evaluate(ctx);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    s = s.evaluate(ctx);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    l = l.evaluate(ctx);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateHSLA(h, s, l, alpha);\n    if (error) throw new RuntimeError(error);\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    const colorFunction = `hsla(${h}, ${s}%, ${l}%, ${alpha})`;\n    const color = Color.parse(colorFunction);\n    if (!color) throw new RuntimeError(`Failed to parse HSLA color: ${colorFunction}`);\n    return color;\n}\n\nfunction has<T extends object>(key: keyof T, obj: T): boolean {\n    return key in obj;\n}\n\nfunction get<T extends object>(key: keyof T, obj: T): T[keyof T] | null {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v: unknown, a: Record<number, unknown>, i: number, j: number): boolean {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nfunction hashString(str: string) {\n    let hash = 0;\n    if (str.length === 0) {\n        return hash;\n    }\n    for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        hash = ((hash << 5) - hash) + char;\n        hash = hash & hash;\n    }\n    return hash;\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            return v.evaluate(ctx).toNonPremultipliedRenderColor(null).toArray();\n        }\n    ],\n    'to-hsla': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            return v.evaluate(ctx).toNonPremultipliedRenderColor(null).toHslaArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'hsl': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        hsla\n    ],\n    'hsla': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        hsla\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-argument\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {}) as Value\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties() as Value\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'worldview': [\n        StringType,\n        [],\n        (ctx) => ctx.globals.worldview || \"\"\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'measure-light': [\n        NumberType,\n        [StringType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [s]) => ctx.measureLight(s.evaluate(ctx))\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'raster-value': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.rasterValue || 0\n    ],\n    'raster-particle-speed': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.rasterParticleSpeed || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => (ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated)\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.log2(n.evaluate(ctx))\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-argument\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-argument\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        (ctx, [k, v]) => ctx.properties()[(k).value] === (v).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            const a = ctx.properties()[(k).value];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            const a = ctx.properties()[(k).value];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            const a = ctx.properties()[(k).value];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            const a = ctx.properties()[(k).value];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const b = (v).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (ctx, [v]) => (v).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (ctx, [v]) => (v).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (ctx, [k, v]) => (v).value.indexOf(ctx.properties()[(k).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k).value], (v).value, 0, (v).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ],\n    'random': [\n        NumberType,\n        [NumberType, NumberType, ValueType],\n        (ctx, args) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment\n            const [min, max, seed] = args.map(arg => arg.evaluate(ctx));\n            if (min > max) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return min;\n            }\n            if (min === max) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                return min;\n            }\n            let seedVal;\n            if (typeof seed === 'string') {\n                seedVal = hashString(seed);\n            } else if (typeof seed === 'number') {\n                seedVal = seed;\n            } else {\n                throw new RuntimeError(`Invalid seed input: ${seed}`);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const random = mulberry32(seedVal)();\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return min + random * (max - min);\n        }\n    ],\n});\n\nexport default expressions;\n","/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> = {\n    result: 'success';\n    value: T;\n} | {\n    result: 'error';\n    value: E;\n};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n","import type {ExpressionSpecification, StylePropertySpecification} from '../style-spec';\n\ntype ExpressionParameter = ExpressionSpecification['parameters'][number];\n\nfunction expressionHasParameter(\n    expression: ExpressionSpecification | null | undefined,\n    parameter: ExpressionParameter,\n): boolean {\n    return !!expression && !!expression.parameters && expression.parameters.indexOf(parameter) > -1;\n}\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsLightExpression(spec: StylePropertySpecification): boolean {\n    return expressionHasParameter(spec.expression, 'measure-light');\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return expressionHasParameter(spec.expression, 'zoom');\n}\n\nexport function supportsLineProgressExpression(spec: StylePropertySpecification): boolean {\n    return expressionHasParameter(spec.expression, 'line-progress');\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\n\nimport * as colorSpaces from '../util/color_spaces';\nimport Color from '../util/color';\nimport {getType, isNumber} from '../util/get_type';\nimport * as interpolate from '../util/interpolate';\nimport Interpolate from '../expression/definitions/interpolate';\nimport Formatted from '../expression/types/formatted';\nimport ResolvedImage from '../expression/types/resolved_image';\nimport {supportsInterpolation} from '../util/properties';\nimport {findStopLessThanOrEqualTo} from '../expression/stops';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const isColor = propertySpec.type === 'color';\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        parameters = Object.assign({}, parameters);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (parameters.stops) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            parameters.stops = parameters.stops.map((stop) => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (parameters.default) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        hashedStops = Object.create(null);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (const stop of parameters.stops) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const featureFunctions: Record<string, any> = {};\n        const zoomStops = [];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (let s = 0; s < parameters.stops.length; s++) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            const stop = parameters.stops[s];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            const zoom = stop[0].zoom;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (featureFunctions[zoom] === undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                featureFunctions[zoom] = {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    zoom,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    type: parameters.type,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    property: parameters.property,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    base: parameters.base\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            zoomStops: parameters.stops.map(s => s[0]),\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (a !== undefined) return a;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (b !== undefined) return b;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (!isNumber(input)) return coalesce(parameters.default, propertySpec.default);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const n = parameters.stops.length;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (n === 1) return parameters.stops[0][1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (!isNumber(input)) return coalesce(parameters.default, propertySpec.default);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const n = parameters.stops.length;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (n === 1) return parameters.stops[0][1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        parameters.stops[index][0],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        parameters.stops[index + 1][0]);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const outputLower = parameters.stops[index][1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const outputUpper = parameters.stops[index + 1][1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    let interp = interpolate[propertySpec.type] || identityFunction;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        const colorspace = colorSpaces[parameters.colorSpace];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (propertySpec.type === 'color') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        input = Color.parse(input);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    } else if (propertySpec.type === 'formatted') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        input = Formatted.fromString(input.toString());\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    } else if (propertySpec.type === 'resolvedImage') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        input = ResolvedImage.build(input.toString());\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","import assert from 'assert';\nimport ParsingError from './parsing_error';\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport Step from './definitions/step';\nimport Interpolate from './definitions/interpolate';\nimport Coalesce from './definitions/coalesce';\nimport Let from './definitions/let';\nimport definitions from './definitions/index';\nimport * as isConstant from './is_constant';\nimport RuntimeError from './runtime_error';\nimport {success, error} from '../util/result';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsLightExpression,\n    supportsInterpolation,\n    supportsLineProgressExpression\n} from '../util/properties';\nimport {isFunction, createFunction} from '../function/index';\nimport {Color} from './values';\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types';\n\nimport type {Type, EvaluationKind} from './types';\nimport type {Value} from './values';\nimport type {Expression} from './expression';\nimport type {StylePropertySpecification} from '../style-spec';\nimport type {Result} from '../util/result';\nimport type {InterpolationType} from './definitions/interpolate';\nimport type {PropertyValueSpecification} from '../types';\nimport type {FormattedSection} from './types/formatted';\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../types/tile_id';\nimport type {FeatureDistanceData} from '../feature_filter/index';\nimport type {ConfigOptions} from '../types/config_options';\nimport type {ImageId} from './types/image_id';\n\nexport interface Feature {\n    readonly type: 0 | 1 | 2 | 3 | 'Unknown' | 'Point' | 'LineString' | 'Polygon';\n    readonly id?: string | number | null;\n    readonly properties: Record<PropertyKey, unknown>;\n    readonly patterns?: Record<PropertyKey, string[]>;\n    readonly geometry?: Array<Array<Point>>;\n}\n\nexport type FeatureState = {\n    [_: string]: unknown;\n};\n\nexport interface GlobalProperties {\n    zoom: number;\n    pitch?: number;\n    heatmapDensity?: number;\n    lineProgress?: number;\n    rasterValue?: number;\n    rasterParticleSpeed?: number;\n    skyRadialProgress?: number;\n    readonly isSupportedScript?: (_: string) => boolean;\n    accumulated?: Value;\n    brightness?: number;\n    worldview?: string;\n}\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues?: {[_: string]: unknown};\n    configDependencies: Set<string>;\n\n    constructor(expression: Expression, propertySpec?: StylePropertySpecification, scope?: string, options?: ConfigOptions, iconImageUseTheme?: string) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext(scope, options, iconImageUseTheme);\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n        this.configDependencies = isConstant.getConfigDependencies(expression);\n    }\n\n    evaluateWithoutErrorHandling(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n        featureTileCoord?: Point,\n        featureDistanceData?: FeatureDistanceData,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n        featureTileCoord?: Point,\n        featureDistanceData?: FeatureDistanceData,\n        iconImageUseTheme?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        this._evaluator.iconImageUseTheme = iconImageUseTheme || null;\n\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (!this._warningHistory[e.message]) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    console.warn(`Failed to evaluate expression \"${JSON.stringify(this.expression.serialize())}\". ${e.message}`);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: unknown): boolean {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(\n    expression: unknown,\n    propertySpec?: StylePropertySpecification | null,\n    scope?: string | null,\n    options?: ConfigOptions | null,\n    iconImageUseTheme?: string | null\n): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined, undefined, undefined, scope, options, iconImageUseTheme);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec, scope, options, iconImageUseTheme));\n}\n\nexport class ZoomConstantExpression<Kind extends EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    configDependencies: Set<string>;\n    _styleExpression: StyleExpression;\n    isLightConstant: boolean | null | undefined;\n    isLineProgressConstant: boolean | null | undefined;\n\n    constructor(kind: Kind, expression: StyleExpression, isLightConstant?: boolean | null, isLineProgressConstant?: boolean | null) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isLightConstant = isLightConstant;\n        this.isLineProgressConstant = isLineProgressConstant;\n        this.isStateDependent = kind !== ('constant' as EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.configDependencies = isConstant.getConfigDependencies(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n        iconImageUseTheme?: string\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, undefined, undefined, iconImageUseTheme);\n    }\n}\n\nexport class ZoomDependentExpression<Kind extends EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n    isLightConstant: boolean | null | undefined;\n    isLineProgressConstant: boolean | null | undefined;\n    configDependencies: Set<string>;\n\n    _styleExpression: StyleExpression;\n    interpolationType: InterpolationType | null | undefined;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType, isLightConstant?: boolean | null, isLineProgressConstant?: boolean | null) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera' as EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.isLightConstant = isLightConstant;\n        this.isLineProgressConstant = isLineProgressConstant;\n        this.configDependencies = isConstant.getConfigDependencies(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant';\n    configDependencies: Set<string>;\n    readonly evaluate: <T = unknown>(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n        iconImageUseTheme?: string\n    ) => T;\n};\n\nexport type SourceExpression = {\n    kind: 'source';\n    isStateDependent: boolean;\n    isLightConstant: boolean | null | undefined;\n    isLineProgressConstant: boolean | null | undefined;\n    configDependencies: Set<string>;\n    readonly evaluate: <T = unknown>(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n    ) => T;\n};\n\nexport type CameraExpression = {\n    kind: 'camera';\n    isStateDependent: boolean;\n    configDependencies: Set<string>;\n    readonly evaluate: <T = unknown>(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n    ) => T;\n    readonly interpolationFactor: (input: number, lower: number, upper: number) => number;\n    zoomStops: Array<number>;\n    interpolationType: InterpolationType | null | undefined;\n};\n\nexport interface CompositeExpression {\n    kind: 'composite';\n    isStateDependent: boolean;\n    isLightConstant: boolean | null | undefined;\n    isLineProgressConstant: boolean | null | undefined;\n    configDependencies: Set<string>;\n    readonly evaluate: <T = unknown>(\n        globals: GlobalProperties,\n        feature?: Feature,\n        featureState?: FeatureState,\n        canonical?: CanonicalTileID,\n        availableImages?: ImageId[],\n        formattedSection?: FormattedSection,\n        iconImageUseTheme?: string\n    ) => T;\n    readonly interpolationFactor: (input: number, lower: number, upper: number) => number;\n    zoomStops: Array<number>;\n    interpolationType: InterpolationType | null | undefined;\n}\n\nexport type StylePropertyExpression = ConstantExpression | SourceExpression | CameraExpression | CompositeExpression;\n\nexport function createPropertyExpression(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    expression: any,\n    propertySpec: StylePropertySpecification,\n    scope?: string | null,\n    options?: ConfigOptions | null,\n    iconImageUseTheme?: string | null\n): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec, scope, options, iconImageUseTheme);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (expression.result === 'error') {\n        return expression as Result<StylePropertyExpression, Array<ParsingError>>;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const parsed = expression.value.expression;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const isLightConstant = isConstant.isGlobalPropertyConstant(parsed, ['measure-light']);\n    if (!isLightConstant && !supportsLightExpression(propertySpec)) {\n        return error([new ParsingError('', 'measure-light expression not supported')]);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const isLineProgressConstant = isConstant.isGlobalPropertyConstant(parsed, ['line-progress']);\n    if (!isLineProgressConstant && !supportsLineProgressExpression(propertySpec)) {\n        return error([new ParsingError('', 'line-progress expression not supported')]);\n    }\n\n    const canRelaxZoomRestriction = propertySpec.expression && propertySpec.expression.relaxZoomRestriction;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant && !canRelaxZoomRestriction) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression, or in the properties of atmosphere.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success((isFeatureConstant && isLineProgressConstant) ?\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            (new ZoomConstantExpression('constant', expression.value, isLightConstant, isLineProgressConstant) as ConstantExpression) :\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            (new ZoomConstantExpression('source', expression.value, isLightConstant, isLineProgressConstant) as SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success((isFeatureConstant && isLineProgressConstant) ?\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType, isLightConstant, isLineProgressConstant) as CameraExpression) :\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType, isLightConstant, isLineProgressConstant) as CompositeExpression));\n}\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: <T = unknown>(globals: GlobalProperties, feature?: Feature) => T;\n    interpolationFactor: (input: number, lower: number, upper: number) => number | null | undefined;\n    zoomStops: Array<number> | null | undefined;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        Object.assign(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize<T>(\n        serialized: {\n            _parameters: PropertyValueSpecification<T>;\n            _specification: StylePropertySpecification;\n        },\n    ): StylePropertyFunction<T> {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize<T>(input: StylePropertyFunction<T>): {\n        _parameters: PropertyValueSpecification<T>;\n        _specification: StylePropertySpecification;\n    } {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(\n    value: PropertyValueSpecification<T>,\n    specification: StylePropertySpecification,\n    scope?: string | null,\n    options?: ConfigOptions | null,\n    iconImageUseTheme?: string | null\n): StylePropertyExpression {\n    if (isFunction(value)) {\n        return new StylePropertyFunction(value, specification) as unknown as StylePropertyExpression;\n\n    } else if (isExpression(value) || (Array.isArray(value) && value.length > 0)) {\n        const expression = createPropertyExpression(value, specification, scope, options, iconImageUseTheme);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value) as PropertyValueSpecification<T>;\n        }\n        return {\n            kind: 'constant',\n            configDependencies: new Set(),\n            evaluate: () => constant\n        } as ConstantExpression;\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result: Step | Interpolate | ParsingError | null = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","import assert from 'assert';\n\nimport type {StylePropertySpecification} from '../style-spec';\nimport type {\n    FunctionSpecification,\n    PropertyFunctionStop,\n    ZoomAndPropertyFunctionStop,\n    ExpressionSpecification,\n} from '../types';\n\nfunction convertLiteral(value: unknown) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction<T>(parameters: FunctionSpecification<T>, propertySpec: StylePropertySpecification): ExpressionSpecification {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    }) as FunctionSpecification<T>['stops'];\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops as Array<ZoomAndPropertyFunctionStop<T>>);\n    } else if (zoomDependent) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return convertZoomFunction(parameters, propertySpec, stops as PropertyFunctionStop<T>[]);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops as PropertyFunctionStop<T>[]);\n    }\n}\n\nfunction convertIdentityFunction<T>(parameters: FunctionSpecification<T>, propertySpec: StylePropertySpecification): ExpressionSpecification {\n    const get: ExpressionSpecification = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression: ExpressionSpecification = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator<T>(parameters: FunctionSpecification<T>) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction<T>(\n    parameters: FunctionSpecification<T>,\n    propertySpec: StylePropertySpecification,\n    stops: Array<ZoomAndPropertyFunctionStop<T>>,\n): ExpressionSpecification {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const featureFunctionParameters: Record<string, any> = {};\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const featureFunctionStops: Record<string, any> = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({} as FunctionSpecification<unknown>, propertySpec);\n    if (functionType === 'exponential') {\n        const expression: ExpressionSpecification = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression: ExpressionSpecification = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a: unknown, b: unknown) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback<T>(parameters: FunctionSpecification<T>, propertySpec: StylePropertySpecification) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction<T>(\n    parameters: FunctionSpecification<T>,\n    propertySpec: StylePropertySpecification,\n    stops: Array<PropertyFunctionStop<T>>,\n): ExpressionSpecification {\n    const type = getFunctionType(parameters, propertySpec);\n    const get: ExpressionSpecification = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression: ExpressionSpecification = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression: ExpressionSpecification = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression: ExpressionSpecification = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression: ExpressionSpecification = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction<T>(parameters: FunctionSpecification<T>, propertySpec: StylePropertySpecification, stops: Array<PropertyFunctionStop<T>>, input: Array<string> = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    fixupDegenerateStepCurve(expression);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression: ExpressionSpecification) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve: ExpressionSpecification, input: unknown, output: unknown, isStep: boolean) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType<T>(parameters: FunctionSpecification<T>, propertySpec: StylePropertySpecification): string {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string): string | ExpressionSpecification {\n    const result: ExpressionSpecification = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: unknown): unknown {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: unknown): unknown {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: {\n            [key: string]: unknown;\n        } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","import latest from '../reference/latest';\nimport {deepUnbundle} from '../util/unbundle_jsonlint';\nimport {createExpression} from '../expression/index';\nimport {isFeatureConstant} from '../expression/is_constant';\nimport assert from 'assert';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../types/tile_id';\nimport type {GlobalProperties, Feature} from '../expression/index';\nimport type {FilterSpecification, ExpressionSpecification} from '../types';\nimport type {ConfigOptions} from '../types/config_options';\n\nexport type FeatureDistanceData = {\n    bearing: [number, number];\n    center: [number, number];\n    scale: number;\n};\nexport type FilterExpression = (\n    globalProperties: GlobalProperties,\n    feature: Feature,\n    canonical?: CanonicalTileID,\n    featureTileCoord?: Point,\n    featureDistanceData?: FeatureDistanceData,\n) => boolean;\n\nexport type FeatureFilter = {\n    filter: FilterExpression;\n    dynamicFilter?: FilterExpression;\n    needGeometry: boolean;\n    needFeature: boolean;\n};\n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter: unknown): boolean {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter?: FilterSpecification, scope: string = \"\", options: ConfigOptions | null = null, layerType: string = 'fill'): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter) as ExpressionSpecification;\n    }\n\n    const filterExp = (filter as string[] | string | boolean);\n\n    let staticFilter = true;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    let filterFunc = null;\n    let filterSpec = null;\n    if (layerType !== 'background' && layerType !== 'sky' && layerType !== 'slot') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        filterSpec = latest[`filter_${layerType}`];\n        assert(filterSpec);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const compiledStaticFilter = createExpression(staticFilter, filterSpec, scope, options);\n\n        if (compiledStaticFilter.result === 'error') {\n            throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            filterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n        }\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec, scope, options);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            dynamicFilterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = (filterFunc as FilterExpression);\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        filter: filterFunc,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractStaticFilter(filter: any): any {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction collapseDynamicBooleanExpressions(expression: any): any {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction unionDynamicBranches(filter: any) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (filter[0] === 'case') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            branches.push(filter[i + 1]);\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        branches.push(filter[filter.length - 1]);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    } else if (filter[0] === 'match') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            branches.push(filter[i + 1]);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        branches.push(filter[filter.length - 1]);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    } else if (filter[0] === 'step') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        filter.length = 0;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    for (let i = 1; i < filter.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        unionDynamicBranches(filter[i]);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isDynamicFilter(filter: any): boolean {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression: string): boolean {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction collapsedExpression(expression: any): any {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (let i = 1; i < expression.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a: number, b: number) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction geometryNeeded(filter: Array<any> | boolean) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within' || filter[0] === 'distance') return true;\n    for (let index = 1; index < filter.length; index++) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction convertFilter(filter?: Array<any> | null): unknown {\n    if (!filter) return true;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        // @ts-expect-error - TS2769 - No overload matches this call.\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        // @ts-expect-error - TS2769 - No overload matches this call.\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === 'has' ? convertHasOp(filter[1]) :\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        true;\n    return converted;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return [`filter-type-${op}`, value];\n    case '$id':\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return [`filter-id-${op}`, value];\n    default:\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return [`filter-${op}`, property, value];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n// @ts-expect-error - TS2769 - No overload matches this call.\n    return ['any'].concat(filters.map(convertFilter));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: unknown) {\n    return ['!', filter];\n}\n","import {isExpressionFilter} from './index';\n\nimport type {FilterSpecification, ExpressionSpecification} from '../types';\n\ntype ExpectedTypes = {\n    [_: string]: 'string' | 'number' | 'boolean';\n};\n\n/**\n * Convert the given legacy filter to (the JSON representation of) an\n * equivalent expression\n * @private\n */\nexport default function convertFilter(filter: FilterSpecification): unknown {\n    return _convertFilter(filter, {});\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction _convertFilter(filter: FilterSpecification, expectedTypes: ExpectedTypes): unknown {\n    if (isExpressionFilter(filter)) { return filter; }\n\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n\n    let converted;\n\n    if (\n        op === '==' ||\n        op === '!=' ||\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>='\n    ) {\n        const [, property, value] = filter;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        converted = convertComparisonOp(property, value, op, expectedTypes);\n    } else if (op === 'any') {\n        const children = filter.slice(1).map(f => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const types: Record<string, any> = {};\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const child = _convertFilter(f, types);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const typechecks = runtimeTypeChecks(types);\n            return typechecks === true ? child : ['case', typechecks, child, false];\n        }) as ExpressionSpecification;\n        return ['any'].concat(children);\n    } else if (op === 'all') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n        const children: any[] = (filter).slice(1).map(f => _convertFilter(f, expectedTypes));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return children.length > 1 ? ['all'].concat(children) : [].concat(...children);\n    } else if (op === 'none') {\n        return ['!', _convertFilter(['any'].concat((filter).slice(1)), {})];\n    } else if (op === 'in') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        converted = convertInOp((filter[1]), filter.slice(2));\n    } else if (op === '!in') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        converted = convertInOp((filter[1]), filter.slice(2), true);\n    } else if (op === 'has') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        converted = convertHasOp((filter[1]));\n    } else if (op === '!has') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        converted = ['!', convertHasOp((filter[1]))];\n    } else {\n        converted = true;\n    }\n\n    return converted;\n}\n\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes: ExpectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0) return true;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (conditions.length === 1) return conditions[0];\n    return ['all'].concat(conditions);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction convertComparisonOp(property: string, value: any, op: string, expectedTypes?: ExpectedTypes | null) {\n    let get;\n    if (property === '$type') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return [op, ['geometry-type'], value];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    if (expectedTypes && value !== null) {\n        const type = typeof value as 'string' | 'number' | 'boolean';\n        expectedTypes[property] = type;\n    }\n\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    } else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return [op, get, value];\n}\n\nfunction convertInOp(property: string, values: Array<unknown>, negate: boolean = false) {\n    if (values.length === 0) return negate;\n\n    let get: string[];\n    if (property === '$type') {\n        get = ['geometry-type'];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n\n    return [negate ? 'all' : 'any'].concat(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        values.map(v => [negate ? '!=' : '==', get, v]) as any[]\n    );\n}\n\nfunction convertHasOp(property: string) {\n    if (property === '$type') {\n        return true;\n    } else if (property === '$id') {\n        return ['!=', ['id'], null];\n    } else {\n        return ['has', property];\n    }\n}\n","import {eachLayer, eachProperty} from '../visit';\nimport {isExpression} from '../expression/index';\nimport convertFunction, {convertTokenString} from '../function/convert';\nimport convertFilter from '../feature_filter/convert';\n\nimport type {StyleSpecification, FilterSpecification, FunctionSpecification} from '../types';\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n */\nexport default function (style: StyleSpecification): StyleSpecification {\n    const converted = [];\n\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = convertFilter(layer.filter) as FilterSpecification;\n        }\n    });\n\n    eachProperty(style, {paint: true, layout: true}, ({path, value, reference, set}) => {\n        if (isExpression(value)) return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value as FunctionSpecification<unknown>, reference));\n            converted.push(path.join('.'));\n        } else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n\n    return style;\n}\n","import migrateToV8 from './migrate/v8';\nimport migrateToExpressions from './migrate/expressions';\n\nimport type {StyleSpecification} from './types';\n\n/**\n * Migrate a Mapbox GL Style to the latest version.\n *\n * @private\n * @alias migrate\n * @param {object} style a Mapbox GL Style\n * @returns {Object} a migrated style\n * @example\n * var fs = require('fs');\n * var migrate = require('mapbox-gl-style-spec').migrate;\n * var style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function (style: {version: 7} | StyleSpecification): StyleSpecification {\n    let migrated = false;\n\n    if (style.version === 7) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        style = migrateToV8(style);\n        migrated = true;\n    }\n\n    if (style.version === 8) {\n        style = migrateToExpressions(style);\n        migrated = true;\n    }\n\n    if (!migrated) {\n        throw new Error(`Cannot migrate from ${style.version}`);\n    }\n\n    return style as StyleSpecification;\n}\n","import type {StyleSpecification} from './types';\n\nexport default function (style: StyleSpecification): StyleSpecification {\n    const styleIDs: string[] = [];\n    const sourceIDs: string[] = [];\n    const compositedSourceLayers: string[] = [];\n\n    for (const id in style.sources) {\n        const source = style.sources[id];\n\n        if (source.type !== \"vector\")\n            continue;\n\n        const match = /^mapbox:\\/\\/(.*)/.exec(source.url);\n        if (!match)\n            continue;\n\n        styleIDs.push(id);\n        sourceIDs.push(match[1]);\n    }\n\n    if (styleIDs.length < 2)\n        return style;\n\n    styleIDs.forEach((id) => {\n        delete style.sources[id];\n    });\n\n    const compositeID = sourceIDs.join(\",\");\n\n    style.sources[compositeID] = {\n        \"type\": \"vector\",\n        \"url\": `mapbox://${compositeID}`\n    };\n\n    style.layers.forEach((layer) => {\n        if (styleIDs.indexOf(layer.source) >= 0) {\n            layer.source = compositeID;\n\n            if ('source-layer' in layer) {\n                if (compositedSourceLayers.indexOf(layer['source-layer']) >= 0) {\n                    throw new Error('Conflicting source layer names');\n                } else {\n                    compositedSourceLayers.push(layer['source-layer']);\n                }\n            }\n        }\n    });\n\n    return style;\n}\n","export default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","import refProperties from './util/ref_properties';\n\nimport type {LayerSpecification} from './types';\n\nfunction deref(layer: LayerSpecification, parent: LayerSpecification): LayerSpecification {\n    const result = {} as LayerSpecification;\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            result[k] = parent[k];\n        }\n    });\n\n    return result;\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers: Array<LayerSpecification>): Array<LayerSpecification> {\n    layers = layers.slice();\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const map: Record<string, LayerSpecification> = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i] as LayerSpecification & {ref: string}).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a?: unknown, b?: unknown): boolean {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object')) return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length) return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\nexport default deepEqual;\n","import isEqual from './util/deep_equal';\n\nimport type {StyleSpecification, ImportSpecification, SourceSpecification, LayerSpecification, IconsetsSpecification} from './types';\n\ntype Sources = {\n    [key: string]: SourceSpecification;\n};\n\ntype Command = {\n    command: string;\n    args: unknown[];\n};\n\nexport const operations = {\n\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n\n    /*\n     * { command: 'setSlot', args: ['layerId', slot] }\n     */\n    setSlot: 'setSlot',\n\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight',\n\n    /*\n     * { command: 'setTerrain', args: [terrainProperties] }\n     */\n    setTerrain: 'setTerrain',\n\n    /*\n     *  { command: 'setFog', args: [fogProperties] }\n     */\n    setFog: 'setFog',\n\n    /*\n     *  { command: 'setSnow', args: [snowProperties] }\n     */\n    setSnow: 'setSnow',\n\n    /*\n     *  { command: 'setRain', args: [rainProperties] }\n     */\n    setRain: 'setRain',\n\n    /*\n     *  { command: 'setCamera', args: [cameraProperties] }\n     */\n    setCamera: 'setCamera',\n\n    /*\n     *  { command: 'setLights', args: [{light-3d},...] }\n     */\n    setLights: 'setLights',\n\n    /*\n     *  { command: 'setProjection', args: [projectionProperties] }\n     */\n    setProjection: 'setProjection',\n\n    /*\n     *  { command: 'addImport', args: [import] }\n     */\n    addImport: 'addImport',\n\n    /*\n     *  { command: 'removeImport', args: [importId] }\n     */\n    removeImport: 'removeImport',\n\n    /**\n     * { command: 'updateImport', args: [importId, importSpecification | styleUrl] }\n     */\n    updateImport: 'updateImport',\n\n    /*\n     *  { command: 'addIconset', args: [iconsetId, IconsetSpecification] }\n     */\n    addIconset: 'addIconset',\n\n    /*\n     *  { command: 'removeIconset', args: [iconsetId] }\n     */\n    removeIconset: 'removeIconset'\n} as const;\n\nfunction addSource(sourceId: string, after: Sources, commands: Array<Command>) {\n    commands.push({command: operations.addSource, args: [sourceId, after[sourceId]]});\n}\n\nfunction removeSource(sourceId: string, commands: Array<Command>, sourcesRemoved: {\n    [key: string]: true;\n}) {\n    commands.push({command: operations.removeSource, args: [sourceId]});\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId: string, after: Sources, commands: Array<Command>, sourcesRemoved: {\n    [key: string]: true;\n}) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before: Sources, after: Sources, sourceId: string) {\n    let prop;\n    for (prop in before[sourceId]) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!before[sourceId].hasOwnProperty(prop)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!after[sourceId].hasOwnProperty(prop)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before: Sources, after: Sources, commands: Array<Command>, sourcesRemoved: {[key: string]: true}) {\n    before = before || {};\n    after = after || {};\n\n    let sourceId;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!before.hasOwnProperty(sourceId)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!after.hasOwnProperty(sourceId)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!after.hasOwnProperty(sourceId)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const source = after[sourceId];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!before.hasOwnProperty(sourceId)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            addSource(sourceId, after, commands);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (!isEqual(before[sourceId], source)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument\n            if (before[sourceId].type === 'geojson' && source.type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({command: operations.setGeoJSONSourceData, args: [sourceId, source.data]});\n            } else {\n                // no update command, must remove then add\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before: LayerSpecification['layout'], after: LayerSpecification['layout'], commands: Array<Command>, layerId: string, klass: string | null | undefined, command: string): void;\nfunction diffLayerPropertyChanges(before: LayerSpecification['paint'], after: LayerSpecification['paint'], commands: Array<Command>, layerId: string, klass: string | null | undefined, command: string): void;\nfunction diffLayerPropertyChanges(\n    before: LayerSpecification['paint'] | LayerSpecification['layout'],\n    after: LayerSpecification['paint'] | LayerSpecification['layout'],\n    commands: Command[],\n    layerId: string,\n    klass: string | null | undefined,\n    command: string\n) {\n    before = before || {};\n    after = after || {};\n\n    let prop;\n\n    for (prop in before) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!before.hasOwnProperty(prop)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (!isEqual(before[prop], after[prop])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n    for (prop in after) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (!isEqual(before[prop], after[prop])) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n}\n\nfunction pluckId<T extends {id: string}>(item: T): string {\n    return item.id;\n}\n\nfunction indexById<T extends {id: string}>(group: {[key: string]: T}, item: T): {[id: string]: T} {\n    group[item.id] = item;\n    return group;\n}\n\nfunction diffLayers(before: Array<LayerSpecification>, after: Array<LayerSpecification>, commands: Array<Command>) {\n    before = before || [];\n    after = after || [];\n\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const clean = Object.create(null);\n\n    let i, d, layerId, beforeLayer: LayerSpecification, afterLayer: LayerSpecification, insertBeforeLayerId, prop;\n\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        layerId = beforeOrder[i];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!afterIndex.hasOwnProperty(layerId)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (beforeIndex.hasOwnProperty(layerId)) {\n            // remove the layer before we insert at the correct position\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        commands.push({command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId]});\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        tracker.splice(tracker.length - i, 0, layerId);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        clean[layerId] = true;\n    }\n\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        layerId = afterOrder[i];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        beforeLayer = beforeIndex[layerId];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            commands.push({command: operations.addLayer, args: [afterLayer, insertBeforeLayerId]});\n            continue;\n        }\n\n        // layout, paint, filter, minzoom, maxzoom\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty);\n        if (!isEqual(beforeLayer.slot, afterLayer.slot)) {\n            commands.push({command: operations.setSlot, args: [layerId, afterLayer.slot]});\n        }\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            commands.push({command: operations.setFilter, args: [layerId, afterLayer.filter]});\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            commands.push({command: operations.setLayerZoomRange, args: [layerId, afterLayer.minzoom, afterLayer.maxzoom]});\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (!beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom' || prop === 'slot') continue;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            if (prop.indexOf('paint.') === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n        for (prop in afterLayer) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom' || prop === 'slot') continue;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            if (prop.indexOf('paint.') === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n    }\n}\n\nexport function diffImports(before: Array<ImportSpecification> | null | undefined = [], after: Array<ImportSpecification> | null | undefined = [], commands: Array<Command>) {\n    before = before || [];\n    after = after || [];\n\n    // order imports by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index imports by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of imports as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    let i, d, importId, insertBefore;\n\n    // remove imports\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        importId = beforeOrder[i];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!afterIndex.hasOwnProperty(importId)) {\n            commands.push({command: operations.removeImport, args: [importId]});\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            tracker.splice(tracker.indexOf(importId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder imports\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing import\n        importId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === importId) continue;\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (beforeIndex.hasOwnProperty(importId)) {\n            // remove the import before we insert at the correct position\n            commands.push({command: operations.removeImport, args: [importId]});\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            tracker.splice(tracker.lastIndexOf(importId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add import at correct position\n        insertBefore = tracker[tracker.length - i];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        commands.push({command: operations.addImport, args: [afterIndex[importId], insertBefore]});\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        tracker.splice(tracker.length - i, 0, importId);\n    }\n\n    // update imports\n    for (const afterImport of after) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const beforeImport = beforeIndex[afterImport.id];\n        if (!beforeImport) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        delete beforeImport.data;\n        if (isEqual(beforeImport, afterImport)) continue;\n\n        commands.push({command: operations.updateImport, args: [afterImport.id, afterImport]});\n    }\n}\n\nfunction diffIconsets(before: IconsetsSpecification, after: IconsetsSpecification, commands: Array<Command>) {\n    before = before || {};\n    after = after || {};\n\n    let iconsetId;\n\n    // look for iconsets to remove\n    for (iconsetId in before) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!before.hasOwnProperty(iconsetId)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!after.hasOwnProperty(iconsetId)) {\n            commands.push({command: operations.removeIconset, args: [iconsetId]});\n        }\n    }\n\n    // look for iconsets to add/update\n    for (iconsetId in after) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!after.hasOwnProperty(iconsetId)) continue;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const iconset = after[iconsetId];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!before.hasOwnProperty(iconsetId)) {\n            commands.push({command: operations.addIconset, args: [iconsetId, iconset]});\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (!isEqual(before[iconsetId], iconset)) {\n            commands.push({command: operations.removeIconset, args: [iconsetId]});\n            commands.push({command: operations.addIconset, args: [iconsetId, iconset]});\n        }\n    }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nexport default function diffStyles(before: StyleSpecification, after: StyleSpecification): Array<Command> {\n    if (!before) return [{command: operations.setStyle, args: [after]}];\n\n    let commands: Array<Command> = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{command: operations.setStyle, args: [after]}];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({command: operations.setCenter, args: [after.center]});\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({command: operations.setZoom, args: [after.zoom]});\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({command: operations.setBearing, args: [after.bearing]});\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({command: operations.setPitch, args: [after.pitch]});\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({command: operations.setSprite, args: [after.sprite]});\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({command: operations.setGlyphs, args: [after.glyphs]});\n        }\n        // Handle changes to `imports` before other mergable top-level properties\n        if (!isEqual(before.imports, after.imports)) {\n            diffImports(before.imports, after.imports, commands);\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({command: operations.setTransition, args: [after.transition]});\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({command: operations.setLight, args: [after.light]});\n        }\n        if (!isEqual(before.fog, after.fog)) {\n            commands.push({command: operations.setFog, args: [after.fog]});\n        }\n        if (!isEqual(before.snow, after.snow)) {\n            commands.push({command: operations.setSnow, args: [after.snow]});\n        }\n        if (!isEqual(before.rain, after.rain)) {\n            commands.push({command: operations.setRain, args: [after.rain]});\n        }\n        if (!isEqual(before.projection, after.projection)) {\n            commands.push({command: operations.setProjection, args: [after.projection]});\n        }\n        if (!isEqual(before.lights, after.lights)) {\n            commands.push({command: operations.setLights, args: [after.lights]});\n        }\n        if (!isEqual(before.camera, after.camera)) {\n            commands.push({command: operations.setCamera, args: [after.camera]});\n        }\n        if (!isEqual(before.iconsets, after.iconsets)) {\n            diffIconsets(before.iconsets, after.iconsets, commands);\n        }\n        if (!isEqual(before[\"color-theme\"], after[\"color-theme\"])) {\n            // Update this to setColorTheme after\n            // https://mapbox.atlassian.net/browse/GLJS-842 is implemented\n            return [{command: operations.setStyle, args: [after]}];\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved: Record<string, true> = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if (layer.source && sourcesRemoved[layer.source]) {\n                    commands.push({command: operations.removeLayer, args: [layer.id]});\n                } else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n\n        // Remove the terrain if the source for that terrain is being removed\n        let beforeTerrain = before.terrain;\n        if (beforeTerrain) {\n            if (sourcesRemoved[beforeTerrain.source]) {\n                commands.push({command: operations.setTerrain, args: [undefined]});\n                beforeTerrain = undefined;\n            }\n        }\n\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Even though terrain is a top-level property\n        // Its like a layer in the sense that it depends on a source being present.\n        if (!isEqual(beforeTerrain, after.terrain)) {\n            commands.push({command: operations.setTerrain, args: [after.terrain]});\n        }\n\n        // Handle changes to `layers`\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        diffLayers(beforeLayers, after.layers, commands);\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{command: operations.setStyle, args: [after]}];\n    }\n\n    return commands;\n}\n","// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ValidationError {\n    message: string;\n    identifier: string | null | undefined;\n    line: number | null | undefined;\n\n    constructor(key: string | null | undefined, value: unknown, message: string, identifier?: string | null) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && (value as {__line__?: number}).__line__) {\n            this.line = (value as {__line__?: number}).__line__;\n        }\n    }\n}\n\nexport class ValidationWarning extends ValidationError {}\n","// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ParsingError {\n    message: string;\n    error: Error;\n    line: number;\n\n    constructor(error: Error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n","import validateStyle from './validate_style';\nimport validateObject from './validate_object';\nimport ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport {isObject} from '../util/get_type';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype ImportValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nexport default function validateImport(options: ImportValidatorOptions): ValidationError[] {\n    const key = options.key;\n    const {value, styleSpec} = options;\n\n    if (!isObject(value)) {\n        return [new ValidationError(key, value, `import must be an object`)];\n    }\n\n    const {data, ...importSpec} = value;\n\n    // Preserve __line__ from the value\n    Object.defineProperty(importSpec, '__line__', {\n        value: value.__line__,\n        enumerable: false\n    });\n\n    let errors = validateObject(Object.assign({}, options, {\n        value: importSpec,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec: styleSpec.import\n    }));\n\n    // Empty string is reserved for the root style id\n    if (unbundle(importSpec.id) === '') {\n        const key = `${options.key}.id`;\n        errors.push(new ValidationError(key, importSpec, `import id can't be an empty string`));\n    }\n\n    if (data) {\n        const key = `${options.key}.data`;\n        errors = errors.concat(validateStyle(data, styleSpec, {key}));\n    }\n\n    return errors;\n}\n","import {getType, isObject} from '../util/get_type';\nimport validate from './validate';\nimport ValidationError from '../error/validation_error';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype ArraySpec = {\n    value?: unknown;\n    values?: unknown[];\n    length?: number;\n    minimum?: number;\n    maximum?: number;\n    function?: unknown;\n};\n\ntype ArrayElementSpec<T = unknown> = {\n    type: string;\n    values: T[];\n    minimum: number;\n    maximum: number;\n    function: unknown;\n};\n\ntype ArrayValidatorOptions<T = unknown> = {\n    key: string;\n    value: T;\n    valueSpec: ArraySpec;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    arrayElementValidator: (...args: unknown[]) => ValidationError[];\n};\n\nexport default function validateArray(options: ArrayValidatorOptions): ValidationError[] {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n\n    if (!Array.isArray(array)) {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec: ArrayElementSpec = {\n        type: arraySpec.value as string,\n        values: arraySpec.values,\n        minimum: arraySpec.minimum,\n        maximum: arraySpec.maximum,\n        function: undefined\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec.function = arraySpec.function;\n    }\n\n    if (isObject(arraySpec.value)) {\n        arrayElementSpec = arraySpec.value as ArrayElementSpec;\n    }\n\n    let errors: ValidationError[] = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }, true));\n    }\n\n    return errors;\n}\n","import {isNumber, getType} from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype NumberValidatorOptions = {\n    key: string;\n    value: unknown;\n    valueSpec: {\n        minimum?: number;\n        maximum?: number\n    };\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    arrayIndex: number;\n};\n\nexport default function validateNumber(options: NumberValidatorOptions): ValidationError[] {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n\n    if (!isNumber(value)) {\n        return [new ValidationError(key, value, `number expected, ${getType(value)} found`)];\n    }\n\n    // eslint-disable-next-line no-self-compare\n    if (value !== value) {\n        return [new ValidationError(key, value, `number expected, NaN found`)];\n    }\n\n    if ('minimum' in valueSpec) {\n        let specMin = valueSpec.minimum;\n        if (Array.isArray(valueSpec.minimum)) {\n            const i = options.arrayIndex;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            specMin = valueSpec.minimum[i];\n        }\n        if (value < specMin) {\n            return [new ValidationError(key, value, `${value} is less than the minimum value ${specMin}`)];\n        }\n    }\n\n    if ('maximum' in valueSpec) {\n        let specMax = valueSpec.maximum;\n        if (Array.isArray(valueSpec.maximum)) {\n            const i = options.arrayIndex;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            specMax = valueSpec.maximum[i];\n        }\n        if (value > specMax) {\n            return [new ValidationError(key, value, `${value} is greater than the maximum value ${specMax}`)];\n        }\n    }\n\n    return [];\n}\n","import ValidationError from '../error/validation_error';\nimport {getType, isObject} from '../util/get_type';\nimport validate from './validate';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateNumber from './validate_number';\nimport {isExpression} from '../expression/index';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\nimport type {StylePropertySpecification} from '../style-spec';\n\nfunction hasObjectStops(value: object): value is {stops: Array<Record<PropertyKey, unknown>>} {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const stops = value['stops'];\n    return Array.isArray(stops) && Array.isArray(stops[0]) && isObject(stops[0][0]);\n}\n\nexport type FunctionValidatorOptions = {\n    key: string;\n    value: unknown;\n    valueSpec: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nexport default function validateFunction(options: FunctionValidatorOptions): ValidationError[] {\n    const key = options.key;\n    const value = options.value;\n\n    if (!isObject(value)) {\n        return [new ValidationError(key, value, `object expected, ${getType(value)} found`)];\n    }\n\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(value.type);\n    let stopKeyType;\n    let stopDomainValues: Partial<Record<string | number, boolean>> = {};\n    let previousStopDomainValue: unknown;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction = hasObjectStops(value);\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && (functionValueSpec as {expression?: unknown}).expression && !supportsInterpolation(functionValueSpec as StylePropertySpecification)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(functionValueSpec as StylePropertySpecification)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(functionValueSpec as StylePropertySpecification)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && (value as {property?: string}).property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options: FunctionValidatorOptions): ValidationError[] {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors: ValidationError[] = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec as Extract<StylePropertySpecification, {type: 'array'}>,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (Array.isArray(value) && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options: FunctionValidatorOptions): ValidationError[] {\n        let errors: ValidationError[] = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (!Array.isArray(value)) {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (!isObject(value[0])) {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n\n            const stopKey = value[0];\n            if (stopKey.zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (stopKey.value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n\n            const nextStopDomainZoom = unbundle(stopKey.zoom);\n            if (typeof nextStopDomainZoom !== 'number') {\n                return [new ValidationError(key, stopKey.zoom, 'stop zoom values must be numbers')];\n            }\n\n            if (previousStopDomainZoom && previousStopDomainZoom > nextStopDomainZoom) {\n                return [new ValidationError(key, stopKey.zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (nextStopDomainZoom !== previousStopDomainZoom) {\n                previousStopDomainZoom = nextStopDomainZoom;\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {zoom: {}},\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: {zoom: validateNumber, value: validateStopDomainValue}\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options: FunctionValidatorOptions, stop?: unknown[]): ValidationError[] {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean' && typeof value !== 'number' && typeof value !== 'string' && typeof value !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec as StylePropertySpecification) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (typeof value !== 'number' || !isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${String(value as number)}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && typeof value === 'number' && typeof previousStopDomainValue === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && (value as string) in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[(value as string)] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options: FunctionValidatorOptions) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n","import ValidationError from '../error/validation_error';\nimport {createExpression, createPropertyExpression} from '../expression/index';\nimport {deepUnbundle} from '../util/unbundle_jsonlint';\nimport {isStateConstant, isGlobalPropertyConstant, isFeatureConstant} from '../expression/is_constant';\nimport CompoundExpression from '../expression/compound_expression';\n\nimport type {StylePropertySpecification} from '../../style-spec/style-spec';\nimport type {Expression} from '../expression/expression';\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\nexport type ExpressionValidatorOptions = {\n    key: string;\n    value: unknown;\n    valueSpec?: Partial<StylePropertySpecification>;\n    propertyKey?: 'text-font';\n    propertyType?: 'layout' | 'paint' | 'filter';\n    style?: Partial<StyleSpecification>;\n    styleSpec?: StyleReference;\n    expressionContext?: 'property' | 'filter' | 'cluster-initial' | 'cluster-reduce' | 'cluster-map' | 'appearance';\n};\n\nexport default function validateExpression(options: ExpressionValidatorOptions): ValidationError[] {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec as StylePropertySpecification);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const expressionObj = (expression.value as any).expression || (expression.value as any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return disallowedFilterParameters(expressionObj, options);\n    }\n\n    if (options.expressionContext === 'appearance') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return checkDisallowedParameters(expressionObj, options);\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function disallowedFilterParameters(e: Expression, options: any): ValidationError[] {\n    const disallowedParameters = new Set([\n        'zoom',\n        'feature-state',\n        'pitch',\n        'distance-from-center'\n    ]);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (options.valueSpec && options.valueSpec.expression) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (const param of options.valueSpec.expression.parameters) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            disallowedParameters.delete(param);\n        }\n    }\n\n    if (disallowedParameters.size === 0) {\n        return [];\n    }\n    const errors: ValidationError[] = [];\n\n    if (e instanceof CompoundExpression) {\n        if (disallowedParameters.has(e.name)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            return [new ValidationError(options.key, options.value, `[\"${e.name}\"] expression is not supported in a filter for a ${options.object.type} layer with id: ${options.object.id}`)];\n        }\n    }\n    e.eachChild((arg) => {\n        errors.push(...disallowedFilterParameters(arg, options));\n    });\n\n    return errors;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction checkDisallowedParameters(e: Expression, options: any): ValidationError[] {\n    const allowedParameters = new Set<string>();\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (options.valueSpec && options.valueSpec.expression) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        for (const param of options.valueSpec.expression.parameters) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            allowedParameters.add(param);\n        }\n    }\n\n    if (allowedParameters.size === 0) {\n        return [];\n    }\n    const errors: ValidationError[] = [];\n\n    if (e instanceof CompoundExpression) {\n        if (!allowedParameters.has(e.name)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            return [new ValidationError(options.key, options.value, `[\"${e.name}\"] is not an allowed parameter`)];\n        }\n    }\n    e.eachChild((arg) => {\n        errors.push(...checkDisallowedParameters(arg, options));\n    });\n\n    return errors;\n}\n","import {getType, isBoolean} from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\ntype BooleanValidatorOptions = {\n    key: string;\n    value: unknown;\n};\n\nexport default function validateBoolean(options: BooleanValidatorOptions): ValidationError[] {\n    const value = options.value;\n    const key = options.key;\n    if (!isBoolean(value)) {\n        return [new ValidationError(key, value, `boolean expected, ${getType(value)} found`)];\n    }\n\n    return [];\n}\n","import ValidationError from '../error/validation_error';\nimport {getType, isString} from '../util/get_type';\nimport {parseCSSColor} from 'csscolorparser';\n\ntype ColorValidatorOptions = {\n    key: string;\n    value: unknown;\n};\n\nexport default function validateColor({key, value}: ColorValidatorOptions): ValidationError[] {\n    if (!isString(value)) {\n        return [new ValidationError(key, value, `color expected, ${getType(value)} found`)];\n    }\n\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n","import ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype EnumValidatorOptions = {\n    key: string;\n    value: unknown;\n    valueSpec?: {\n        values: unknown[];\n    };\n    style?: Partial<StyleSpecification>;\n    styleSpec?: StyleReference;\n};\n\nexport default function validateEnum(options: EnumValidatorOptions): ValidationError[] {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n\n    const errors: ValidationError[] = [];\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            // eslint-disable-next-line @typescript-eslint/no-base-to-string\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value) as string) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n\n    return errors;\n}\n","import ValidationError from '../error/validation_error';\nimport validateExpression from './validate_expression';\nimport validateEnum from './validate_enum';\nimport {getType, isString, isNumber, isBoolean} from '../util/get_type';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {isExpressionFilter} from '../feature_filter/index';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype FilterValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    layerType?: string;\n    object?: {\n        type?: string,\n        id?: string\n    }\n};\n\nexport default function validateFilter(options: FilterValidatorOptions): ValidationError[] {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        // We default to a layerType of `fill` because that points to a non-dynamic filter definition within the style-spec.\n        const layerType = options.layerType || 'fill';\n\n        return validateExpression(Object.assign({}, options, {\n            expressionContext: 'filter' as const,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            valueSpec: options.styleSpec[`filter_${layerType}`]\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options: FilterValidatorOptions): ValidationError[] {\n    const value = options.value;\n    const key = options.key;\n\n    if (!Array.isArray(value)) {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    const styleSpec = options.styleSpec;\n    let errors: ValidationError[] = validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec: styleSpec.filter_operator\n    });\n\n    switch (unbundle(value[0])) {\n    case '<':\n    case '<=':\n    case '>':\n    // @ts-expect-error - falls through\n    case '>=':\n        if (value.length >= 2 && unbundle(value[1]) === '$type') {\n            errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n        }\n        /* falls through */\n    case '==':\n    // @ts-expect-error - falls through\n    case '!=':\n        if (value.length !== 3) {\n            errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n        }\n        /* falls through */\n    case 'in':\n    case '!in':\n        if (value.length >= 2) {\n            if (!isString(value[1])) {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${getType(value[1])} found`));\n            }\n        }\n        for (let i = 2; i < value.length; i++) {\n            if (unbundle(value[1]) === '$type') {\n                errors = errors.concat(validateEnum({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    valueSpec: styleSpec.geometry_type\n                }));\n            } else if (!isString(value[i]) && !isNumber(value[i]) && !isBoolean(value[i])) {\n                errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${getType(value[i])} found.`));\n            }\n        }\n        break;\n\n    case 'any':\n    case 'all':\n    case 'none':\n        for (let i = 1; i < value.length; i++) {\n            errors = errors.concat(validateNonExpressionFilter({\n                key: `${key}[${i}]`,\n                value: value[i],\n                style: options.style,\n                styleSpec: options.styleSpec\n            }));\n        }\n        break;\n\n    case 'has':\n    case '!has':\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (!isString(value[1])) {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${getType(value[1])} found`));\n        }\n        break;\n    }\n\n    return errors;\n}\n","import validate from './validate';\nimport {default as ValidationError, ValidationWarning} from '../error/validation_error';\nimport {isString} from '../util/get_type';\nimport {isFunction} from '../function/index';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {supportsLightExpression, supportsPropertyExpression, supportsZoomExpression} from '../util/properties';\nimport {isGlobalPropertyConstant, isFeatureConstant, isStateConstant} from '../expression/is_constant';\nimport {createPropertyExpression, isExpression} from '../expression/index';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification, LayerSpecification} from '../types';\n\nexport type PropertyValidatorOptions = {\n    key: string;\n    value: unknown;\n    valueSpec?: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    objectKey?: string;\n    layerType: string;\n    layer?: Partial<LayerSpecification>;\n};\n\nexport default function validateProperty(options: PropertyValidatorOptions, propertyType: string): ValidationError[] {\n    const key = options.key;\n    const style = options.style;\n    const layer = options.layer;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const useThemeMatch = propertyKey.match(/^(.*)-use-theme$/);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (useThemeMatch && layerSpec[useThemeMatch[1]]) {\n        if (isExpression(value)) {\n            const errors: ValidationError[] = [];\n            return errors.concat(validate({\n                key: options.key,\n                value,\n                valueSpec: {\n                    \"type\": \"string\",\n                    \"expression\": {\n                        \"interpolated\": false,\n                        \"parameters\": [\n                            \"zoom\",\n                            \"feature\"\n                        ]\n                    },\n                    \"property-type\": \"data-driven\"\n                },\n                style,\n                styleSpec,\n                expressionContext: 'property',\n                propertyType,\n                propertyKey\n            }));\n        }\n        return validate({\n            key,\n            value,\n            valueSpec: {type: 'string'},\n            style,\n            styleSpec\n        });\n    }\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationWarning(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch: RegExpExecArray | undefined;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n    if (isString(value) && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        const example = `\\`{ \"type\": \"identity\", \"property\": ${tokenMatch ? JSON.stringify(tokenMatch[1]) : '\"_\"'} }\\``;\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: ${example}.`)];\n    }\n\n    const errors: ValidationError[] = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs && !style.imports) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle((value as {type: unknown}).type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    } else if (options.layerType === 'model' && propertyType === 'paint' && layer && layer.layout && layer.layout.hasOwnProperty('model-id')) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        if (supportsPropertyExpression(valueSpec) && (supportsLightExpression(valueSpec) || supportsZoomExpression(valueSpec))) {\n            // Performance related style spec limitation: zoom and light expressions are not allowed for e.g. trees.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const expression = createPropertyExpression(deepUnbundle(value), valueSpec);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n            const expressionObj = (expression.value as any).expression || (expression.value as any)._styleExpression.expression;\n\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            if (expressionObj && !isGlobalPropertyConstant(expressionObj, ['measure-light'])) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                if (propertyKey !== 'model-emissive-strength' || (!isFeatureConstant(expressionObj) || !isStateConstant(expressionObj))) {\n                    errors.push(new ValidationError(key, value, `${propertyKey} does not support measure-light expressions when the model layer source is vector tile or GeoJSON.`));\n                }\n            }\n        }\n    }\n\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n","import validateObject from './validate_object';\nimport ValidationError from '../error/validation_error';\nimport validateProperty from './validate_property';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport validateExpression from './validate_expression';\nimport latest from '../reference/latest';\n\nimport type {StyleSpecification, LayerSpecification, AppearanceSpecification} from '../types';\nimport type {StyleReference} from '../reference/latest';\n\nexport type AppearanceValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    object?: object;\n    objectKey?: string;\n    layer: LayerSpecification;\n    layerType: string;\n};\n\nexport default function validateAppearance(options: AppearanceValidatorOptions): Array<ValidationError> {\n    const {key, layer, layerType} = options;\n    const value = unbundle(options.value) as AppearanceSpecification;\n    const name = unbundle(value.name);\n    const condition = unbundle(value.condition);\n\n    const errors = validateObject({\n        key,\n        value,\n        valueSpec: options.styleSpec.appearance as object,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            condition: (options) => validateCondition(Object.assign({layer, layerType}, options)),\n            properties: (options) => validateProperties(Object.assign({layer, layerType}, options)),\n        }\n    });\n\n    if (name !== 'hidden' && !condition) {\n        errors.push(new ValidationError(options.key, 'name', `Appearance with name different than \"hidden\" must have a condition`));\n    }\n\n    return errors;\n}\n\nfunction validateProperties(options: AppearanceValidatorOptions): Array<ValidationError> {\n    const errors: Array<ValidationError> = [];\n\n    const {styleSpec, layer, layerType} = options;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paintProperties = styleSpec[`paint_${layerType}`];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const layoutProperties = styleSpec[`layout_${layerType}`];\n    const properties = options.object[options.objectKey] as object;\n\n    for (const propertyKey in properties) {\n        const propertyType =\n            propertyKey in paintProperties ? 'paint' :\n            propertyKey in layoutProperties ? 'layout' :\n            undefined;\n\n        if (!propertyType) {\n            errors.push(new ValidationError(options.key, propertyKey, `unknown property \"${propertyKey}\" for layer type \"${layerType}\"`));\n            continue;\n        }\n\n        const propertyValidationOptions = Object.assign({}, options, {\n            key: `${options.key}.${propertyKey}`,\n            object: properties,\n            objectKey: propertyKey,\n            layer,\n            layerType,\n            value: properties[propertyKey] as unknown,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            valueSpec: (propertyType === 'paint' ? paintProperties[propertyKey] : layoutProperties[propertyKey]) as object,\n        });\n\n        errors.push(...validateProperty(propertyValidationOptions, propertyType));\n    }\n\n    return errors;\n}\n\nfunction validateCondition(options: AppearanceValidatorOptions): Array<ValidationError> {\n    const errors: Array<ValidationError> = [];\n\n    const appearance = options.object as AppearanceSpecification;\n    const condition = appearance.condition;\n\n    errors.push(...validateExpression({\n        key: options.key,\n        value: condition,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        valueSpec: latest['appearance']['condition'],\n        expressionContext: 'appearance'\n    }));\n\n    return errors;\n}\n","import validateProperty from './validate_property';\n\nimport type ValidationError from '../error/validation_error';\nimport type {PropertyValidatorOptions} from './validate_property';\n\nexport default function validatePaintProperty(options: PropertyValidatorOptions): ValidationError[] {\n    return validateProperty(options, 'paint');\n}\n","import validateProperty from './validate_property';\n\nimport type ValidationError from '../error/validation_error';\nimport type {PropertyValidatorOptions} from './validate_property';\n\nexport default function validateLayoutProperty(options: PropertyValidatorOptions): ValidationError[] {\n    return validateProperty(options, 'layout');\n}\n","import ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport validateArray from './validate_array';\nimport validateObject from './validate_object';\nimport validateFilter from './validate_filter';\nimport validateAppearance, {type AppearanceValidatorOptions} from './validate_appearance';\nimport validatePaintProperty from './validate_paint_property';\nimport validateLayoutProperty from './validate_layout_property';\nimport validateSpec from './validate';\nimport {isObject, isString} from '../util/get_type';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification, LayerSpecification, GeoJSONSourceSpecification} from '../types';\n\ntype LayerValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    arrayIndex: number;\n};\n\nexport default function validateLayer(options: LayerValidatorOptions): ValidationError[] {\n    let errors: ValidationError[] = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!isObject(layer)) {\n        return [new ValidationError(key, layer, `object expected`)];\n    }\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n\n    let type = unbundle(layer.type) as string;\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id) as string;\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layerId}\", previously used at line ${(otherLayer.id as {__line__?: number}).__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            if (typeof ref === 'string')\n                errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            type = unbundle(parent.type) as string;\n        }\n    } else if (!(type === 'background' || type === 'sky' || type === 'slot')) {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else if (!isString(layer.source)) {\n            errors.push(new ValidationError(`${key}.source`, layer.source, '\"source\" must be a string'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id as string}\" requires a raster source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id as string}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id as string}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (sourceType === 'raster-array' && !['raster', 'raster-particle'].includes(type)) {\n                errors.push(new ValidationError(key, layer.source, `raster-array source can only be used with layer type \\'raster\\'.`));\n            } else if (type === 'line' && layer.paint && (layer.paint['line-gradient'] || layer.paint['line-trim-offset']) &&\n                    (sourceType === 'geojson' && !(source as GeoJSONSourceSpecification).lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id as string}\" specifies a line-gradient, which requires the GeoJSON source to have \\`lineMetrics\\` enabled.`));\n            } else if (type === 'raster-particle' && sourceType !== 'raster-array') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id as string}\" requires a \\'raster-array\\' source.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter(options) {\n                return validateFilter(Object.assign({layerType: type}, options));\n            },\n            layout(options) {\n                return validateObject({\n                    layer: layer as LayerSpecification,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(Object.assign({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer: layer as LayerSpecification,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(Object.assign({layerType: type, layer}, options));\n                        }\n                    }\n                });\n            },\n            appearances(options) {\n                const validationErrors = validateArray({\n                    key: options.key,\n                    value: options.value,\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    valueSpec: options.valueSpec,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    arrayElementValidator: (options) => validateAppearance(Object.assign({layerType: type, layer}, options) as AppearanceValidatorOptions)\n                });\n                // Check non-repeated names on a given layer\n                const appearances = Array.isArray(options.value) ? options.value : [];\n                const dedupedNames = new Set<string>();\n                appearances.forEach((a, index) => {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    const name: string | undefined = unbundle(a.name) as string | undefined;\n                    if (name) {\n                        if (dedupedNames.has(name)) {\n                            const layerId = unbundle((layer as LayerSpecification).id) as string;\n                            validationErrors.push(new ValidationError(options.key, name, `Duplicated appearance name \"${name}\" for layer \"${layerId}\"`));\n                        } else {\n                            dedupedNames.add(name);\n                        }\n                    }\n                });\n\n                return validationErrors;\n            }\n        }\n    }));\n\n    return errors;\n}\n","import {getType, isString} from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\ntype StringValidatorOptions = {\n    key: string;\n    value: unknown;\n};\n\nexport default function validateString({key, value}: StringValidatorOptions): ValidationError[] {\n    if (isString(value)) {\n        return [];\n    }\n\n    return [new ValidationError(key, value, `string expected, ${getType(value)} found`)];\n}\n","import {default as ValidationError, ValidationWarning} from '../error/validation_error';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateEnum from './validate_enum';\nimport validateExpression from './validate_expression';\nimport validateString from './validate_string';\nimport {getType, isObject, isString} from '../util/get_type';\nimport {createExpression} from '../expression/index';\nimport * as isConstant from '../expression/is_constant';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\n\ntype SourceValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nexport default function validateSource(options: SourceValidatorOptions): ValidationError[] {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!isObject(value)) {\n        return [new ValidationError(key, value, `object expected, ${getType(value)} found`)];\n    }\n\n    if (!('type' in value)) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type) as string;\n    let errors: ValidationError[] = [];\n\n    if (['vector', 'raster', 'raster-dem', 'raster-array'].includes(type)) {\n        if (!('url' in value) && !('tiles' in value)) {\n            errors.push(new ValidationWarning(key, value, 'Either \"url\" or \"tiles\" is required.'));\n        }\n    }\n\n    switch (type) {\n    case 'vector':\n    case 'raster':\n    case 'raster-dem':\n    case 'raster-array':\n        errors = errors.concat(validateObject({\n            key,\n            value,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n            style: options.style,\n            styleSpec,\n            objectElementValidators\n        }));\n        return errors;\n    case 'geojson':\n        errors = validateObject({\n            key,\n            value,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            valueSpec: styleSpec.source_geojson,\n            style,\n            styleSpec,\n            objectElementValidators\n        });\n\n        if ('cluster' in value && 'clusterProperties' in value) {\n            if (!isObject(value.clusterProperties)) {\n                return [new ValidationError(`${key}.clusterProperties`, value, `object expected, ${getType(value)} found`)];\n            }\n\n            for (const prop in value.clusterProperties) {\n                const propValue = value.clusterProperties[prop];\n                if (!Array.isArray(propValue)) {\n                    return [new ValidationError(`${key}.clusterProperties.${prop}`, propValue, 'array expected')];\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const [operator, mapExpr] = propValue;\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.map`,\n                    value: mapExpr,\n                    expressionContext: 'cluster-map'\n                }));\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.reduce`,\n                    value: reduceExpr,\n                    expressionContext: 'cluster-reduce'\n                }));\n            }\n        }\n\n        return errors;\n    case 'video':\n        return validateObject({\n            key,\n            value,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            valueSpec: styleSpec.source_video,\n            style,\n            styleSpec\n        });\n\n    case 'image':\n        return validateObject({\n            key,\n            value,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            valueSpec: styleSpec.source_image,\n            style,\n            styleSpec\n        });\n\n    case 'canvas':\n        return [new ValidationError(key, null, `Please use runtime APIs to add canvas sources, rather than including them in stylesheets.`, 'source.canvas')];\n\n    default:\n        return validateEnum({\n            key: `${key}.type`,\n            value: (value as {type: unknown}).type,\n            valueSpec: {values: getSourceTypeValues(styleSpec)},\n            style,\n            styleSpec\n        });\n    }\n}\n\nfunction getSourceTypeValues(styleSpec: StyleReference): string[] {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    return styleSpec.source.reduce((memo: string[], source: string) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const sourceType = styleSpec[source];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (sourceType.type.type === 'enum') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n            memo = memo.concat(Object.keys(sourceType.type.values));\n        }\n        return memo;\n    }, []) as string[];\n}\n\ntype PromoteIdValidatorOptions = {\n    key: string;\n    value: unknown;\n};\n\nfunction validatePromoteId({key, value}: PromoteIdValidatorOptions) {\n    if (isString(value)) {\n        return validateString({key, value});\n    }\n\n    if (Array.isArray(value)) {\n        const errors: ValidationError[] = [];\n        const unbundledValue = deepUnbundle(value);\n        const expression = createExpression(unbundledValue);\n        if (expression.result === 'error') {\n            expression.value.forEach((err) => {\n                errors.push(new ValidationError(`${key}${err.key}`, null, `${err.message}`));\n            });\n        }\n\n        // @ts-expect-error - TS2339: Property 'expression' does not exist on type 'ParsingError[] | StyleExpression'.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const parsed = expression.value.expression;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const onlyFeatureDependent = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'heatmap-density', 'line-progress', 'raster-value', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center', 'measure-light', 'raster-particle-speed']);\n        if (!onlyFeatureDependent) {\n            errors.push(new ValidationError(`${key}`, null, 'promoteId expression should be only feature dependent'));\n        }\n\n        return errors;\n    }\n\n    if (!isObject(value)) {\n        return [new ValidationError(key, value, `string, expression or object expected, \"${getType(value)}\" found`)];\n    }\n\n    const errors: ValidationError[] = [];\n    for (const prop in (value as object)) {\n        errors.push(...validatePromoteId({key: `${key}.${prop}`, value: value[prop]}));\n    }\n\n    return errors;\n}\n","import ValidationError from '../error/validation_error';\nimport {getType, isString} from '../util/get_type';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\n// Allow any URL, use dummy base, if it's a relative URL\nexport function isValidUrl(str: string, allowRelativeUrls: boolean): boolean {\n    const isRelative = str.indexOf('://') === -1;\n    try {\n        new URL(str, isRelative && allowRelativeUrls ? 'http://example.com' : undefined);\n        return true;\n    } catch (_: unknown) {\n        return false;\n    }\n}\n\ntype ModelValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nexport default function validateModel(options: ModelValidatorOptions): ValidationError[] {\n    const url = options.value;\n\n    if (!url) {\n        return [];\n    }\n\n    if (!isString(url)) {\n        return [new ValidationError(options.key, url, `string expected, \"${getType(url)}\" found`)];\n    }\n\n    if (!isValidUrl(url, true)) {\n        return [new ValidationError(options.key, url, `invalid url \"${url}\"`)];\n    }\n\n    return [];\n}\n","import ValidationError from '../error/validation_error';\nimport {getType, isObject} from '../util/get_type';\nimport validate from './validate';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype LightValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nexport default function validateLight(options: LightValidatorOptions): ValidationError[] {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    if (light === undefined) {\n        return [];\n    }\n\n    if (!isObject(light)) {\n        return [new ValidationError('light', light, `object expected, ${getType(light)} found`)];\n    }\n\n    let errors: ValidationError[] = [];\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        const useThemeMatch = key.match(/^(.*)-use-theme$/);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (useThemeMatch && lightSpec[useThemeMatch[1]]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: {type: 'string'},\n                style,\n                styleSpec\n            }));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","import {default as ValidationError, ValidationWarning} from '../error/validation_error';\nimport {getType, isObject, isString} from '../util/get_type';\nimport validate from './validate';\nimport {unbundle} from '../util/unbundle_jsonlint';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype LightsValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    arrayIndex: number;\n};\n\nexport default function validateLights(options: LightsValidatorOptions): ValidationError[] {\n    const light = options.value;\n\n    if (!light) {\n        return [];\n    }\n\n    const key = options.key;\n    if (!isObject(light)) {\n        return [new ValidationError(key, light, `object expected, ${getType(light)} found`)];\n    }\n\n    let errors: ValidationError[] = [];\n    const styleSpec = options.styleSpec;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const lightSpec = styleSpec['light-3d'];\n    const style = options.style;\n    const lights = options.style.lights;\n\n    for (const prop of ['type', 'id'] as const) {\n        if (!(prop in light)) {\n            errors = errors.concat([new ValidationError(key, light, `missing property \"${prop}\"`)]);\n            return errors;\n        }\n    }\n\n    if (!isString(light.type)) {\n        errors = errors.concat([new ValidationError(`${key}.type`, light.type, `string expected`)]);\n        return errors;\n    }\n\n    if (lights) {\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const lightType = unbundle(light.type);\n            const otherLight = lights[i];\n            if (unbundle(otherLight.type) === lightType) {\n                errors.push(new ValidationError(key, light.id, `duplicate light type \"${light.type}\", previously defined at line ${(otherLight.id as {__line__?: number}).__line__}`));\n            }\n        }\n    }\n\n    const lightType = `properties_light_${light.type}`;\n    if (!(lightType in styleSpec)) {\n        errors = errors.concat([new ValidationError(`${key}.type`, light, `Invalid light type ${light.type}`)]);\n        return errors;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const lightPropertySpec = styleSpec[lightType];\n\n    for (const key in light) {\n        if (key === 'properties') {\n            const properties = light[key];\n            if (!isObject(properties)) {\n                errors = errors.concat([new ValidationError('properties', properties, `object expected, ${getType(properties)} found`)]);\n                return errors;\n            }\n            for (const propertyKey in properties) {\n                const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n                const useThemeMatch = propertyKey.match(/^(.*)-use-theme$/);\n\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                if (useThemeMatch && lightPropertySpec[useThemeMatch[1]]) {\n                    errors = errors.concat(validate({\n                        key,\n                        value: properties[propertyKey],\n                        valueSpec: {type: 'string'},\n                        style,\n                        styleSpec\n                    }));\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                } else if (transitionMatch && lightPropertySpec[transitionMatch[1]] && lightPropertySpec[transitionMatch[1]].transition) {\n                    errors = errors.concat(validate({\n                        key,\n                        value: light[key],\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        valueSpec: styleSpec.transition,\n                        style,\n                        styleSpec\n                    }));\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                } else if (!lightPropertySpec[propertyKey]) {\n                    errors = errors.concat([new ValidationWarning(options.key, properties[propertyKey], `unknown property \"${propertyKey}\"`)]);\n                } else {\n                    errors = errors.concat(validate({\n                        key: propertyKey,\n                        value: properties[propertyKey],\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                        valueSpec: lightPropertySpec[propertyKey],\n                        style,\n                        styleSpec\n                    }));\n                }\n            }\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (lightSpec[key]) {\n                errors = errors.concat(validate({\n                    key,\n                    value: light[key],\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                    valueSpec: lightSpec[key],\n                    style,\n                    styleSpec\n                }));\n            } else {\n                errors = errors.concat([new ValidationWarning(key, light[key], `unknown property \"${key}\"`)]);\n            }\n        }\n    }\n\n    return errors;\n}\n","import {default as ValidationError, ValidationWarning} from '../error/validation_error';\nimport validate from './validate';\nimport {getType, isObject, isString} from '../util/get_type';\nimport {unbundle} from '../util/unbundle_jsonlint';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype TerrainValidatorOptions = {\n    key: string;\n    value: unknown;\n    styleSpec: StyleReference;\n    style: Partial<StyleSpecification>;\n};\n\nexport default function validateTerrain(options: TerrainValidatorOptions): ValidationError[] {\n    const terrain = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const terrainSpec = styleSpec.terrain;\n\n    if (terrain == null) {\n        return [];\n    }\n\n    if (!isObject(terrain)) {\n        return [new ValidationError('terrain', terrain, `object expected, ${getType(terrain)} found`)];\n    }\n\n    let errors: ValidationError[] = [];\n    for (const key in terrain) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        const useThemeMatch = key.match(/^(.*)-use-theme$/);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (useThemeMatch && terrainSpec[useThemeMatch[1]]) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: {type: 'string'},\n                style,\n                styleSpec\n            }));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (transitionMatch && terrainSpec[transitionMatch[1]] && terrainSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (terrainSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                valueSpec: terrainSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationWarning(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    if (!terrain.source) {\n        errors.push(new ValidationError(key, terrain, `terrain is missing required property \"source\"`));\n    } else if (!isString(terrain.source)) {\n        errors.push(new ValidationError(`${key}.source`, terrain.source, `source must be a string`));\n    } else {\n        const source = style.sources && style.sources[terrain.source];\n        const sourceType = source && unbundle(source.type) as string;\n        if (!source) {\n            errors.push(new ValidationError(`${key}.source`, terrain.source, `source \"${terrain.source}\" not found`));\n        } else if (sourceType !== 'raster-dem') {\n            errors.push(new ValidationError(`${key}.source`, terrain.source, `terrain cannot be used with a source of type ${sourceType}, it only be used with a \"raster-dem\" source type`));\n        }\n    }\n\n    return errors;\n}\n","import {default as ValidationError, ValidationWarning} from '../error/validation_error';\nimport validate from './validate';\nimport {getType, isObject} from '../util/get_type';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype FogValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nexport default function validateFog(options: FogValidatorOptions): ValidationError[] {\n    const fog = options.value;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const fogSpec = styleSpec.fog;\n\n    if (fog === undefined) {\n        return [];\n    }\n\n    if (!isObject(fog)) {\n        return [new ValidationError('fog', fog, `object expected, ${getType(fog)} found`)];\n    }\n\n    let errors: ValidationError[] = [];\n    for (const key in fog) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n        const useThemeMatch = key.match(/^(.*)-use-theme$/);\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (useThemeMatch && fogSpec[useThemeMatch[1]]) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: {type: 'string'},\n                style,\n                styleSpec\n            }));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (transitionMatch && fogSpec[transitionMatch[1]] && fogSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        } else if (fogSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                valueSpec: fogSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationWarning(key, fog[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","import validateExpression from './validate_expression';\nimport validateString from './validate_string';\n\nimport type ValidationError from '../error/validation_error';\n\ntype FormattedValidatorOptions = {\n    key: string;\n    value: unknown;\n};\n\nexport default function validateFormatted(options: FormattedValidatorOptions): ValidationError[] {\n    const errors = validateString(options);\n    if (errors.length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","import validateExpression from './validate_expression';\nimport validateString from './validate_string';\n\nimport type ValidationError from '../error/validation_error';\n\ntype ImageValidatorOptions = {\n    key: string;\n    value: unknown;\n};\n\nexport default function validateImage(options: ImageValidatorOptions): ValidationError[] {\n    const errors = validateString(options);\n    if (errors.length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","import ValidationError from '../error/validation_error';\nimport {getType, isObject, isString} from '../util/get_type';\nimport validate from './validate';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\n\ntype ProjectionValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nexport default function validateProjection(options: ProjectionValidatorOptions): ValidationError[] {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n\n    if (isObject(projection)) {\n        let errors: ValidationError[] = [];\n\n        for (const key in projection) {\n            errors = errors.concat(validate({\n                key,\n                value: projection[key],\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n\n        return errors;\n    }\n\n    if (!isString(projection)) {\n        return [new ValidationError('projection', projection, `object or string expected, ${getType(projection)} found`)];\n    }\n\n    return [];\n}\n","import validateObject from './validate_object';\nimport {default as ValidationError} from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport {isObject} from '../util/get_type';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification, IconsetSpecification} from '../types';\n\ntype IconsetValidatorOptions = {\n    key: string;\n    value: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n};\n\nfunction isSourceIconset(type: IconsetSpecification['type'], iconset: Record<PropertyKey, unknown>): iconset is Extract<IconsetSpecification, {type: 'source'}> {\n    return !!(type === 'source' && iconset.source);\n}\n\nexport default function validateIconset(options: IconsetValidatorOptions): ValidationError[] {\n    const iconset = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!isObject(iconset)) {\n        return [new ValidationError(key, iconset, 'object expected')];\n    }\n\n    if (!iconset.type) {\n        return [new ValidationError(key, iconset, '\"type\" is required')];\n    }\n\n    const type = unbundle(iconset.type) as IconsetSpecification['type'];\n\n    let errors: ValidationError[] = [];\n\n    errors = errors.concat(validateObject({\n        key,\n        value: iconset,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec: styleSpec[`iconset_${type}`],\n        style,\n        styleSpec\n    }));\n\n    if (isSourceIconset(type, iconset)) {\n        const source = style.sources && style.sources[iconset.source];\n        const sourceType = source && unbundle(source.type) as string;\n        if (!source) {\n            errors.push(new ValidationError(key, iconset.source, `source \"${iconset.source}\" not found`));\n        } else if (sourceType !== 'raster-array') {\n            errors.push(new ValidationError(key, iconset.source, `iconset cannot be used with a source of type ${String(sourceType)}, it only be used with a \"raster-array\" source type`));\n        }\n    }\n\n    return errors;\n}\n","import {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {isExpression} from '../expression/index';\nimport {isFunction} from '../function/index';\nimport validateImport from './validate_import';\nimport validateFunction from './validate_function';\nimport validateExpression from './validate_expression';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateBoolean from './validate_boolean';\nimport validateNumber from './validate_number';\nimport validateColor from './validate_color';\nimport validateEnum from './validate_enum';\nimport validateFilter from './validate_filter';\nimport validateLayer from './validate_layer';\nimport validateSource from './validate_source';\nimport validateModel from './validate_model';\nimport validateLight from './validate_light';\nimport validateLights from './validate_lights';\nimport validateTerrain from './validate_terrain';\nimport validateFog from './validate_fog';\nimport validateString from './validate_string';\nimport validateFormatted from './validate_formatted';\nimport validateImage from './validate_image';\nimport validateProjection from './validate_projection';\nimport validateIconset from './validate_iconset';\n\nimport type ValidationError from '../error/validation_error';\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification} from '../types';\nimport type {FunctionValidatorOptions} from './validate_function';\nimport type {ExpressionValidatorOptions} from './validate_expression';\n\nconst VALIDATORS: Record<string, (...args: unknown[]) => ValidationError[]> = {\n    '*': () => [],\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'model': validateModel,\n    'light': validateLight,\n    'light-3d': validateLights,\n    'terrain': validateTerrain,\n    'fog': validateFog,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'projection': validateProjection,\n    'import': validateImport,\n    'iconset': validateIconset,\n};\n\nexport type ValidatorOptions = {\n    /**\n     * String representing location of validation in style tree. Used only\n     * for more informative error reporting.\n     */\n    key: string;\n\n    /**\n     * Current value from style being evaluated. May be anything from a\n     * high level object that needs to be descended into deeper or a simple\n     * scalar value.\n     */\n    value: unknown;\n\n    /**\n     * Current spec being evaluated. Tracks value.\n     */\n    valueSpec?: {\n        type?: string;\n        expression?: {\n            interpolated?: boolean;\n            parameters?: Array<'zoom' | 'feature'>;\n        };\n        'property-type'?: 'data-driven';\n    };\n\n    /**\n     * Current full spec being evaluated.\n     */\n    styleSpec: StyleReference;\n\n    /**\n     * Current style being validated.\n     */\n    style: Partial<StyleSpecification>;\n\n    object?: object;\n    objectKey?: string;\n    propertyKey?: string;\n    propertyType?: string;\n    expressionContext?: string;\n};\n\n/**\n * Main recursive validation function.\n */\nexport default function validate(options: ValidatorOptions, arrayAsExpression: boolean = false): ValidationError[] {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n\n    if (valueSpec.expression) {\n        if (isFunction(unbundle(value))) return validateFunction(options as unknown as FunctionValidatorOptions);\n        if (isExpression(deepUnbundle(value))) return validateExpression(options as unknown as ExpressionValidatorOptions);\n    }\n\n    if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        const errors = VALIDATORS[valueSpec.type](options);\n        if (arrayAsExpression === true && errors.length > 0 && Array.isArray(options.value)) {\n            // Try to validate as an expression\n            return validateExpression(options as unknown as ExpressionValidatorOptions);\n        }\n\n        return errors;\n    }\n\n    const errors = validateObject(Object.assign({}, options, {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n    }));\n\n    return errors;\n}\n","import {default as ValidationError, ValidationWarning} from '../error/validation_error';\nimport {getType, isObject} from '../util/get_type';\nimport validateSpec from './validate';\n\nimport type {StyleReference} from '../reference/latest';\nimport type {StyleSpecification, LayerSpecification} from '../types';\n\ntype ObjectElementValidatorOptions = {\n    key: string;\n    value: unknown;\n    valueSpec?: unknown;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    object?: object;\n    objectKey?: string;\n};\n\ntype ObjectValidatorOptions = {\n    key: string;\n    value: unknown;\n    valueSpec?: object;\n    style: Partial<StyleSpecification>;\n    styleSpec: StyleReference;\n    object?: object;\n    objectKey?: string;\n    layer?: LayerSpecification;\n    objectElementValidators?: Record<string, (options: ObjectElementValidatorOptions) => ValidationError[]>;\n};\n\nexport default function validateObject(options: ObjectValidatorOptions): ValidationError[] {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!isObject(object)) {\n        return [new ValidationError(key, object, `object expected, ${getType(object)} found`)];\n    }\n\n    let errors: ValidationError[] = [];\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n\n        if (!validateElement) {\n            errors.push(new ValidationWarning(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-call\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n","import ValidationError from '../error/validation_error';\nimport validateString from './validate_string';\n\ntype GlyphsUrlValidatorOptions = {\n    key: string;\n    value: unknown;\n};\n\nexport default function validateGlyphsUrl({key, value}: GlyphsUrlValidatorOptions): ValidationError[] {\n    const errors = validateString({key, value});\n    if (errors.length) return errors;\n\n    const str = value as string;\n    if (str.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (str.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n","import validateObject from './validate_object';\nimport latestStyleSpec from '../reference/latest';\nimport validateGlyphsURL from './validate_glyphs_url';\n\nimport type ValidationError from '../error/validation_error';\nimport type {StyleReference} from '../reference/latest';\n\ntype StyleValidatorOptions = {\n    key?: string;\n};\n\nexport default function validateStyle(style: unknown, styleSpec: StyleReference = latestStyleSpec, options: StyleValidatorOptions = {}): ValidationError[] {\n    const errors = validateObject({\n        key: options.key || '',\n        value: style,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        valueSpec: Object.assign(\n            styleSpec.$root,\n            // Skip validation of the root properties that are not defined in the style spec (e.g. 'owner').\n            {'*': {type: '*'}},\n        ),\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL\n        }\n    });\n\n    return errors;\n}\n","import latestStyleSpec from './reference/latest';\nimport _validateStyle from './validate/validate_style';\nimport _validateSource from './validate/validate_source';\nimport _validateLight from './validate/validate_light';\nimport _validateLights from './validate/validate_lights';\nimport _validateTerrain from './validate/validate_terrain';\nimport _validateFog from './validate/validate_fog';\nimport _validateSnow from './validate/validate_snow';\nimport _validateRain from './validate/validate_rain';\nimport _validateLayer from './validate/validate_layer';\nimport _validateFilter from './validate/validate_filter';\nimport _validatePaintProperty from './validate/validate_paint_property';\nimport _validateLayoutProperty from './validate/validate_layout_property';\nimport _validateModel from './validate/validate_model';\n\nimport type {StyleReference} from './reference/latest';\nimport type {StyleSpecification} from './types';\n\nexport type ValidationError = {\n    message: string;\n    identifier?: string | null | undefined;\n    line?: number | null | undefined;\n};\n\nexport type ValidationErrors = ReadonlyArray<ValidationError>;\nexport type Validator<T extends (...args: unknown[]) => unknown = (...args: unknown[]) => unknown> = (...args: Parameters<T>) => ValidationErrors;\n\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `mapbox-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nexport function validateStyle(style: StyleSpecification, styleSpec: StyleReference = latestStyleSpec): ValidationErrors {\n    const errors = _validateStyle(style, styleSpec);\n    return sortErrors(errors);\n}\n\nexport const validateSource: Validator<typeof _validateSource> = opts => sortErrors(_validateSource(opts));\nexport const validateLight: Validator<typeof _validateLight> = opts => sortErrors(_validateLight(opts));\nexport const validateLights: Validator<typeof _validateLights> = opts => sortErrors(_validateLights(opts));\nexport const validateTerrain: Validator<typeof _validateTerrain> = opts => sortErrors(_validateTerrain(opts));\nexport const validateFog: Validator<typeof _validateFog> = opts => sortErrors(_validateFog(opts));\nexport const validateSnow: Validator<typeof _validateSnow> = opts => sortErrors(_validateSnow(opts));\nexport const validateRain: Validator<typeof _validateRain> = opts => sortErrors(_validateRain(opts));\nexport const validateLayer: Validator<typeof _validateLayer> = opts => sortErrors(_validateLayer(opts));\nexport const validateFilter: Validator<typeof _validateFilter> = opts => sortErrors(_validateFilter(opts));\nexport const validatePaintProperty: Validator<typeof _validatePaintProperty> = opts => sortErrors(_validatePaintProperty(opts));\nexport const validateLayoutProperty: Validator<typeof _validateLayoutProperty> = opts => sortErrors(_validateLayoutProperty(opts));\nexport const validateModel: Validator<typeof _validateModel> = opts => sortErrors(_validateModel(opts));\n\nfunction sortErrors(errors: ValidationErrors): ValidationErrors {\n    return errors.slice().sort((a, b) => a.line && b.line ? a.line - b.line : 0);\n}\n","/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n","import ParsingError from './error/parsing_error';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\n\nimport type {StyleSpecification} from './types';\n\nexport default function readStyle(style: string | Buffer | StyleSpecification): StyleSpecification {\n    if (style instanceof String || typeof style === 'string' || ArrayBuffer.isView(style)) {\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n            return jsonlint.parse(style.toString()) as StyleSpecification;\n        } catch (e) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            throw new ParsingError(e);\n        }\n    }\n\n    return style;\n}\n","import {validateStyle as validateStyleMin} from './validate_style.min';\nimport {v8} from './style-spec';\nimport readStyle from './read_style';\n\nimport type {StyleReference} from './reference/latest';\nimport type {ValidationErrors} from './validate_style.min';\nimport type {StyleSpecification} from './types';\n\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\n\nexport default function validateStyle(style: StyleSpecification | string | Buffer, styleSpec: StyleReference = v8): ValidationErrors {\n    let s = style;\n\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e] as ValidationErrors;\n    }\n\n    return validateStyleMin(s, styleSpec);\n}\n\nexport {\n    validateSource as source,\n    validateModel as model,\n    validateLight as light,\n    validateLayer as layer,\n    validateFilter as filter,\n    validateLights as lights,\n    validateTerrain as terrain,\n    validateFog as fog,\n    validatePaintProperty as paintProperty,\n    validateLayoutProperty as layoutProperty\n} from './validate_style.min';\n","import {validateStyle} from './validate_style.min';\nimport {v8} from './style-spec';\nimport readStyle from './read_style';\nimport ValidationError from './error/validation_error';\nimport {isString, isBoolean} from './util/get_type';\n\nimport type {StyleReference} from './reference/latest';\nimport type {ValidationErrors} from './validate_style.min';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    SourcesSpecification,\n    ImportSpecification\n} from './types';\n\ntype MapboxStyleSpecification = StyleSpecification & {\n    visibility?: 'public' | 'private';\n    protected?: boolean;\n};\n\nconst SUPPORTED_SPEC_VERSION = 8;\nconst MAX_SOURCES_IN_STYLE = 15;\n\nfunction isValid(value: string | null | undefined, regex: RegExp): boolean {\n    if (!value || !isString(value)) return true;\n    return !!value.match(regex);\n}\n\nfunction getSourceCount(source: SourceSpecification): number {\n    if ('url' in source) {\n        return source.url.split(',').length;\n    } else {\n        return 0;\n    }\n}\n\nfunction getAllowedKeyErrors(obj: object, keys: string[], path?: string | null): Array<ValidationError> {\n    const allowed = new Set(keys);\n    const errors: ValidationError[] = [];\n    Object.keys(obj).forEach(k => {\n        if (!allowed.has(k)) {\n            const prop = path ? `${path}.${k}` : null;\n            errors.push(new ValidationError(prop, obj[k], `Unsupported property \"${k}\"`));\n        }\n    });\n    return errors;\n}\n\nconst acceptedSourceTypes = new Set<SourceSpecification['type']>(['vector', 'raster', 'raster-dem', 'raster-array', 'model', 'batched-model']);\nfunction getSourceErrors(source: SourceSpecification, i: number): Array<ValidationError> {\n    const errors: ValidationError[] = [];\n\n    /*\n     * Inlined sources are not supported by the Mapbox Styles API, so only\n     * \"type\", \"url\", and \"tileSize\", \"promoteId\" properties are valid\n     */\n    const sourceKeys = ['type', 'url', 'tileSize', 'promoteId'];\n    errors.push(...getAllowedKeyErrors(source, sourceKeys, 'source'));\n\n    /*\n     * \"type\" is required and must be one of \"vector\", \"raster\", \"raster-dem\", \"raster-array\"\n     */\n    if (!acceptedSourceTypes.has(String(source.type) as SourceSpecification['type'])) {\n        errors.push(new ValidationError(`sources[${i}].type`, source.type, `Expected one of [${Array.from(acceptedSourceTypes).join(\", \")}]`));\n    }\n\n    /*\n     * \"source\" is required. Valid examples:\n     * mapbox://mapbox.abcd1234\n     * mapbox://penny.abcd1234\n     * mapbox://mapbox.abcd1234,penny.abcd1234\n     */\n    const sourceUrlPattern = /^mapbox:\\/\\/([^/]*)$/;\n    if (!('url' in source) || !isValid(source.url, sourceUrlPattern)) {\n        errors.push(new ValidationError(`sources[${i}].url`, (source as {url?: string}).url, 'Expected a valid Mapbox tileset url'));\n    }\n\n    return errors;\n}\n\nfunction getMaxSourcesErrors(sourcesCount: number): Array<ValidationError> {\n    const errors: ValidationError[] = [];\n    if (sourcesCount > MAX_SOURCES_IN_STYLE) {\n        errors.push(new ValidationError('sources', null, `Styles must contain ${MAX_SOURCES_IN_STYLE} or fewer sources`));\n    }\n    return errors;\n}\n\nfunction getSourcesErrors(sources: SourcesSpecification): {\n    errors: Array<ValidationError>;\n    sourcesCount: number;\n} {\n    const errors = [];\n    let sourcesCount = 0;\n\n    Object.keys(sources).forEach((s: string, i: number) => {\n        const sourceErrors = getSourceErrors(sources[s], i);\n\n        // If source has errors, skip counting\n        if (!sourceErrors.length) {\n            sourcesCount = sourcesCount + getSourceCount(sources[s]);\n        }\n\n        errors.push(...sourceErrors);\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    return {errors, sourcesCount};\n}\n\nfunction getImportErrors(imports: ImportSpecification[] = []): {errors: Array<ValidationError>; sourcesCount: number} {\n    let errors: Array<ValidationError> = [];\n\n    let sourcesCount = 0;\n    const validateImports = (imports: ImportSpecification[] = []) => {\n        for (const importSpec of imports) {\n            const style = importSpec.data;\n            if (!style) continue;\n\n            if (style.imports) {\n                validateImports(style.imports);\n            }\n\n            errors = errors.concat(getRootErrors(style, Object.keys(v8.$root)));\n\n            if (style.sources) {\n                const sourcesErrors = getSourcesErrors(style.sources);\n                sourcesCount += sourcesErrors.sourcesCount;\n                errors = errors.concat(sourcesErrors.errors);\n            }\n        }\n    };\n\n    validateImports(imports);\n    if (imports.length !== (new Set(imports.map(i => i.id))).size) {\n        errors.push(new ValidationError(null, null, 'Duplicate ids of imports'));\n    }\n\n    return {errors, sourcesCount};\n}\n\nfunction getRootErrors(style: MapboxStyleSpecification, specKeys: string[]): Array<ValidationError> {\n    const errors: ValidationError[] = [];\n\n    /*\n     * The following keys are optional but fully managed by the Mapbox Styles\n     * API. Values on stylesheet on POST or PATCH will be ignored: \"owner\",\n     * \"id\", \"cacheControl\", \"draft\", \"created\", \"modified\", \"protected\"\n     *\n     * The following keys are optional. The Mapbox Styles API respects value on\n     * stylesheet on PATCH, but ignores the value on POST: \"visibility\"\n     */\n    const optionalRootProperties = [\n        'owner',\n        'id',\n        'cacheControl',\n        'draft',\n        'created',\n        'modified',\n        'visibility',\n        'protected',\n        'models',\n        'lights'\n    ];\n\n    const allowedKeyErrors = getAllowedKeyErrors(style, [...specKeys, ...optionalRootProperties]);\n    errors.push(...allowedKeyErrors);\n\n    if (style.version > SUPPORTED_SPEC_VERSION || style.version < SUPPORTED_SPEC_VERSION) {\n        errors.push(new ValidationError('version', style.version, `Style version must be ${SUPPORTED_SPEC_VERSION}`));\n    }\n\n    /*\n     * \"glyphs\" is optional. If present, valid examples:\n     * mapbox://fonts/penny/{fontstack}/{range}.pbf\n     * mapbox://fonts/mapbox/{fontstack}/{range}.pbf\n     */\n    const glyphUrlPattern = /^mapbox:\\/\\/fonts\\/([^/]*)\\/{fontstack}\\/{range}.pbf$/;\n    if (!isValid(style.glyphs, glyphUrlPattern)) {\n        errors.push(new ValidationError('glyphs', style.glyphs, 'Styles must reference glyphs hosted by Mapbox'));\n    }\n\n    /*\n     * \"sprite\" is optional. If present, valid examples:\n     * mapbox://sprites/penny/abcd1234\n     * mapbox://sprites/mapbox/abcd1234/draft\n     * mapbox://sprites/cyrus/abcd1234/abcd1234\n     */\n    const spriteUrlPattern = /^mapbox:\\/\\/sprites\\/([^/]*)\\/([^/]*)\\/?([^/]*)?$/;\n    if (!isValid(style.sprite, spriteUrlPattern)) {\n        errors.push(new ValidationError('sprite', style.sprite, 'Styles must reference sprites hosted by Mapbox'));\n    }\n\n    /*\n     * \"visibility\" is optional. If present, valid examples:\n     * \"private\"\n     * \"public\"\n     */\n    const visibilityPattern = /^(public|private)$/;\n    if (!isValid(style.visibility, visibilityPattern)) {\n        errors.push(new ValidationError('visibility', style.visibility, 'Style visibility must be public or private'));\n    }\n\n    if (style.protected !== undefined && !isBoolean(style.protected)) {\n        errors.push(new ValidationError('protected', style.protected, 'Style protection must be true or false'));\n    }\n\n    return errors;\n}\n\n/**\n * Validate a Mapbox GL style against the style specification and check for\n * compatibility with the Mapbox Styles API.\n *\n * @param {Object} style The style to be validated.\n * @returns {Array<ValidationError>}\n * @example\n *   var validateMapboxApiSupported = require('mapbox-gl-style-spec/lib/validate_style_mapbox_api_supported.js');\n *   var errors = validateMapboxApiSupported(style);\n */\nexport default function validateMapboxApiSupported(style: MapboxStyleSpecification, styleSpec: StyleReference = v8): ValidationErrors {\n    let s = style;\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e] as ValidationErrors;\n    }\n\n    let errors = validateStyle(s, styleSpec)\n        .concat(getRootErrors(s, Object.keys(v8.$root)));\n\n    let sourcesCount = 0;\n    if (s.sources) {\n        const sourcesErrors = getSourcesErrors(s.sources);\n        sourcesCount += sourcesErrors.sourcesCount;\n        errors = errors.concat(sourcesErrors.errors);\n    }\n\n    if (s.imports) {\n        const importsErrors = getImportErrors(s.imports);\n        sourcesCount += importsErrors.sourcesCount;\n        errors = errors.concat(importsErrors.errors);\n    }\n\n    errors = errors.concat(getMaxSourcesErrors(sourcesCount));\n\n    return errors;\n}\n","type ExpressionType = 'data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress' | 'raster-value' | 'sky-radial-progress' | 'pitch' | 'distance-from-center' | 'measure-light' | 'raster-particle-speed'>;\n\nexport type ExpressionSpecification = {\n    interpolated: boolean,\n    parameters?: ExpressionParameters,\n    relaxZoomRestriction?: boolean\n};\n\nexport type StylePropertySpecification = {\n    type: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition?: boolean,\n    default?: number,\n    tokens: never\n} | {\n    type: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition?: boolean,\n    default?: string,\n    tokens?: boolean\n} | {\n    type: 'boolean',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition?: boolean,\n    overridable?: boolean,\n    default?: boolean,\n    tokens?: never\n} | {\n    type: 'enum',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    values: {[_: string]: unknown},\n    transition?: boolean,\n    default?: string,\n    tokens: never\n} | {\n    type: 'color',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition?: boolean,\n    default?: string,\n    tokens: never,\n    overridable: boolean\n} | {\n    type: 'array',\n    value: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition?: boolean,\n    default?: Array<number>,\n    tokens: never\n} | {\n    type: 'array',\n    value: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition?: boolean,\n    default?: Array<string>,\n    tokens: never\n} | {\n    type: 'resolvedImage',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition?: boolean,\n    default?: string,\n    tokens: never\n};\n\nimport v8 from './reference/v8.json';\nimport latest from './reference/latest';\nimport format from './format';\nimport migrate from './migrate';\nimport composite from './composite';\nimport derefLayers from './deref';\nimport diff from './diff';\nimport ValidationError from './error/validation_error';\nimport ParsingError from './error/parsing_error';\nimport {StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction} from './expression/index';\nimport featureFilter, {isExpressionFilter} from './feature_filter/index';\nimport convertFilter from './feature_filter/convert';\nimport Color from './util/color';\nimport {createFunction, isFunction} from './function/index';\nimport convertFunction from './function/convert';\nimport {eachSource, eachLayer, eachProperty} from './visit';\nimport validate from './validate_style';\nimport validateMapboxApiSupported from './validate_mapbox_api_supported';\n\nconst expression = {\n    StyleExpression,\n    isExpression,\n    isExpressionFilter,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = {eachSource, eachLayer, eachProperty};\n\nexport {\n    v8,\n    latest,\n    format,\n    migrate,\n    composite,\n    derefLayers,\n    diff,\n    ValidationError,\n    ParsingError,\n    expression,\n    featureFilter,\n    convertFilter,\n    Color,\n    styleFunction as function,\n    validate,\n    validateMapboxApiSupported,\n    visit\n};\n"],"names":["stringOrChar","stringify","passedObj","options","indent","JSON","undefined","slice","maxLength","Infinity","replacer","_stringify","obj","currentIndent","reserved","toJSON","string","length","prettified","replace","match","stringLiteral","parse","nextIndent","items","index","start","end","Array","isArray","push","keys","Object","key","keyPart","value","join","sortKeysBy","reference","result","format","style","space","$root","layers","map","layer","stringifyPretty","getPropertyReference","propertyName","i","Reference","layout","paint","eachSource","callback","k","sources","eachLayer","eachProperty","inner","propertyType","type","properties","forEach","path","id","set","x","eachLayout","indexOf","eachPaint","resolveConstant","constants","isFunction","stops","renameProperty","from","to","version","source","url","coordinates","coord","reverse","property","stop","migrateFontstackURL","input","inputParsed","URL","inputPathnameParts","pathname","split","protocol","hostname","assert","decodeURI","predicate","Error","glyphs","migrateFontStack","font","splitAndTrim","s","trim","firstSymbolLayer","symbolLayers","splice","concat","ParsingError","constructor","message","Scope","parent","bindings","name","expression","get","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","ResolvedImageType","array","itemType","N","toString","valueMemberTypes","checkSubtype","expected","t","memberType","isValidType","provided","allowedTypes","some","isValidNativeType","typeEquals","a","b","kCSSColorTable","clamp_css_byte","Math","round","clamp_css_float","f","parse_css_int","str","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","parseCSSColor","css_str","toLowerCase","iv","substr","op","ep","fname","params","alpha","pop","l","exports","e","number","color","Color","r","g","d","rgba","toNonPremultipliedRenderColor","lut","NonPremultipliedRenderColor","toPremultipliedRenderColor","PremultipliedRenderColor","clone","RenderColor","premultiplied","image","height","N2","r0","floor","g0","b0","r1","ceil","g1","b1","rw","gw","bw","data","i0","i1","i2","i3","i4","i5","i6","i7","lerp","toArray","toHslaArray","invA","red","min","max","green","blue","delta","toArray01","toArray01Scaled","scale","toArray01Linear","pow","black","white","transparent","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","text","fontStack","textColor","normalize","Formatted","sections","fromString","unformatted","isEmpty","section","hasPrimary","factory","serialize","serialized","primaryId","getPrimary","separator","ImageId","iconsetId","isEqual","ImageVariant","assign","transform","DOMMatrix","c","scaleSelf","factor","yFactor","ResolvedImage","primaryOptions","secondaryId","secondaryOptions","available","primaryName","secondaryName","hasSecondary","getSecondary","build","validateRGBA","validateHSLA","isValue","mixed","item","typeOf","String","Literal","args","context","error","expectedType","evaluate","eachChild","outputDefined","RuntimeError","types","boolean","object","Assertion","parsed","ctx","fn","every","arg","FormatExpression","firstArg","nextTokenMayBeObject","parseObjectValue","lastExpression","content","evaluateSection","evaluatedContent","isImageOptions","ImageExpression","inputPrimary","inputSecondary","inputPrimaryOptions","inputSecondaryOptions","_imageWarnHistory","namePrimary","nameSecondary","paramsPrimary","iconsetIdPrimary","iconset","paramsSecondary","iconsetIdSecondary","nextArgId","imageExpression","tryParseImage","imageName","tryParseOptions","optionsContext","parsedParams","childContext","typeAnnotation","evaluateParams","err","availableImages","serializeOptions","getType","val","isString","isNumber","isBoolean","isObject","Number","Boolean","Coercion","arrayLength","member","parsedMember","registry","parseColor","num","isNaN","valueToString","child","geometryTypes","EvaluationContext","scope","iconImageUseTheme","globals","feature","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","geometryType","geometry","canonicalID","measureLight","_","brightness","distanceFromCenter","center","y","dX","dY","bX","bearing","bY","dist","cached","getConfig","CompoundExpression","overloadIndex","_evaluate","_overloadIndex","definition","definitions","overloads","availableOverloads","overloadParams","signatureContext","ParsingContext","_scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","signature","CollatorExpression","Point","prototype","add","p","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","m","_matMult","unit","_unit","perp","_perp","_round","mag","sqrt","equals","other","distSqr","dx","dy","angle","atan2","angleTo","angleWith","angleWithSep","cos","sin","convert","calculateSignedArea","ring","sum","len","j","p1","p2","classifyRings","rings","maxRings","polygons","polygon","ccw","area","abs","updateBBox","bbox","boxWithinBox","bbox1","bbox2","onBoundary","x1","y1","x2","y2","rayIntersect","pointWithinPolygon","point","trueOnBoundary","inside","len2","q1","q2","v1","v2","twoSided","x3","y3","det1","det2","segmentIntersectSegment","vectorP","vectorQ","EXTENT","mercatorXfromLng","lng","mercatorYfromLat","lat","PI","log","tan","getTileCoordinates","tilesAtZoom","z","pointWithinPolygons","lineIntersectPolygon","lineStringWithinPolygon","line","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","shift","resetBBox","getTilePoints","pointBBox","shifts","tilePoints","points","getTileLines","lineBBox","tileLines","tileLine","pointsWithinPolygons","polygonGeometry","tilePolygon","tilePolygons","linesWithinPolygons","Within","geojson","geometries","features","factors","kilometers","miles","nauticalmiles","meters","metres","yards","feet","inches","RE","FE","E2","RAD","CheapRuler","fromTile","units","n","atan","exp","coslat","w2","w","kx","ky","distance","wrap","destination","offset","lineDistance","total","along","p0","interpolate","pointToSegmentDistance","pointOnLine","minDist","minX","minY","minI","minT","sqDist","lineSlice","tmp","lineSliceAlong","bufferPoint","buffer","v","bufferBBox","insideBBox","deg","TinyQueue","_down","_up","top","bottom","peek","pos","current","halfLength","bestChild","right","compareMax","MIN_POINT_SIZE","MIN_LINE_POINT_SIZE","isDefaultBBOX","defualtBBox","getRangeSize","range","isRangeSafe","threshold","ret","console","warn","splitRange","isLine","size","size1","range1","range2","getBBox","pointSets","getPolygonBBox","bboxToBBoxDistance","ruler","NaN","lngFromMercatorX","latFromMercatorY","getLngLatPoint","getLngLatPoints","coords","pointToLineDistance","nearestPoint","pointsToLineDistance","rangeA","rangeB","subLine","segmentToSegmentDistance","dist1","dist2","lineToLineDistance","line1","line2","pointsToPointsDistance","pointSet1","pointSet2","pointToPolygonDistance","ringLen","lineToPolygonDistance","polygonIntersect","polygon1","polygon2","polygonToPolygonDistance","currentMiniDist","ring1","len1","ring2","updateQueue","distQueue","miniDist","r2","tempDist","pointSetToPolygonDistance","initialDistPair","setThreshold","distPair","newRanges","pointSetsDistance","isLine1","isLine2","set1Threshold","set2Threshold","newRangesA","newRangesB","pointSetToLinesDistance","pointSet","lines","pointSetToPolygonsDistance","polygonsToPolygonsDistance","polygons1","polygons2","pointsToGeometryDistance","originGeometry","lngLatPoints","linesToGeometryDistance","lngLatLines","lngLatLine","polygonsToGeometryDistance","lngLatPolygons","lngLatPolygon","isTypeValid","Distance","isFeatureConstant","test","Config","featureConstant","isStateConstant","getConfigDependencies","singleConfig","Set","isGlobalPropertyConstant","FQIDSeparator","makeConfigFQID","ownScope","contextScope","filter","coerceValue","clampToAllowedNumber","step","configKey","configScopeValue","configKeyValue","configScope","fqid","config","isConstant","default","values","minValue","maxValue","stepValue","defaultValue","originalScope","includes","res","Var","boundExpression","part","expr","_parse","annotate","Expr","actual","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","lastIndex","lowerIndex","upperIndex","currentIndex","currentValue","nextValue","Step","labels","outputs","label","outputType","labelKey","valueKey","stopCount","out","module","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","d2","t0","t1","solve","Xn","Yn","Zn","t2","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateLab","interpolateNumber","rgbToHcl","hclToRgb","hclColor","interpolateHue","interpolateHcl","lab","forward","hcl","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","base","controlPoints","ub","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","needsAnnotation","argCount","firstImage","Let","binding","At","AtInterpolated","fraction","In","needle","haystack","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","output","sortedLabels","sort","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","Slice","beginIndex","endIndex","Split","delimiter","isComparableType","eq","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","mulberry32","imul","expressions","hsla","colorFunction","binarySearch","varargs","hashString","hash","char","charCodeAt","typeToString","worldview","zoom","pitch","heatmapDensity","lineProgress","rasterValue","rasterParticleSpeed","skyRadialProgress","accumulated","LN2","E","LN10","log2","asin","acos","isSupportedScript","toUpperCase","seed","seedVal","random","success","expressionHasParameter","parameter","parameters","supportsPropertyExpression","spec","supportsLightExpression","supportsZoomExpression","supportsLineProgressExpression","supportsInterpolation","interpolated","identityFunction","createFunction","propertySpec","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","colorSpace","colorSpaces","innerFun","hashedStops","categoricalKeyType","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","create","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","bind","coalesce","keyType","evaluated","interp","colorspace","evaluatedLower","apply","evaluatedUpper","StyleExpression","_warningHistory","_evaluator","_defaultValue","getDefaultValue","_enumValues","configDependencies","evaluateWithoutErrorHandling","isExpression","createExpression","parser","getExpectedType","ZoomConstantExpression","isLightConstant","isLineProgressConstant","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isZoomConstant","canRelaxZoomRestriction","relaxZoomRestriction","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","deserialize","normalizePropertyExpression","constant","childResult","enum","formatted","resolvedImage","convertLiteral","convertFunction","convertIdentityFunction","tokens","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","getInterpolateOperator","featureFunctionParameters","functionType","getFunctionType","appendStopPair","fixupDegenerateStepCurve","getFallback","isStep","curve","re","exec","literal","unbundle","valueOf","deepUnbundle","unbundledValue","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","extractStaticFilter","filterFunc","filterSpec","latest","compiledStaticFilter","globalProperties","dynamicFilterFunc","compiledDynamicFilter","geometryNeeded","dynamicFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","collapsed","collapsedExpression","subExpression","isBranchingDynamically","isRootExpressionDynamic","dynamicConditionExpressions","param","converted","convertComparisonOp","convertNegation","convertDisjunctionOp","convertInOp","convertHasOp","filters","_convertFilter","expectedTypes","children","typechecks","runtimeTypeChecks","conditions","negate","uniformTypes","uniqueValues","migrated","migrateToV8","migrateToExpressions","styleIDs","sourceIDs","compositedSourceLayers","compositeID","deref","refProperties","derefLayers","ref","deepEqual","operations","setStyle","addLayer","removeLayer","setPaintProperty","setLayoutProperty","setSlot","setFilter","addSource","removeSource","setGeoJSONSourceData","setLayerZoomRange","setLayerProperty","setCenter","setZoom","setBearing","setPitch","setSprite","setGlyphs","setTransition","setLight","setTerrain","setFog","setSnow","setRain","setCamera","setLights","setProjection","addImport","removeImport","updateImport","addIconset","removeIconset","sourceId","after","commands","command","sourcesRemoved","updateSource","canUpdateGeoJSON","before","prop","hasOwnProperty","diffSources","diffLayerPropertyChanges","layerId","klass","pluckId","indexById","group","diffLayers","beforeOrder","afterOrder","beforeIndex","reduce","afterIndex","tracker","clean","beforeLayer","afterLayer","insertBeforeLayerId","lastIndexOf","slot","minzoom","maxzoom","diffImports","importId","insertBefore","afterImport","beforeImport","diffIconsets","diffStyles","sprite","imports","transition","light","fog","snow","rain","projection","lights","camera","iconsets","removeOrAddSourceCommands","beforeLayers","beforeTerrain","terrain","ValidationError","identifier","__line__","ValidationWarning","validateImport","styleSpec","defineProperty","importSpec","enumerable","validateObject","valueSpec","import","validateStyle","validateArray","arraySpec","validateArrayElement","arrayElementValidator","validate","arrayElementSpec","minimum","maximum","function","$version","arrayIndex","validateNumber","specMin","specMax","hasObjectStops","validateFunction","functionValueSpec","stopKeyType","stopDomainValues","previousStopDomainValue","previousStopDomainZoom","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","objectElementValidators","validateFunctionStops","validateFunctionDefault","validateFunctionStop","stopKey","nextStopDomainZoom","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","disallowedFilterParameters","checkDisallowedParameters","disallowedParameters","delete","allowedParameters","validateBoolean","validateColor","validateEnum","validateFilter","validateNonExpressionFilter","filter_operator","geometry_type","validateProperty","objectKey","layerSpec","useThemeMatch","transitionMatch","tokenMatch","example","validateAppearance","condition","appearance","validateCondition","validateProperties","paintProperties","layoutProperties","propertyValidationOptions","validatePaintProperty","validateLayoutProperty","validateLayer","otherLayer","sourceType","lineMetrics","validateSpec","appearances","validationErrors","dedupedNames","validateString","promoteId","validatePromoteId","validateSource","source_geojson","clusterProperties","propValue","mapExpr","reduceExpr","source_video","source_image","getSourceTypeValues","memo","onlyFeatureDependent","isValidUrl","allowRelativeUrls","isRelative","validateModel","validateLight","lightSpec","validateLights","lightType","otherLight","lightPropertySpec","validateTerrain","terrainSpec","validateFog","fogSpec","validateFormatted","validateImage","validateProjection","projectionSpec","isSourceIconset","validateIconset","VALIDATORS","arrayAsExpression","elementSpecs","elementValidators","elementSpecKey","elementSpec","validateElement","required","validateGlyphsUrl","latestStyleSpec","validateGlyphsURL","_validateStyle","sortErrors","o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","first_line","table","defaultActions","parseError","recoverable","self","stack","vstack","lstack","TERROR","EOF","call","arguments","lexer","sharedState","setInput","yylloc","yyloc","ranges","getPrototypeOf","lex","token","symbol","state","action","yyval","newState","errStr","showPosition","loc","last_line","first_column","last_column","_input","_more","_backtrack","done","matched","conditionStack","ch","unput","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","popState","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","require","readStyle","ArrayBuffer","isView","jsonlint","v8","validateStyleMin","SUPPORTED_SPEC_VERSION","MAX_SOURCES_IN_STYLE","isValid","regex","getSourceCount","getAllowedKeyErrors","allowed","acceptedSourceTypes","getSourceErrors","sourceKeys","sourceUrlPattern","getMaxSourcesErrors","sourcesCount","getSourcesErrors","sourceErrors","getImportErrors","validateImports","getRootErrors","sourcesErrors","specKeys","optionalRootProperties","allowedKeyErrors","glyphUrlPattern","spriteUrlPattern","visibilityPattern","visibility","protected","validateMapboxApiSupported","importsErrors","styleFunction","visit"],"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","x_google_ignoreList":[0,7,26,29,30,39,104]}